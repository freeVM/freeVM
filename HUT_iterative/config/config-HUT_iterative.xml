<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
     
         http://www.apache.org/licenses/LICENSE-2.0
     
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License. 
-->

<cruisecontrol>

    <!--The cc.property file contains the name and values of properties-->
    <property file="cc.properties" />
    <property name="cl.prefix" value="[build-test alert] BUILD FAILED ${os} ${cc} debug: classlib "/>
    <property name="vm.prefix" value="[build-test alert] BUILD FAILED ${os} ${cc} debug: drlvm"/>
    <property name="cl.prefix.ok" value="[build-test alert] BUILD FIXED ${os} ${cc} debug: classlib "/>
    <property name="vm.prefix.ok" value="[build-test alert] BUILD FIXED ${os} ${cc} debug: drlvm"/>

    <project name="classlib">

        <listeners>
            <currentbuildstatuslistener file="logs/${project.name}/status.txt"/>
        </listeners>

        <bootstrappers>
            <svnbootstrapper localWorkingCopy="projects/classlib/trunk" />
            <svnbootstrapper localWorkingCopy="projects/drlvm/trunk" />
        </bootstrappers>

        <modificationset quietperiod="60">
            <svn localWorkingCopy="projects/classlib/trunk"/>
        </modificationset>

        <schedule interval="${timeout}">
        	<ant target="fetch-depends rebuild" antWorkingDir="projects/${project.name}/trunk" timeout="${ttimeout}" usedebug="false">
        	    <property name="${proxy.host.property}" value="${proxy.value}"/>
        	    <property name="${proxy.port.property}" value="${port.value}"/>
        	    <jvmarg arg="-Xms200M" />
        	    <jvmarg arg="-Xmx700M" />
        	</ant>
        </schedule>

	<publishers>
            <antpublisher   
                 antworkingdir="."  
                 buildfile="copyres.xml"  
                 uselogger="true"  
                 usedebug="false"  
                 target="copy.res"> 
                <property name="VM" value="drlvm"/> 
            </antpublisher> 
            <onfailure>
                <xsltlogpublisher directory="."  outfilename="classlib.txt"  xsltfile="br.xsl" />
                <antpublisher   
                     antworkingdir="."  
                     buildfile="copyres.xml"  
                     uselogger="true"  
                     usedebug="true"  
                     target="email.res"> 
                     <property name="file" value="classlib.txt"/> 
                     <property name="mailhost" value="${server_addr}"/>
                     <property name="fromaddress" value="${report_from}"/>
                     <property name="toaddress" value="${report_to}"/>
                     <property name="subject" value="${cl.prefix}"/>
                     <property name="flag" value="${project.name}"/>
                </antpublisher> 
            </onfailure>
            <onsuccess>
                <xsltlogpublisher directory="."  outfilename="classlib.txt.ok"  xsltfile="br.xsl" />
                <antpublisher   
                     antworkingdir="."  
                     buildfile="copyres.xml"  
                     uselogger="true"  
                     usedebug="true"  
                     target="email.res.ok"> 
                     <property name="file" value="classlib.txt.ok"/> 
                     <property name="mailhost" value="${server_addr}"/>
                     <property name="fromaddress" value="${report_from}"/>
                     <property name="toaddress" value="${report_to}"/>
                     <property name="subject" value="${cl.prefix.ok}"/>
                     <property name="flag" value="${project.name}"/>
                </antpublisher> 
            </onsuccess>
        </publishers>

    </project>

    <project name="drlvm">

        <listeners>
            <currentbuildstatuslistener file="logs/${project.name}/status.txt"/>
        </listeners>

        <modificationset quietperiod="30">
            <svn localWorkingCopy="projects/drlvm/trunk"/>
            <svn localWorkingCopy="projects/classlib/trunk"/>
            <buildstatus logdir="logs/classlib"/>
        </modificationset>

        <schedule interval="${timeout}">
        	<exec command="${sh}" args="${cmd.prefix} ${cmd} -D${proxy.host.vm}=${proxy.value} -D${proxy.port.vm}=${port.value} -Dexternal.dep.CLASSLIB.loc=${wdir}/projects/classlib/trunk clean update build" workingdir="projects/${project.name}/trunk/build" timeout="${ttimeout}" errorstr="FAILED"/>
        </schedule>

	<publishers>
            <onfailure>
                <xsltlogpublisher directory="." outfilename="drlvm.txt" xsltfile="br.xsl" />
                <antpublisher   
                    antworkingdir="."  
                    buildfile="copyres.xml"  
                    uselogger="true"  
                    usedebug="false"  
                    target="email.res"> 
                    <property name="file" value="drlvm.txt"/> 
                    <property name="mailhost" value="${server_addr}"/>
                    <property name="fromaddress" value="${report_from}"/>
                    <property name="toaddress" value="${report_to}"/>
                    <property name="subject" value="${vm.prefix}"/>
                    <property name="flag" value="${project.name}"/>
                </antpublisher> 
            </onfailure>
            <onsuccess>
                <xsltlogpublisher directory="." outfilename="drlvm.txt.ok" xsltfile="br.xsl" />
                <antpublisher   
                    antworkingdir="."  
                    buildfile="copyres.xml"  
                    uselogger="true"  
                    usedebug="false"  
                    target="email.res.ok"> 
                    <property name="file" value="drlvm.txt.ok"/> 
                    <property name="mailhost" value="${server_addr}"/>
                    <property name="fromaddress" value="${report_from}"/>
                    <property name="toaddress" value="${report_to}"/>
                    <property name="subject" value="${vm.prefix.ok}"/>
                    <property name="flag" value="${project.name}"/>
                </antpublisher> 
            </onsuccess>
	</publishers>

    </project>

    <project name="HUT-drlvm-iterative">

        <listeners>
            <currentbuildstatuslistener file="logs/${project.name}/status.txt"/>
        </listeners>

        <modificationset quietperiod="60">
            <svn localWorkingCopy="projects/classlib/trunk"/>
            <svn localWorkingCopy="projects/drlvm/trunk"/>
            <buildstatus logdir="logs/classlib"/>
            <buildstatus logdir="logs/drlvm"/>
	    <!--alwaysbuild/-->
        </modificationset>

        <schedule interval="${timeout}">
        	<!--exec command="${sh}" args="${cmd.prefix} ${cmd_HUT_iterative} ${wdir}/projects/drlvm/trunk/build/${os}_ia32_${cc}_debug/deploy/jdk/jre drl ${HUT_forkmode} ${wdir}/projects/classlib/trunk ${HUT_iterations}" workingdir="HUT_iterative" timeout="${HUT_iterative_timeout}" errorstr="FAILED" /-->
        	<exec command="${sh}" args="${cmd.prefix} ${cmd_HUT_iterative} ${wdir}${fs}projects${fs}drlvm${fs}trunk${fs}build${fs}${os}_ia32_${cc}_debug${fs}deploy${fs}jdk${fs}jre drl ${HUT_forkmode} ${wdir}${fs}projects${fs}classlib${fs}trunk ${HUT_iterations}" workingdir="HUT_iterative" timeout="${HUT_iterative_timeout}" errorstr="FAILED" />
        </schedule>

        <log dir="logs/${project.name}">
            <merge dir="projects/classlib/trunk/build" pattern="TEST-*.xml" />
        </log>
			     
	<publishers>
            <antpublisher   
                 antworkingdir="."  
                 buildfile="copyres.xml"  
                 uselogger="true"  
                 usedebug="false"  
                 target="copy.HUT-iterative.res"> 
                <property name="VM" value="drlvm"/> 
            </antpublisher> 
            <onfailure>
                <xsltlogpublisher directory="."  outfilename="HUT-iterative.txt"  xsltfile="br.xsl" />
                <antpublisher   
                     antworkingdir="."  
                     buildfile="copyres.xml"  
                     uselogger="true"  
                     usedebug="true"  
                     target="email.always.res"> 
                     <property name="file" value="HUT-iterative.txt"/> 
                     <property name="mailhost" value="${server_addr}"/>
                     <property name="fromaddress" value="${report_from}"/>
                     <property name="toaddress" value="${report_to}"/>
                     <property name="subject" value="${cl.prefix} over drlvm"/>
                     <property name="flag" value="${project.name}"/>
                </antpublisher> 
            </onfailure>
            <onsuccess>
                <xsltlogpublisher directory="."  outfilename="HUT-iterative.txt.ok"  xsltfile="br.xsl" />
                <antpublisher   
                     antworkingdir="."  
                     buildfile="copyres.xml"  
                     uselogger="true"  
                     usedebug="true"  
                     target="email.always.res"> 
                     <property name="file" value="HUT-iterative.txt.ok"/> 
                     <property name="mailhost" value="${server_addr}"/>
                     <property name="fromaddress" value="${report_from}"/>
                     <property name="toaddress" value="${report_to}"/>
                     <property name="subject" value="${cl.prefix.ok} over drlvm"/>
                     <property name="flag" value="${project.name}"/>
                </antpublisher> 
            </onsuccess>
	</publishers>

    </project>

</cruisecontrol>
