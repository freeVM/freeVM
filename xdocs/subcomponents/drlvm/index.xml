<?xml version="1.0" encoding="ISO-8859-1"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements. See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License. You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<document>

 <properties>
  <title>Apache Harmony DRL Virtual Machine</title>
  <author email="dev@harmony.apache.org">Harmony Documentation Team</author>
 </properties>

 <body>

<section name="DRLVM">
    <p> 
    DRLVM stands for Dynamic Runtime Layer Virtual Machine, a clean-room implementation of the J2SE 1.5.0
        virtual machine.
    </p>
    <p>
    Key goals of DRL include the following: 
    </p>
    <ul>
        <li><em>Modularity:</em> Functionality is grouped into a limited number of 
        coarse-grained modules with well defined interfaces. </li>
        <li><em>Pluggability:</em> Module implementations can be replaced at compile time or run time. 
        Multiple implementations of a given module are possible. </li>
        <li><em>Consistency:</em> Interfaces are consistent across platforms. </li>
        <li><em>Performance:</em> Interfaces fully enable implementation of modules optimized for specific target platforms.</li>
    </ul>
    <p>
        The following documentation links are specific to the DRLVM virtual machine
        effort underway at Apache Harmony.
    </p>
        
    <subsection name="Developing and Building the code">
        <ul>
            <li>
                <a href="http://svn.apache.org/viewvc/harmony/enhanced/drlvm/trunk/README.txt?view=co">
                  README</a>
              <br />
              Source package and building instructions for the VM source code.
              </li>
            <li>
              <a href="getting_started.html">
                Getting Started with DRLVM
              </a>
              <br />
              Basic usage scenarios of VM: starting an application, working in Eclipse
            </li>
            <li> <a href="debugging_VM_and_JIT.html">Debugging VM and JIT</a>
              <br />
              Guide to debugging VM and Jitrino.JET source code covering
              basic actions and some useful tips
            </li> 
        </ul>
    </subsection>
    <subsection name="Architecture and Component Documentation">
        <ul>
            <li>
                <a href="developers_guide.html">Developer's Guide</a>
                <br />
                In-depth description of the DRLVM internal architecture and components' interaction
                <br />
                Now with additions in separate documents:
            </li>
          <ul>
            <li>
              <a href="EM.html">Execution Manager Component Description</a>
              <br />
              Detailed description of the Execution Manager current implementation
              <br/>
             </li>
            <li>
              <a href="TM.html">Thread Manager Component Description</a>
              <br />
              Detailed description of the Thread Manager current implementation
              <br/>
               </li>
            <li>
               <a href="kernel_classes.html">Kernel Classes Component Description</a>
               <br />
               Detailed description of the kernel classes implementation with focus on the native part of
               kernel classes and the internal kernel classes interface.
               <br/>
             </li>
               <li>
               <a href="JIT.html">JIT Compiler Component Description</a>
               <br />
               Detailed description of the Jitrino just-in-time compiler implementation; gives details on
               the internal architecture of the Jitrino.JET baseline compiler and Jitrino.OPT optimizing compiler,
               as well as processes running inside them.
             <br/>
               Relies on the other component descriptions and the
              <a href="JIT_PMF.html">Jitrino Pipeline Management Framework</a> description.
            </li>
            <ul>
            <li>
               <a href="JIT_PMF.html">Jitrino Pipeline Management Framework</a>
             <br />
              Detailed description of the pipeline management framework
              that provides complete control over just-in-time compilation process through
              the Java property mechanism. The description covers the PMF application to
              the command-line interface and to the Jitrino logging system.
              <br/>
              Relies on the <a href="JIT.html">JIT Compiler Component Description</a>,
              which gives a general definition of PMF.
            </li>
             <li>
               <a href="internal_profiler.html">Jitrino Internal Profiler Description</a>
             <br />
              Description of the code generator's internal profiler tool (iprof) for Jitrino.OPT
              just-in-time compiler, which defines the tool, illustrates its sample output and
              configuration mechanisms
              <br/>
              Relies on the <a href="JIT.html">JIT Compiler Component Description</a>,
              which gives a general definition of just-in-time compilation and code generation processes.
            </li>
            </ul>
            <li>
               <a href="JVMTI-PopFrame.html">JVMTI PopFrame Implementation</a>
             <br />
              Details on the PopFrame implementation as currently done in DRLVM. 
              The document indicates the functions responsible for the operation and 
              gives info on specifics of the current implementation. 
            </li>
            <li>
               <a href="cp-verifier.html">Verifier Implementation</a>
             <br />
              The document describing verification approach implemented in DRLVM. 
              It also provides comparison to other possible verification algorithms.
            </li>
            <li>
              <a href="encoder_library.html">Encoder Library for
                  IA-32/Intel64</a><br />
                Description of the encoder library for code generation; the document focuses
                on the specifics of the current implementation showing the encoder library 
                structure and role inside the DRL virtual machine.
              
            </li>
          </ul>
          
        <li><a href="DoxygenStart.html">DRLVM Source Code Generated Documentation Index</a>
        </li>
        </ul>
     </subsection>
     <subsection name="How-tos and Guides">
     <p>This section lists the various guides to specific aspects of the Virtual Machine. </p>
        <ul>
            <li>
              <a href="emguide.html">Configuring Execution Manager</a>
              <br />
              Guide to Execution Manager (EM) options and configuration file format.<br/>
            </li>
            <li>
              <a href="gc-howto.html">How to write DRL GC</a>
              <br />
              Instructions on creating a custom garbage collector implementation in C++
              and configuring the DRL virtual machine to use it with a real-life example
              of a copying GC implementation (source included)
            </li>
        </ul>
     </subsection>
 </section>
 </body>
 </document>






