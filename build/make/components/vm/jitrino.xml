<!--
    Copyright 2005-2006 The Apache Software Foundation or its licensors, as applicable.
  
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!--
Author: Marina V. Goldburt
Version: $Revision: 1.6.2.8 $
-->
<!--
    This is build descriptor for the component "vm.jitrino".

    Please refer to make/components/README.txt for details about the component
    build descriptor structure.
  -->

<project name="vm.jitrino">
    <target name="init">
        <property name="build.depends" value="extra.apr,vm.vmcore,vm.encoder,vm.hythr" />
        <property name="outtype" value="shared" />
        <property name="libname" value="jitrino" />

        <property name="build.vm.home" location="${build.VM.home}"/>

        <property name="src" location="${build.vm.home}/jitrino/src" />

        <property name="libdir" location="${build.semi.dir}/vm/jitrino/_bin" />
        <property name="jardir" location="${build.semi.dir}/vm/jitrino/_jar" />

        <mkdir dir="${build.semi.dir}/vm/jitrino/_other"/>

        <fileset id="c.fileset" dir="." includes="empty_fileset"/>
        <fileset id="cpp.fileset" dir="." includes="empty_fileset"/>
        <fileset id="asm.fileset" dir="." includes="empty_fileset"/>        

        <path id="java.source">
            <pathelement location="." />
        </path>

        <patternset id="java.classes.pattern" includes="empty_pattern"/>

        <!-- the compiler doesn't extend common compiler -->
        <compiler name="${build.cxx}" id="cpp.compiler">
            <fileset dir="${src}">
                <include name="dynopt/*.cpp" />
                <include name="main/*.cpp" />
                <include name="shared/*.cpp" />
                <include name="optimizer/*.cpp" />
                <include name="optimizer/ssa/*.cpp" />
                <include name="optimizer/abcd/*.cpp" />
                <include name="translator/*.cpp" />
                <include name="translator/java/*.cpp" />
                <include name="vm/*.cpp" />
                <include name="vm/drl/*.cpp" />
                <include name="codegenerator/*.cpp" />

                <select arch="ipf">
                    <include name="codegenerator/ipf/*.cpp" />
                    <include name="codegenerator/ipf/msched/*.cpp" />
                    <include name="codegenerator/ipf/msched/MachineModel/common/*.cpp" />
                    <include name="codegenerator/ipf/msched/MachineModel/mckinley/*.cpp" />
                </select>

                <select arch="ia32,em64t">
                    <include name="codegenerator/ia32/*.cpp" />
                    <include name="jet/*.cpp" />
                </select>
            </fileset>

            <includepath>
                <dirset dir="${src}">
                    <include name="dynopt" />
                    <include name="main" />
                    <include name="shared" />
                    <include name="optimizer" />
                    <include name="optimizer/ssa" />
                    <include name="optimizer/abcd" />
                    <include name="translator" />
                    <include name="translator/java" />
                    <include name="vm" />
                    <include name="vm/drl" />
                    <include name="codegenerator" />

                    <select arch="ia32,em64t">
                        <include name="codegenerator/ia32" />
                        <include name="jet" />
                    </select>

                    <select arch="ipf">
                        <include name="codegenerator/ipf" />
                        <include name="codegenerator/ipf/msched" />
                        <include name="codegenerator/ipf/msched/MachineModel/common" />
                        <include name="codegenerator/ipf/msched/MachineModel/mckinley" />
                    </select>
                </dirset>
            </includepath>

            <select arch="ia32,em64t">
                <includepath>
                    <dirset dir="${build.vm.home}">
                        <include name="port/src/encoder/ia32_em64t" />
                    </dirset>
                </includepath>
            </select>

            <includepath>
                <pathelement location="${extra.apr.includes}" />
                <pathelement location="${build.vm.home}/include" />
                <pathelement location="${build.vm.home}/vmcore/include" />
                <pathelement location="${build.vm.home}/port/include" />

                <select os="win">
                    <pathelement location="${build.vm.home}/vmcore/src/util/win/include" />
                </select>

                <select os="lnx">
                    <pathelement location="${build.vm.home}/vmcore/src/util/linux/include" />
                </select>
            </includepath>

            <defineset define="PROJECT_JITRINO" />

            <!-- windows specific -->
            <select os="win">
                <compilerarg value="/Fo${build.semi.dir}/vm/jitrino/_obj/" />

                <defineset define="PLATFORM_NT,_WINDLL,_MBCS,_REENTRANT,__SMP__,WIN32,_WIN32" />

                <compilerarg value="/nologo" />
                <compilerarg value="/EHsc" />
                <compilerarg value="/TP" />
                <compilerarg value="/Zi" />
                <compilerarg value="/Zc:forScope" />
                <compilerarg value="/WL" />
                <compilerarg value="/W4" />
<!--                <compilerarg value="/WX" /> -->
                <compilerarg value="/arch:SSE2" />

                <select cfg="debug">
                    <compilerarg value="/Od" />
                    <compilerarg value="/Gm" />
                    <compilerarg value="/RTC1" />
                    <compilerarg value="/MTd" />
                </select>

                <select cfg="release">
                    <compilerarg value="/O2" />
                    <compilerarg value="/Ot" />
                    <compilerarg value="/MT" />
                </select>

                <select cxx="icl">
                    <select cfg="release">
                        <compilerarg value="/Qip" />
                        <compilerarg value="/Qvec_report0" />
                    </select>

                    <compilerarg value="/Qww1,82,111,172,181,279,280,373,424,593,654,858" />
                    <compilerarg value="/Qwd82,193,271,304,373,383,424,444,654,869,981,1125,1418,1419,1572,1683" />
                    <!--
                      # /Qwd[tag,...] Disable the soft diagnostics that corresponds to tag. 
                      # /Qwr[tag,...] Override the severity of the soft diagnostics corresponding to tag and make it a remark. 
                      # /Qww[tag,...] Override the severity of the soft diagnostics corresponding to tag and make it a warning. 
                      # /Qwe[tag,...] Override the severity of the soft diagnostics corresponding to tag and make it an error.
                      #
                      # Following icl warning added to icl command line
                      #
                      # remark #1: last line of file ends without a newline      
                      # remark #82: storage class is not first
                      # remark #111: statement is unreachable
                      # remark #181: argument is incompatible with corresponding format string conversion
                      # remark #193: zero used for undefined preprocessing identifier
                      # remark #271: trailing comma is nonstandard   
                      # remark #279: controlling expression is constant    
                      # remark #280: selector expression is constant
                      # remark #304: access control not specified ("private" by default)     
                      # remark #373: "xxx" is inaccessible
                      # remark #383: value copied to temporary, reference to temporary used
                      # remark #424: extra ";" ignored
                      # remark #444: destructor for base class "..." is not virtual    
                      # remark #593: variable "xxx" was set but never used
                      # remark #654: overloaded virtual function "xxx" is only partially overridden in class "yyy"
                      # remark #858: type qualifier on return type is meaningless
                      # remark #869: parameter "o" was never referenced    
                      # remark #981: operands are evaluated in unspecified order
                      # remark #1418: external definition with no prior declaration    
                      # remark #1419: external declaration in primary source file      
                      #
                      # warning #1125: function "xxx" is hidden by "yyy" - virtual function override intended?
                      # warning #1572: floating-point equality and inequality comparisons are unreliable
                    -->
                </select>

                <select cxx="msvc">
                    <compilerarg value="/wd4201" />
                    <compilerarg value="/wd4244" />
                    <compilerarg value="/wd4512" />
                    <compilerarg value="/wd4702" />
                    <compilerarg value="/wd4100" />
                    <compilerarg value="/wd4127" />
                    <!--
                      #4201 - W4, nonstandart extention - nameless struct or union
                      #4702 - W4, unreachable code (fired in STL's <list>)
                      #4512 - assigment operator can not be generated
                      #4100 - unreferenced formal parameter
                      #4127 - conditional expression is constant

                      # specify where to put the per-compilation unit pdb
                      # this is needed to make the parallel compilation to work with cl: 
                      # the default name is the same for all input files (vc70.pdb) and 
                      # thus causes problems during parralel build.
                    -->
                </select>
            </select>

            <!-- linux specific -->
            <select os="lnx">
                <defineset define="PLATFORM_POSIX,LINUX" />

                <select cxx="gcc" arch="ia32,em64t">
                    <compilerarg value="-msse2" />
                </select>

                <select cxx="gcc">
                    <compilerarg value="-fmessage-length=0" />
                    <compilerarg value="-Wall" />
                    <compilerarg value="-Werror" />
                </select>

                <compilerarg value="-x" />
                <compilerarg value="c++" />
                <compilerarg value="-fPIC" />

                <select cxx="icc">
                    <compilerarg value="-wd68" />
                    <compilerarg value="-wd654" />
                    <compilerarg value="-wd854" />
                    <compilerarg value="-wd470" />
                    <compilerarg value="-wd1572" />
                    <compilerarg value="-wd1125" />
                    <!--                        
                      # 470 - 'qualified name is not allowed in member declaration'
                      # warning #1125: function "xxx" is hidden by "yyy"
                      - virtual function override intended 
                      # warning #1572: floating-point equality and inequality comparisons are unreliable
                    -->
                </select>

                <select cfg="debug">
                    <compilerarg value="-g" />
                    <compilerarg value="-O0" />
                </select>

                <select cfg="release">
                    <compilerarg value="-O" />
                </select>
            </select>

            <!-- arch specific -->
            <select arch="ia32">
                <defineset define="_IA32_" />
            </select>

            <select arch="em64t">
                <defineset define="_EM64T_" />
                <defineset define="POINTER64" />
                <select os="win">
                    <compilerarg value="-D_WIN64" />
                </select>
            </select>

            <select arch="ipf">
                <defineset define="_IPF_" />
                <defineset define="POINTER64" />
                <select os="win">
                    <compilerarg value="-D_WIN64" />
                </select>
            </select>

            <!-- only in debug mode -->
            <select cfg="debug">
                <defineset define="_DEBUG,JIT_LOGS,JIT_STATS" />
            </select>

            <!-- only in release mode -->
            <select cfg="release">
                <defineset define="NDEBUG" />
            </select>
        </compiler>

        <linker name="${build.cxx}" id="linker">
            <select os="win">
                <select arch="ipf">
                    <linkerarg value="/MACHINE:IA64" />
                </select>

                <select arch="em64t">
                    <linkerarg value="/MACHINE:AMD64" />
                </select>

                <select arch="ia32">
                    <linkerarg value="/MACHINE:X86" />
                </select>

                <linkerarg value="/DLL" />
                <linkerarg value="/SUBSYSTEM:WINDOWS" />
                <linkerarg value="/DEBUG" />
                <linkerarg value="/NOLOGO" />
                <linkerarg value="/FIXED:NO" />
                <linkerarg value="/OPT:REF" />
                <linkerarg value="/OUT:${libdir}/" />

                <libset libs="${vm.vmcore.lib}" dir="${vm.vmcore.libdir}" />
                <libset libs="${vm.encoder.lib}" dir="${vm.encoder.libdir}" />
                <libset libs="${vm.hythr.lib}" dir="${vm.hythr.libdir}" />

            </select>

            <select os="lnx">
                <linkerarg value="-shared" />
                <linkerarg value="-ldl" />
                <linkerarg value="-lm" />
            </select>
        </linker>

        <echo message="Copying the configuration jitrino files..."/>
 
        <copy todir="${build.semi.dir}/vm/jitrino/_other" 
              flatten="true" 
              includeEmptyDirs="false">
              <fileset dir="${build.VM.home}/jitrino/config">
                   <include name="${build.arch}/**" />
              </fileset>
        </copy>
    </target>
</project>
