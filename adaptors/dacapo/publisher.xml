<!-- 
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
     
         http://www.apache.org/licenses/LICENSE-2.0
     
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License. 
-->
<project name="publish.results" default="publish" basedir=".">

<!-- start of common section for SPECs -->
    <condition property="subject" 
        value="${suite.name} PASSED on ${os.name} ${os.arch}" 
        else="${suite.name} FAILED on ${os.name} ${os.arch}">
            <istrue value="${thisbuildsuccessful}"/>                       
    </condition>

    <condition property="is.passed">
        <istrue value="${thisbuildsuccessful}"/>
    </condition>
    
    <property name="output.log" value="${results.dir}/${suite.name}/${suite.name}_output.txt"/>
    <property name="output.log.processed" value="${output.log}.processed"/>    

    <condition property="need.to.send">
        <and>
        <or>
            <equals arg1="${dacapo.parameters.optional.always.mail}" arg2="true"/>
            <not>
                <equals arg1="${thisbuildsuccessful}" arg2="${lastbuildsuccessful}"/>
            </not>
        </or>
        <isset property="framework.parameters.usemail"/> 
        <isset property="framework.parameters.usemail.to"/> 
        <isset property="framework.parameters.usemail.from"/> 
    </and>
    </condition>
<!-- end of common section for SPECs -->
    
    <target name="-process.log.passed" if="is.passed">
        <copy file="${output.log}" tofile="${output.log.processed}" overwrite="true">
            <filterchain>
                <linecontainsregexp>
                    <regexp pattern="(^Running of .* runtime\.\.\..*)|(^Set of tests: .*)|(^===== DaCapo \w+ PASSED in \d+ msec =====.*)|(^===== DaCapo \w+ starting =====.*)"/>
                </linecontainsregexp>
                <prefixlines prefix="${line.separator}"/>
            </filterchain>
        </copy>
    </target>

    <target name="-process.log.failed" unless="is.passed">
        <!-- let's publish the whole log if the test failed -->
        <copy file="${output.log}" tofile="${output.log.processed}" overwrite="true">
        </copy>
    </target>
    
    <target name="publish" if="need.to.send" depends="-process.log.passed, -process.log.failed">
        <echo>Sending report: ${output.log.processed}</echo>
        <mail from="${framework.parameters.usemail.from}" 
            tolist="${framework.parameters.usemail.to}"
            messagefile="${output.log.processed}"
            failonerror="true"
            mailhost="${framework.parameters.usemail}"
            subject="${subject}"
            encoding="plain">
        </mail>
    </target>

</project>

