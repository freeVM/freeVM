<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
     
         http://www.apache.org/licenses/LICENSE-2.0
     
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License. -->

<!-- ====================================================================== 
                    BT Adaptor for Harmony DRLVM Project
     ====================================================================== -->
<project name="drlvm" default="run" basedir=".">

    <!-- do setup of the drlvm workspace -->
    <target name="setup">
        <description>
            setup:
                Do checkout of the drlvm's trunk to the place pointed
                    by 'checkouts.dir' property.
                Do setup of the suite (tune parameters)
        </description>

        <!-- Note: Properties 
                ${trunk.dir} pointing to the drlvm workspace
             and
                ${svn.url}" pointing to the svn url
             are defined as 'shared' in parameters.xml 
        -->

        <!-- mkdir for sources should be made by adaptor -->
        <mkdir dir="${trunk.dir}"/>

        <!-- do checkout of the DRLVM workspace -->
        <svn-co url="${svn.url}" trunk="${trunk.dir}"/>
    </target>

    <target name="run" 
            description="Checks DRLVM trunk can be build." 
            depends="-set-properties">
        <exec executable="${sh}" dir="${trunk.dir}/build" failonerror="true">
            <arg line="${cmd.prefix} ${cmd}"/>
            <arg line="-Dproxy.host.vm=${http.proxyHost} -Dproxy.port.vm=${http.proxyPort}"/>
            <arg line="-Dexternal.dep.CLASSLIB.loc=${classlib.trunk}"/>
            <arg line="clean update" />
        </exec>
        <!-- do build separated of update (because of the bug with c.compiler 
             dereferencing at the first time after cpptasks.jar has been 
             downloaded) -->
        <exec executable="${sh}" dir="${trunk.dir}/build" failonerror="true">
            <arg line="${cmd.prefix} ${cmd}"/>
            <arg line="-Dproxy.host.vm=${http.proxyHost} -Dproxy.port.vm=${http.proxyPort}"/>
            <arg line="-Ddeploy.canonical.flag=true"/>
            <arg line="-Dbuild.cfg=release"/>
            <arg line="-Dexternal.dep.CLASSLIB.loc=${classlib.trunk}"/>
            <arg line="build" />
        </exec>
    </target>

    <target name="clean" depends="-set-properties">
        <exec executable="${sh}" dir="${trunk.dir}/build" failonerror="true">
            <arg line="${cmd.prefix} ${cmd}"/>
            <arg line="-Dproxy.host.vm=${http.proxyHost} -Dproxy.port.vm=${http.proxyPort}"/>
            <arg line="-Ddeploy.canonical.flag=true"/>
            <arg line="-Dbuild.cfg=release"/>
            <arg line="-Dexternal.dep.CLASSLIB.loc=${classlib.trunk}"/>
            <arg line="clean" />
        </exec>
    </target>

    <!-- platform depending configuration properties -->
    <condition property="is.windows">
        <os family="windows" />
    </condition>

    <condition property="exe" value=".exe" else="">
        <os family="windows" />
    </condition>

    <target name="-set-properties" depends="-set-properties-win, -set-properties-other"/>
    
    <target name="-set-properties-win" if="is.windows">
        <property name="sh" value="cmd" />
        <property name="cmd.prefix" value="/c" />
        <property name="cmd" value="build.bat" />
        <property name="cc" value="msvc" />
    </target>

    <target name="-set-properties-other" unless="is.windows">
        <property name="sh" value="sh" />
        <property name="cmd.prefix" value="" />
        <property name="cmd" value="build.sh" />
        <property name="cc" value="gcc" />
    </target>

</project>

