<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
     
         http://www.apache.org/licenses/LICENSE-2.0
     
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License. -->

<!-- ====================================================================== 
                    BT Adaptor for Harmony DRLVM Project
     ====================================================================== -->
<project name="drlvm" default="run" basedir=".">

    <!-- define build configuration, 
         used in parameters.xml for assignment the value to shared parameter -->
    <property name="build.config" 
              value="${drlvm.parameters.optional.build.cfg}"/>
    
    <property name="common.resources" 
              value="${checkouts.dir}/common_resources"/>

    <target name="setup" />

    <target name="run" description="Verifies integrity of the DRLVM trunk"> 
        <exec executable="svn" dir="${common.resources}" failonerror="true">
            <arg line="update" />
        </exec>
        <drlvm-build targets="fetch-depends rebuild"/>
    </target>

    <target name="clean">
        <drlvm-build targets="clean"/>
    </target>

    <macrodef name="drlvm-build">
        <attribute name="targets"/>
        <sequential>
            <!-- Use BTI staff to execute Ant Build in new process -->
            <exec-ant dir="${trunk.dir}" targets="@{targets}">
                <sysproperty key="deploy.canonical.flag" value="true"/>
                <sysproperty key="build.cfg" value="${build.config}"/>
                <sysproperty key="machine.arch" value="${os.arch}"/>
                <sysproperty key="external.dep.CLASSLIB.loc"
                             value='${classlib.trunk}'/>
                <sysproperty key="common.resources.loc" value="${common.resources}"/>
            </exec-ant>
        </sequential>
    </macrodef>

</project>

