<?xml version="1.0" encoding="UTF-8"?>
<!--
	Licensed to the Apache Software Foundation (ASF) under one
	or more contributor license agreements.  See the NOTICE file
	distributed with this work for additional information
	regarding copyright ownership.  The ASF licenses this file
	to you under the Apache License, Version 2.0 (the
	"License"); you may not use this file except in compliance
	with the License.  You may obtain a copy of the License at
	
	  http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing,
	software distributed under the License is distributed on an
	"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
	KIND, either express or implied.  See the License for the
	specific language governing permissions and limitations
	under the License.
-->

<project name="NIO_CHAR Build" default="build" basedir=".">
    <description>Build for NIO_CHAR component</description>

    <!-- import common properties -->
    <import file="${basedir}/../../make/properties.xml" />

    <!-- set global properties for this build. -->
    <xmlproperty file="make/hyproperties.xml" semanticAttributes="true" />

    <fileset id="classes" dir="${hy.build}">
        <includesfile name="${hy.nio_char}/make/patternset.txt" />
        <excludesfile name="${hy.hdk}/build/patternsets/luni-kernel.txt" />
        <excludesfile name="${hy.hdk}/build/patternsets/security-kernel.txt" />
    </fileset>

    <target name="build" depends="compile-java, copy-resources, build-jar" />

    <target name="test" depends="build, compile-tests, run-tests" />

    <target name="clean">
        <delete failonerror="false">
            <fileset refid="classes" />
            <fileset dir="${hy.nio_char.bin.test}" />
        </delete>
    </target>

    <target name="compile-java">
        <echo message="Compiling NIO_CHAR classes" />

        <mkdir dir="${hy.build}" />

        <javac sourcepath=""
               srcdir="${hy.nio_char.src.main.java}"
               destdir="${hy.build}"
               compiler="${hy.javac.compiler}"
               memoryMaximumSize="${hy.javac.maxmem}"
               source="${hy.javac.source}" 
               target="${hy.javac.target}"
               debug="${hy.javac.debug}">

            <bootclasspath>
                <fileset dir="${hy.jdk}/jre/lib/boot">
                    <include name="**/*.jar" />
                </fileset>
            </bootclasspath>
        </javac>
    </target>

    <target name="copy-resources">
        <mkdir dir="${hy.build}" />
        <copy todir="${hy.build}" includeemptydirs="false">
            <fileset dir="${hy.nio_char.src.main.java}">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>

    <target name="build-jar" depends="svn-info">
        <jar destfile="${hy.jdk}/jre/lib/boot/${hy.nio_char.packaging.jarname}.jar"
             manifest="${hy.nio_char}/META-INF/MANIFEST.MF">
            <fileset refid="classes" />
            <manifest>
                <attribute name="Implementation-Version" value="${svn.info}"/> 
            </manifest>
        </jar>
    </target>

    <target name="compile-tests" depends="copy-test-resources">
        <echo message="Compiling NIO_CHAR tests" />

        <mkdir dir="${hy.nio_char.bin.test}" />

        <javac srcdir="${hy.nio_char.src.test.java}"
               destdir="${hy.nio_char.bin.test}"
               sourcepath=""
               compiler="${hy.javac.compiler}"
               memoryMaximumSize="${hy.javac.maxmem}"
               source="${hy.javac.source}" 
               target="${hy.javac.target}"
               debug="${hy.javac.debug}">

            <bootclasspath>
                <fileset dir="${hy.jdk}/jre/lib/boot">
                    <include name="**/*.jar" />
                </fileset>
            </bootclasspath>
            <classpath location="../../build/tests" />
            <classpath location="${hy.hdk}/build/test/support.jar" />
        </javac>
    </target>

    <target name="run-tests">

        <mkdir dir="${hy.tests.reports}" />

        <property name="test.jre.home" value="${hy.jdk}/jre" />

        <junit fork="yes"
               forkmode="once"
               printsummary="withOutAndErr"
               errorproperty="test.errors"
               failureproperty="test.failures"
               showoutput="on"
               dir="${basedir}"
               jvm="${test.jre.home}/bin/java">

            <env key="JAVA_HOME" value="${test.jre.home}"/>

            <classpath>
                <pathelement path="${hy.nio_char.bin.test}"/>
                <pathelement path="../../build/tests" />
                <pathelement path="${hy.hdk}/build/test/support.jar" />
                <fileset dir="${hy.nio_char.src.test.resources}/jars">
                    <include name="**/*.jar" />
                </fileset>
            </classpath>

            <formatter type="xml" />

            <test name="${test.case}" todir="${hy.tests.reports}"
                 if="test.case" />

            <batchtest todir="${hy.tests.reports}" haltonfailure="no"
                unless="test.case">

                <fileset dir="${hy.nio_char.src.test.java}">
                    <include name="**/*Test.java"/>
                    <exclude name="tests/api/java/nio/charset/ASCCharsetEncoderTest.java"/>
                    <exclude name="tests/api/java/nio/charset/CharsetProviderTest.java"/>
                    <!-- No public constructor? -->
                    <exclude name="tests/api/java/nio/charset/ConcreteCharsetTest.java"/>
                    <exclude name="tests/api/java/nio/charset/GBCharsetEncoderTest.java"/>
                    <exclude name="tests/api/java/nio/charset/ISOCharsetEncoderTest.java"/>
                    <exclude name="tests/api/java/nio/charset/UTF16BECharsetEncoderTest.java"/>
                    <exclude name="tests/api/java/nio/charset/UTF16CharsetDecoderTest.java"/>
                    <exclude name="tests/api/java/nio/charset/UTF16CharsetEncoderTest.java"/>
                    <exclude name="tests/api/java/nio/charset/UTF16LECharsetEncoderTest.java"/>
                    <exclude name="tests/api/java/nio/charset/UTFCharsetEncoderTest.java"/>
                </fileset>
            </batchtest>
        </junit>
        <antcall target="touch-failures-file" />
        <antcall target="touch-errors-file" />
    </target>

    <target name="touch-failures-file" if="test.failures">
        <echo file="${hy.tests.reports}/test.failures"
            append="true">nio_char${line.separator}</echo>
    </target>

    <target name="touch-errors-file" if="test.errors">
        <echo file="${hy.tests.reports}/test.errors"
            append="true">nio_char${line.separator}</echo>
    </target>

    <target name="copy-test-resources">
        <mkdir dir="${hy.nio_char.bin.test}" />
        <copy todir="${hy.nio_char.bin.test}" includeemptydirs="false">
            <fileset dir="${hy.nio_char.src.test.resources}">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>

</project>
