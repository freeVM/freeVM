<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<project name="APPLET Build" default="build" basedir=".">
    <description>Build for APPLET component</description>

    <!-- import common properties -->
    <import file="${basedir}/../../make/properties.xml" />

    <!-- set global properties for this build. -->
    <xmlproperty file="make/hyproperties.xml" semanticAttributes="true" />

    <fileset id="classes" dir="${hy.build}">
        <or>
            <present targetdir="${hy.applet.src.main.java}" />
            <present targetdir="${hy.applet.src.main.java}">
                <mapper type="regexp"
                        from="^(.*?)(\$$[^/\\\.]*)?\.class$$"
                        to="\1.java"/>
            </present>
        </or>
    </fileset>

    <target name="build" depends="compile-java, copy-resources, build-jar" />

    <target name="test" depends="build, compile-tests, run-tests" />

    <target name="clean">
        <delete file="${hy.jdk}/jre/lib/boot/applet.jar" />
        <delete failonerror="false">
            <fileset refid="classes" />
            <fileset dir="${hy.applet.bin.test}" />
        </delete>
    </target>

    <target name="compile-java">
        <echo message="Compiling APPLET classes" />

        <mkdir dir="${hy.build}" />

        <javac sourcepath=""
               srcdir="${hy.applet.src.main.java}"
               destdir="${hy.build}"
               compiler="${hy.javac.compiler}"
               memoryMaximumSize="${hy.javac.maxmem}"
               source="${hy.javac.source}" 
               target="${hy.javac.target}"
               debug="${hy.javac.debug}">

            <bootclasspath>
                <fileset dir="${hy.jdk}/jre/lib/boot">
                    <include name="**/*.jar" />
                </fileset>
            </bootclasspath>
        </javac>
    </target>

    <target name="copy-resources">
        <mkdir dir="${hy.build}" />
        <copy todir="${hy.build}" includeemptydirs="false">
            <fileset dir="${hy.applet.src.main.java}">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>

    <target name="build-jar" depends="svn-info">
        <jar destfile="${hy.jdk}/jre/lib/boot/applet.jar"
             manifest="${hy.applet}/META-INF/MANIFEST.MF">
            <fileset refid="classes" />
            <manifest>
                <attribute name="Implementation-Version" value="${svn.info}"/> 
            </manifest>

            <metainf file="${basedir}/../../NOTICE"/>
            <metainf file="${basedir}/../../LICENSE"/>            
        </jar>
    </target>

    <target name="compile-tests">
        <echo message="Compiling APPLET tests" />

        <mkdir dir="${hy.applet.bin.test}" />

        <javac srcdir="${hy.applet.src.test.java}"
               destdir="${hy.applet.bin.test}"
               sourcepath=""
               compiler="${hy.javac.compiler}"
               memoryMaximumSize="${hy.javac.maxmem}"
               source="${hy.javac.source}" 
               target="${hy.javac.target}"
               debug="${hy.javac.debug}">

            <bootclasspath>
                <fileset dir="${hy.jdk}/jre/lib/boot">
                    <include name="**/*.jar" />
                </fileset>
            </bootclasspath>
            <classpath location="../../build/tests" />
        </javac>
    </target>

    <target name="run-tests">

        <mkdir dir="${hy.tests.reports}" />

        <property name="test.jre.home" value="${hy.jdk}/jre" />

        <junit fork="yes"
               forkmode="once"
               printsummary="withOutAndErr"
               errorproperty="test.errors"
               failureproperty="test.failures"
               showoutput="on"
               dir="${basedir}"
               jvm="${test.jre.home}/bin/java">

            <classpath>
                <pathelement path="${hy.applet.bin.test}"/>
            </classpath>

            <formatter type="xml" />

            <test name="${test.case}" todir="${hy.tests.reports}"
                 if="test.case" />

            <batchtest todir="${hy.tests.reports}" haltonfailure="no"
                unless="test.case">

                <fileset dir="${hy.applet.src.test.java}"/>
            </batchtest>
        </junit>
        <antcall target="touch-failures-file" />
        <antcall target="touch-errors-file" />
    </target>

    <target name="touch-failures-file" if="test.failures">
        <echo file="${hy.tests.reports}/test.failures"
            append="true">applet${line.separator}</echo>
    </target>

    <target name="touch-errors-file" if="test.errors">
        <echo file="${hy.tests.reports}/test.errors"
            append="true">applet${line.separator}</echo>
    </target>

</project>
