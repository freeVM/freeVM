# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License. 

<property name="iterative.prefix" value="[build-test alert] BUILD FAILED ${osdetailed} ${cc} debug:  classlib tests iterative"/> 
<property name="iterative.prefix.ok" value="[build-test alert] BUILD FIXED ${osdetailed} ${cc} debug:  classlib tests iterative"/> 

<project name="classlib-drlvm-iterative">

    <listeners>
        <currentbuildstatuslistener file="logs/${project.name}/status.txt"/>
    </listeners>

    <modificationset quietperiod="60">
        <svn localWorkingCopy="projects/classlib/trunk"/>
        <svn localWorkingCopy="projects/drlvm/trunk"/>
        <buildstatus logdir="logs/classlib"/>
        <buildstatus logdir="logs/drlvm"/>
    </modificationset>

    <schedule interval="${timeout}">
        <!--exec command="${sh}" args="${cmd.prefix} ${cmd_HUT_iterative} ${wdir}/projects/drlvm/trunk/build/${os}_ia32_${cc}_debug/deploy/jdk/jre drl ${HUT_forkmode} ${wdir}/projects/classlib/trunk ${HUT_iterations}" workingdir="HUT_iterative" timeout="${HUT_iterative_timeout}" errorstr="FAILED" /-->
        <exec command="${sh}" args="${cmd.prefix} ${cmd_HUT_iterative} ${wdir}${fs}projects${fs}drlvm${fs}trunk${fs}build${fs}${os}_ia32_${cc}_debug${fs}deploy${fs}jdk${fs}jre drl ${HUT_forkmode} ${wdir}${fs}projects${fs}classlib${fs}trunk ${HUT_iterations}" workingdir="HUT_iterative" timeout="${HUT_iterative_timeout}" errorstr="FAILED" />
    </schedule>

    <log dir="logs/${project.name}">
        <merge dir="projects/classlib/trunk/build" pattern="TEST-*.xml" />
    </log>
			     
    <publishers>
        <antpublisher   
                 antworkingdir="."  
                 buildfile="copyres.xml"  
                 uselogger="true"  
                 usedebug="false"  
                 target="copy.HUT-iterative.res"> 
                <property name="VM" value="drlvm"/> 
        </antpublisher> 
        <onfailure>
            <xsltlogpublisher directory="."  outfilename="HUT-iterative.txt"  xsltfile="br.xsl" />
            <antpublisher   
                     antworkingdir="."  
                     buildfile="copyres.xml"  
                     uselogger="true"  
                     usedebug="true"  
                     target="email.always.res"> 
                <property name="file" value="HUT-iterative.txt"/> 
                <property name="mailhost" value="${server_addr}"/>
                <property name="fromaddress" value="${report_from}"/>
                <property name="toaddress" value="${report_to}"/>
                <property name="subject" value="${iterative.prefix}"/>
                <property name="flag" value="${project.name}"/>
            </antpublisher> 
        </onfailure>
        <onsuccess>
            <xsltlogpublisher directory="."  outfilename="HUT-iterative.txt.ok"  xsltfile="br.xsl" />
            <antpublisher   
                     antworkingdir="."  
                     buildfile="copyres.xml"  
                     uselogger="true"  
                     usedebug="true"  
                     target="email.always.res"> 
                <property name="file" value="HUT-iterative.txt.ok"/> 
                <property name="mailhost" value="${server_addr}"/>
                <property name="fromaddress" value="${report_from}"/>
                <property name="toaddress" value="${report_to}"/>
                <property name="subject" value="${iterative.prefix.ok}"/>
                <property name="flag" value="${project.name}"/>
            </antpublisher> 
        </onsuccess>
    </publishers>

</project>
