<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2006 The Apache Software Foundation or its licensors, as applicable.
  
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<project name="Common_LUNI_Build">

    <target name="compile.java" description="Compile LUNI java code"
    	depends="copy.resources">
        <echo message="Compiling LUNI classes from ${hy.luni.src.main.java}" />

        <mkdir dir="${hy.build}" />

        <javac sourcepath=""
            srcdir="${hy.luni.src.main.java}"
            destdir="${hy.build}"
            source="${hy.javac.source}"
            target="${hy.javac.target}"
            debug="${java.debug.option}">

            <bootclasspath>
                <fileset dir="${hy.jdk}/jre/lib/boot">
                    <include name="**/*.jar" />
                </fileset>
            </bootclasspath>
        </javac>
    </target>

    <target name="build.jar">
        <jar destfile="${hy.jdk}/jre/lib/boot/luni.jar"
             manifest="${hy.luni}/META-INF/MANIFEST.MF">
            <fileset dir="${hy.build}"
                     includesfile="${hy.luni}/make/patternset.txt" />
        </jar>
    </target>


    <target name="compile.tests" depends="copy.test.resources">
        <echo message="Compiling LUNI tests from ${hy.luni.src.test.java}" />

        <mkdir dir="${hy.luni.bin.test}" />

        <javac srcdir="${hy.luni.src.test.java}"
            destdir="${hy.luni.bin.test}"
            sourcepath=""
            source="${hy.javac.source}"
            target="${hy.javac.target}"
            debug="${java.debug.option}">

            <bootclasspath>
                <fileset dir="${hy.jdk}/jre/lib/boot">
                    <include name="**/*.jar" />
                </fileset>
            </bootclasspath>
            <classpath location="${hy.tests.support.bin}" />
        </javac>
    </target>


    <target name="run.tests">

        <mkdir dir="${hy.tests.reports}" />

        <property name="test.jre.home" value="${hy.jdk}/jre" />

        <junit fork="yes"
            forkmode="once"
            printsummary="withOutAndErr"
            errorproperty="test.errors"
            failureproperty="test.failures"
            showoutput="on"
            dir="${hy.luni.bin.test}"
            jvm="${test.jre.home}/bin/java">

            <jvmarg value="-showversion" />

            <!-- Required by various tests that set security manager etc -->
            <jvmarg value="-Djava.security.policy=../../../../support/src/test/resources/config/testing.policy" />

            <!-- Required for running the java.net unit tests -->
            <jvmarg value="-Dtest.ini.file=../../../../support/src/test/resources/config/localhosttest.ini" />

            <env key="JAVA_HOME" value="${test.jre.home}" />

            <classpath>
                <pathelement path="${hy.luni.bin.test}" />
                <pathelement path="${hy.tests.support.bin}" />
            </classpath>

            <formatter type="xml" />

            <test name="${test.case}" todir="${hy.tests.reports}" if="test.case" />
            <batchtest todir="${hy.tests.reports}" haltonfailure="no"
                unless="test.case">

                <fileset dir="${hy.luni.src.test.java}">
                    <include name="**/*Test.java" />
                    <exclude name="tests/api/java/lang/IllegalThreadStateExceptionTest.java" />
                    <exclude name="tests/api/java/lang/ThreadTest.java" />
                    <exclude name="tests/api/java/io/InputStreamReaderTest.java" />
                    <exclude name="tests/api/java/io/ObjectInputStreamTest.java" />
                    <exclude name="tests/api/java/io/ObjectOutputStreamTest.java" />
                    <exclude name="tests/api/java/io/OutputStreamWriterTest.java" />
                    <exclude name="tests/api/java/io/PipedInputStreamTest.java" />
                    <exclude name="tests/api/java/lang/AssertionErrorTest.java" />
                    <exclude name="tests/api/java/lang/ClassTest.java" />
                    <exclude name="tests/api/java/lang/ProcessTest.java" />
                    <exclude name="tests/api/java/lang/StringTest.java" />
                    <exclude name="tests/api/java/net/DatagramSocketTest.java" />
                    <exclude name="tests/api/java/net/HttpURLConnectionTest.java" />
                    <exclude name="tests/api/java/net/InetAddressTest.java" />
                    <exclude name="tests/api/java/net/JarURLConnectionTest.java" />
                    <exclude name="tests/api/java/net/MulticastSocketTest.java" />
                    <exclude name="tests/api/java/net/ServerSocketTest.java" />
                    <exclude name="tests/api/java/net/SocketImplTest.java" />
                    <exclude name="tests/api/java/net/SocketPermissionTest.java" />
                    <exclude name="tests/api/java/net/SocketTest.java" />
                    <exclude name="tests/api/java/net/URLClassLoaderTest.java" />
                    <exclude name="tests/api/java/net/URLConnectionTest.java" />
                    <exclude name="tests/api/java/net/URLTest.java" />
                </fileset>
            </batchtest>
        </junit>
        <antcall target="touch-failures-file" />
        <antcall target="touch-errors-file" />
    </target>

    <target name="touch-failures-file" if="test.failures">
        <echo file="${hy.tests.reports}/test.failures"
            append="true" >luni
</echo>
    </target>
    <target name="touch-errors-file" if="test.errors">
        <echo file="${hy.tests.reports}/test.errors"
            append="true" >luni
</echo>
    </target>

    <target name="copy.resources">
    	<mkdir dir="${hy.luni.bin.main}" />
        <copy todir="${hy.luni.bin.main}" includeemptydirs="false">
            <fileset dir="${hy.luni.src.main.java}">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>

    <target name="copy.test.resources">
        <mkdir dir="${hy.luni.bin.test}" />
        <copy todir="${hy.luni.bin.test}" includeemptydirs="false">
            <fileset dir="${hy.luni.src.test.resources}">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>

</project>

