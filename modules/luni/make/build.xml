<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2005, 2006 The Apache Software Foundation or its licensors, as applicable.
  
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<!-- THIS FILE IS WORK IN PROGRESS - BEWARE -->


<!--
         You will need to add the Eclipse
         compiler's jars to the CLASSPATH and path to jni.h
         to INCLUDE environment variables before build start.
         For example:

         set CLASSPATH=%ECLIPSE_HOME%/plugins/org.eclipse.jdt.core_3.0.1/jdtCompilerAdapter.jar; \
                 %ECLIPSE_HOME%/plugins/org.eclipse.jdt.core_3.0.1/jdtcore.jar;%CLASSPATH%

         set INCLUDE=%MY_JVM%/include

     -->

<project name="LUNI Build" default="build" basedir="..">
    <description>Build for LUNI component</description>

    <!-- import common properties -->
    <import file="${basedir}/../../make/properties.xml" />

    <!-- set global properties for this build. -->
    <xmlproperty file="make/common/hyproperties.xml" semanticAttributes="true" />

    <!-- Set build.compiler to "org.eclipse.jdt.core.JDTCompilerAdapter" to
	     use the Eclipse Java compiler. But it does not support jsr14 target -->
    <property name="build.compiler" value="modern" />

    <target name="init">
        <tstamp>
            <format property="build-date" pattern="yyyyMMdd" locale="en" />
        </tstamp>
        <tstamp>
            <format property="build-time" pattern="yyyyMMdd_HHmm" />
        </tstamp>
        <echo message="build-date=${build-date}" />
        <echo message="build-time=${build-time}" />
        <echo message="on platform=${os.name} version=${os.version} arch=${os.arch}" />

        <property name="java.debug.option" value="on" />
        <property name="native.debug.option" value="on" />

    </target>

    <!-- LUNI TARGETS -->

    <target name="build" depends="init">
        <ant dir="make/common" target="compile.java" />
        <ant dir="make/common" target="build.jar" />
        <!--	<ant dir="make/platform/${hy.platform}" target="compile.native" />-->
        <ant dir="make/common" target="copy.resources" />
    </target>

	<target name="copy.native.includes">
		<copy todir="${hy.hdk}/include" overwrite="yes">
			<fileset dir="${hy.luni.src.main.native}/include/shared">
				<include name="harmony.h" />
				<include name="vmi.h" />
				<include name="hyvmls.h" />
				<include name="hypool.h" />
				<include name="hyport.h" />
				<include name="hythread.h" />
				<include name="hycomp.h" />
				<include name="hysocket.h" />
				<include name="hyporterror.h" />
				<include name="gp.h" />
			</fileset>
		</copy>
		<copy todir="${hy.jdk}/include" overwrite="yes">
			<fileset dir="${hy.luni.src.main.native}/include/shared">
				<include name="jni.h" />
				<include name="jniport.h" />
			</fileset>
		</copy>
			
		<antcall target="copy.native.includes.windows" />
		<antcall target="copy.native.includes.linux" />
	</target>
	
	<target name="copy.native.includes.windows" if="is.windows">
		<copy todir="${hy.hdk}/include" overwrite="yes">
			<fileset dir="${hy.luni.src.main.native}/include/windows">
    			<include name="hymutex.h" />
    			<include name="jclprots.h" />
    		</fileset>
		</copy>
	</target>
	
	<target name="copy.native.includes.linux" if="is.linux">
		<copy todir="${hy.hdk}/include" overwrite="yes">
			<fileset dir="${hy.luni.src.main.native}/include/linux">
    			<include name="hymutex.h" />
    			<include name="jclprots.h" />
    		</fileset>
		</copy>
	</target>
	
    <target name="test" depends="build">
        <ant dir="make/common" target="compile.tests" />
        <ant dir="make/common" target="run.tests" />
    </target>

    <target name="clean">
        <delete dir="${hy.luni.bin.main}" />
        <delete dir="${hy.luni.bin.test}" />
    	<antcall target="clean.native.includes" />
    </target>
	
	<target name="clean.native.includes">
		<delete failonerror="false">
			<fileset dir="${hy.hdk}/include">
				<include name="harmony.h" />
				<include name="vmi.h" />
				<include name="hyvmls.h" />
				<include name="hypool.h" />
				<include name="hyport.h" />
				<include name="hythread.h" />
				<include name="hymutex.h" />
				<include name="jclprots.h" />
				<include name="hycomp.h" />
				<include name="hysocket.h" />
				<include name="hyporterror.h" />
				<include name="gp.h" />
			</fileset>
		</delete>
		<delete failonerror="false">
			<fileset dir="${hy.jdk}/include">
				<include name="jni.h" />
				<include name="jniport.h" />
			</fileset>
		</delete>
	</target>

</project>
