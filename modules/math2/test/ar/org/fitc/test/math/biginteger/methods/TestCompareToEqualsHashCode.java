/*
 *  Copyright 2005 The Apache Software Foundation or its licensors, as applicable.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * @author Hugo Beilis
 * @author Osvaldo Demo
 * @author Jorge Rafael
 * @version 1.0
 */

package ar.org.fitc.test.math.biginteger.methods;

import java.math.BigInteger;

import junit.framework.TestCase;

import ar.org.fitc.test.util.Messages;

/**
 * Test cases for compareTo(BigInteger), equals(Object), hashCode()
 * 
 */
public class TestCompareToEqualsHashCode extends TestCase implements Messages {

	private BigInteger bi = null;

	private BigInteger bi2 = null;

	/** Creates a new instance of TestCompareToEqulas */
	public TestCompareToEqualsHashCode(String name) {
		super(name);
	}

	public static void main(String args[]) {
		junit.textui.TestRunner.run(TestCompareToEqualsHashCode.class);
	}

	/*
	 * Test method for 'java.math.bigInteger.compareTo(bigInteger)'
	 */
	public void testCompareTo001() {
		try {
			bi = new BigInteger("0");
			bi2 = new BigInteger("0");
			int compare = 0;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo002() {
		try {
			bi = new BigInteger("0");
			bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo003() {
		try {
			bi = new BigInteger("0");
			bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo004() {
		try {
			bi = new BigInteger("0");
			bi2 = new BigInteger("21474836455");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo005() {
		try {
			bi = new BigInteger("0");
			bi2 = new BigInteger("-2147483646");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo006() {
		try {
			bi = new BigInteger("0");
			bi2 = new BigInteger("999999999997777773151874");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo007() {
		try {
			bi = new BigInteger("0");
			bi2 = new BigInteger("-999999999997777773151874");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo008() {
		try {
			bi = new BigInteger("0");
			bi2 = new BigInteger(
					
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo009() {
		try {
			bi = new BigInteger("0");
			bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo010() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			bi2 = new BigInteger("0");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo011() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			int compare = 0;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo012() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo013() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			bi2 = new BigInteger("21474836455");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo014() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			bi2 = new BigInteger("-2147483646");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo015() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			bi2 = new BigInteger("999999999997777773151874");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo016() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			bi2 = new BigInteger("-999999999997777773151874");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo017() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			bi2 = new BigInteger(
					"8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo018() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo019() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			bi2 = new BigInteger("0");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo020() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo021() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			int compare = 0;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo022() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			bi2 = new BigInteger("21474836455");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo023() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			bi2 = new BigInteger("-2147483646");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo024() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			bi2 = new BigInteger("999999999997777773151874");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo025() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			bi2 = new BigInteger("-999999999997777773151874");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo026() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			bi2 = new BigInteger(
					
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo027() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo028() {
		try {
			bi = new BigInteger("21474836455");
			bi2 = new BigInteger("0");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo029() {
		try {
			bi = new BigInteger("21474836455");
			bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo030() {
		try {
			bi = new BigInteger("21474836455");
			bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo031() {
		try {
			bi = new BigInteger("21474836455");
			bi2 = new BigInteger("21474836455");
			int compare = 0;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo032() {
		try {
			bi = new BigInteger("21474836455");
			bi2 = new BigInteger("-2147483646");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo033() {
		try {
			bi = new BigInteger("21474836455");
			bi2 = new BigInteger("999999999997777773151874");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo034() {
		try {
			bi = new BigInteger("21474836455");
			bi2 = new BigInteger("-999999999997777773151874");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo035() {
		try {
			bi = new BigInteger("21474836455");
			bi2 = new BigInteger(
					
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo036() {
		try {
			bi = new BigInteger("21474836455");
			bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo037() {
		try {
			bi = new BigInteger("-2147483646");
			bi2 = new BigInteger("0");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo038() {
		try {
			bi = new BigInteger("-2147483646");
			bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo039() {
		try {
			bi = new BigInteger("-2147483646");
			bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo040() {
		try {
			bi = new BigInteger("-2147483646");
			bi2 = new BigInteger("21474836455");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo041() {
		try {
			bi = new BigInteger("-2147483646");
			bi2 = new BigInteger("-2147483646");
			int compare = 0;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo042() {
		try {
			bi = new BigInteger("-2147483646");
			bi2 = new BigInteger("999999999997777773151874");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo043() {
		try {
			bi = new BigInteger("-2147483646");
			bi2 = new BigInteger("-999999999997777773151874");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo044() {
		try {
			bi = new BigInteger("-2147483646");
			bi2 = new BigInteger(
					
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo045() {
		try {
			bi = new BigInteger("-2147483646");
			bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo046() {
		try {
			bi = new BigInteger("999999999997777773151874");
			bi2 = new BigInteger("0");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo047() {
		try {
			bi = new BigInteger("999999999997777773151874");
			bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo048() {
		try {
			bi = new BigInteger("999999999997777773151874");
			bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo049() {
		try {
			bi = new BigInteger("999999999997777773151874");
			bi2 = new BigInteger("21474836455");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo050() {
		try {
			bi = new BigInteger("999999999997777773151874");
			bi2 = new BigInteger("-2147483646");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo051() {
		try {
			bi = new BigInteger("999999999997777773151874");
			bi2 = new BigInteger("999999999997777773151874");
			int compare = 0;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo052() {
		try {
			bi = new BigInteger("999999999997777773151874");
			bi2 = new BigInteger("-999999999997777773151874");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo053() {
		try {
			bi = new BigInteger("999999999997777773151874");
			bi2 = new BigInteger(
					"8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo054() {
		try {
			bi = new BigInteger("999999999997777773151874");
			bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo055() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			bi2 = new BigInteger("0");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo056() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo057() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo058() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			bi2 = new BigInteger("21474836455");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo059() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			bi2 = new BigInteger("-2147483646");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo060() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			bi2 = new BigInteger("999999999997777773151874");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo061() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			bi2 = new BigInteger("-999999999997777773151874");
			int compare = 0;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo062() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			bi2 = new BigInteger(
					
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo063() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo064() {
		try {
			bi = new BigInteger(
					
			bi2 = new BigInteger("0");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo065() {
		try {
			bi = new BigInteger(
					
			bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo066() {
		try {
			bi = new BigInteger(
					
			bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo067() {
		try {
			bi = new BigInteger(
					
			bi2 = new BigInteger("21474836455");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo068() {
		try {
			bi = new BigInteger(
					
			bi2 = new BigInteger("-2147483646");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo069() {
		try {
			bi = new BigInteger(
					
			bi2 = new BigInteger("999999999997777773151874");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo070() {
		try {
			bi = new BigInteger(
					
			bi2 = new BigInteger("-999999999997777773151874");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo071() {
		try {
			bi = new BigInteger(
					
			bi2 = new BigInteger(
					
			int compare = 0;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo072() {
		try {
			bi = new BigInteger(
					
			bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			int compare = 1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo073() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			bi2 = new BigInteger("0");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo074() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo075() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo076() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			bi2 = new BigInteger("21474836455");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo077() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			bi2 = new BigInteger("-2147483646");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo078() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			bi2 = new BigInteger("999999999997777773151874");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo079() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			bi2 = new BigInteger("-999999999997777773151874");
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo080() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			bi2 = new BigInteger(
					
			int compare = -1;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo081() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			int compare = 0;
			assertEquals(bi.compareTo(bi2), compare);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo082() {
		try {
			bi = new BigInteger("0");
			bi2 = new BigInteger("0");
			assertEquals(bi.compareTo(bi2) == 0, bi.equals(bi2));
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo083() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			assertEquals(bi.compareTo(bi2) == 0, bi.equals(bi2));
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo084() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			assertEquals(bi.compareTo(bi2) == 0, bi.equals(bi2));
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo085() {
		try {
			bi = new BigInteger("21474836455");
			bi2 = new BigInteger("21474836455");
			assertEquals(bi.compareTo(bi2) == 0, bi.equals(bi2));
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo086() {
		try {
			bi = new BigInteger("-2147483646");
			bi2 = new BigInteger("-2147483646");
			assertEquals(bi.compareTo(bi2) == 0, bi.equals(bi2));
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo087() {
		try {
			bi = new BigInteger("999999999997777773151874");
			bi2 = new BigInteger("999999999997777773151874");
			assertEquals(bi.compareTo(bi2) == 0, bi.equals(bi2));
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo088() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			bi2 = new BigInteger("-999999999997777773151874");
			assertEquals(bi.compareTo(bi2) == 0, bi.equals(bi2));
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo089() {
		try {
			bi = new BigInteger(
					
			bi2 = new BigInteger(
					"8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			assertEquals(bi.compareTo(bi2) == 0, bi.equals(bi2));
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testCompareTo090() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			assertEquals(bi.compareTo(bi2) == 0, bi.equals(bi2));
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	/*
	 * Test method for 'java.math.bigInteger.equals(Object)'
	 */
	public void testEquals001() {
		try {
			bi = new BigInteger("0");
			BigInteger bi2 = new BigInteger("0");
			assertEquals(bi.equals(bi2), true);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals002() {
		try {
			bi = new BigInteger("0");
			BigInteger bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals003() {
		try {
			bi = new BigInteger("0");
			BigInteger bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals004() {
		try {
			bi = new BigInteger("0");
			BigInteger bi2 = new BigInteger("21474836455");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals005() {
		try {
			bi = new BigInteger("0");
			BigInteger bi2 = new BigInteger("-2147483646");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals006() {
		try {
			bi = new BigInteger("0");
			BigInteger bi2 = new BigInteger("999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals007() {
		try {
			bi = new BigInteger("0");
			BigInteger bi2 = new BigInteger("-999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals008() {
		try {
			bi = new BigInteger("0");
			BigInteger bi2 = new BigInteger(
					
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals009() {
		try {
			bi = new BigInteger("0");
			BigInteger bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals010() {
		try {
			bi = new BigInteger("0");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals011() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			BigInteger bi2 = new BigInteger("0");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals012() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			BigInteger bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			assertEquals(bi.equals(bi2), true);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals013() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			BigInteger bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals014() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			BigInteger bi2 = new BigInteger("21474836455");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals015() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			BigInteger bi2 = new BigInteger("-2147483646");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals016() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			BigInteger bi2 = new BigInteger("999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals017() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			BigInteger bi2 = new BigInteger("-999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals018() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			BigInteger bi2 = new BigInteger(
					
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals019() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			BigInteger bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals020() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");

			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals021() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			BigInteger bi2 = new BigInteger("0");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals022() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			BigInteger bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals023() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			BigInteger bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			assertEquals(bi.equals(bi2), true);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals024() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			BigInteger bi2 = new BigInteger("21474836455");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals025() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			BigInteger bi2 = new BigInteger("-2147483646");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals026() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			BigInteger bi2 = new BigInteger("999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals027() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			BigInteger bi2 = new BigInteger("-999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals028() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			BigInteger bi2 = new BigInteger(
					
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals029() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			BigInteger bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals030() {
		try {
			bi = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");

			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals031() {
		try {
			bi = new BigInteger("21474836455");
			BigInteger bi2 = new BigInteger("0");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals032() {
		try {
			bi = new BigInteger("21474836455");
			BigInteger bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals033() {
		try {
			bi = new BigInteger("21474836455");
			BigInteger bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals034() {
		try {
			bi = new BigInteger("21474836455");
			BigInteger bi2 = new BigInteger("21474836455");
			assertEquals(bi.equals(bi2), true);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals035() {
		try {
			bi = new BigInteger("21474836455");
			BigInteger bi2 = new BigInteger("-2147483646");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals036() {
		try {
			bi = new BigInteger("21474836455");
			BigInteger bi2 = new BigInteger("999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals037() {
		try {
			bi = new BigInteger("21474836455");
			BigInteger bi2 = new BigInteger("-999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals038() {
		try {
			bi = new BigInteger("21474836455");
			BigInteger bi2 = new BigInteger(
					
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals039() {
		try {
			bi = new BigInteger("21474836455");
			BigInteger bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals040() {
		try {
			bi = new BigInteger("21474836455");

			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals041() {
		try {
			bi = new BigInteger("-2147483646");
			BigInteger bi2 = new BigInteger("0");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals042() {
		try {
			bi = new BigInteger("-2147483646");
			BigInteger bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals043() {
		try {
			bi = new BigInteger("-2147483646");
			BigInteger bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals044() {
		try {
			bi = new BigInteger("-2147483646");
			BigInteger bi2 = new BigInteger("21474836455");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals045() {
		try {
			bi = new BigInteger("-2147483646");
			BigInteger bi2 = new BigInteger("-2147483646");
			assertEquals(bi.equals(bi2), true);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals046() {
		try {
			bi = new BigInteger("-2147483646");
			BigInteger bi2 = new BigInteger("999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals047() {
		try {
			bi = new BigInteger("-2147483646");
			BigInteger bi2 = new BigInteger("-999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals048() {
		try {
			bi = new BigInteger("-2147483646");
			BigInteger bi2 = new BigInteger(
					"8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals049() {
		try {
			bi = new BigInteger("-2147483646");
			BigInteger bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals050() {
		try {
			bi = new BigInteger("-2147483646");

			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals051() {
		try {
			bi = new BigInteger("999999999997777773151874");
			BigInteger bi2 = new BigInteger("0");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals052() {
		try {
			bi = new BigInteger("999999999997777773151874");
			BigInteger bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals053() {
		try {
			bi = new BigInteger("999999999997777773151874");
			BigInteger bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals054() {
		try {
			bi = new BigInteger("999999999997777773151874");
			BigInteger bi2 = new BigInteger("21474836455");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals055() {
		try {
			bi = new BigInteger("999999999997777773151874");
			BigInteger bi2 = new BigInteger("-2147483646");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals056() {
		try {
			bi = new BigInteger("999999999997777773151874");
			BigInteger bi2 = new BigInteger("999999999997777773151874");
			assertEquals(bi.equals(bi2), true);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals057() {
		try {
			bi = new BigInteger("999999999997777773151874");
			BigInteger bi2 = new BigInteger("-999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals058() {
		try {
			bi = new BigInteger("999999999997777773151874");
			BigInteger bi2 = new BigInteger(
					
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals059() {
		try {
			bi = new BigInteger("999999999997777773151874");
			BigInteger bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals060() {
		try {
			bi = new BigInteger("999999999997777773151874");

			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals061() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			BigInteger bi2 = new BigInteger("0");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals062() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			BigInteger bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals063() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			BigInteger bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals064() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			BigInteger bi2 = new BigInteger("21474836455");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals065() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			BigInteger bi2 = new BigInteger("-2147483646");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals066() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			BigInteger bi2 = new BigInteger("999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals067() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			BigInteger bi2 = new BigInteger("-999999999997777773151874");
			assertEquals(bi.equals(bi2), true);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals068() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			BigInteger bi2 = new BigInteger(
					
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals069() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			BigInteger bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals070() {
		try {
			bi = new BigInteger("-999999999997777773151874");

			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals071() {
		try {
			bi = new BigInteger(
					"8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			BigInteger bi2 = new BigInteger("0");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals072() {
		try {
			bi = new BigInteger(
					"8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			BigInteger bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals073() {
		try {
			bi = new BigInteger(
					
			BigInteger bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals074() {
		try {
			bi = new BigInteger(
					
			BigInteger bi2 = new BigInteger("21474836455");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals075() {
		try {
			bi = new BigInteger(
					
			BigInteger bi2 = new BigInteger("-2147483646");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals076() {
		try {
			bi = new BigInteger(
					"8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			BigInteger bi2 = new BigInteger("999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals077() {
		try {
			bi = new BigInteger(
					
			BigInteger bi2 = new BigInteger("-999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals078() {
		try {
			bi = new BigInteger(
					
			BigInteger bi2 = new BigInteger(
					
			assertEquals(bi.equals(bi2), true);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals079() {
		try {
			bi = new BigInteger(
					
			BigInteger bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals080() {
		try {
			bi = new BigInteger(
					

			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals081() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			BigInteger bi2 = new BigInteger("0");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals082() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			BigInteger bi2 = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals083() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			BigInteger bi2 = new BigInteger(
					"1018941560489102123187480189704051894054864066108789260456087899");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals084() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			BigInteger bi2 = new BigInteger("21474836455");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals085() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			BigInteger bi2 = new BigInteger("-2147483646");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals086() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			BigInteger bi2 = new BigInteger("999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals087() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			BigInteger bi2 = new BigInteger("-999999999997777773151874");
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals088() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			BigInteger bi2 = new BigInteger(
					
			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals089() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			BigInteger bi2 = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
			assertEquals(bi.equals(bi2), true);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testEquals090() {
		try {
			bi = new BigInteger(
					"-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");

			assertEquals(bi.equals(bi2), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	/*
	 * public void testEquals091() { try{ bi= new
	 * BigInteger("-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
	 * BigInteger bi2= new
	 * BigInteger("-8547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064894088704489405489401489405480448047890454098478409489223372036854775804896135189412317861400000487666604786032185406489408870448940548940148940548044804789045409847840948922337203685477580489613518941231786140000048766660478603218540648940887044894054894014894054804480478904540984784094892233720368547758048961351894123178614000004876666047860321854064");
	 * BigDecimal bd=new BigDecimal(bi2); assertEquals(bi.equals(bd),false); }
	 * catch (Throwable e) { fail(msgNoException+e); } }
	 */
	public void testEquals092() {
		try {
			int i = 0;
			assertEquals(BigInteger.ZERO.equals(i), false);
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	/*
	 * Test method for 'java.math.bigInteger.hashCode()'
	 */
	public void testHashCode001() {
		try {
			BigInteger[] biArray = new BigInteger[6];
			for (int k = 1; k <= 5; k++) {
				biArray[k] = new BigInteger("0");
			}
			for (int i = 1; i <= 5; i++) {
				for (int j = 1; j <= 5; j++) {
					assertEquals(biArray[i].hashCode(), biArray[j].hashCode());
				}
			}
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode002() {
		try {
			BigInteger[] biArray = new BigInteger[6];
			for (int k = 1; k <= 5; k++) {
				biArray[k] = new BigInteger("5757952");
			}
			for (int i = 1; i <= 5; i++) {
				for (int j = 1; j <= 5; j++) {
					assertEquals(biArray[i].hashCode(), biArray[j].hashCode());
				}
			}
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode003() {
		try {
			BigInteger[] biArray = new BigInteger[6];
			for (int k = 1; k <= 5; k++) {
				biArray[k] = new BigInteger("-5757952");
			}
			for (int i = 1; i <= 5; i++) {
				for (int j = 1; j <= 5; j++) {
					assertEquals(biArray[i].hashCode(), biArray[j].hashCode());
				}
			}
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode004() {
		try {
			BigInteger[] biArray = new BigInteger[6];
			for (int k = 1; k <= 5; k++) {
				biArray[k] = new BigInteger("1229782938247303441");
			}
			for (int i = 1; i <= 5; i++) {
				for (int j = 1; j <= 5; j++) {
					assertEquals(biArray[i].hashCode(), biArray[j].hashCode());
				}
			}
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode005() {
		try {
			BigInteger[] biArray = new BigInteger[6];
			for (int k = 1; k <= 5; k++) {
				biArray[k] = new BigInteger("-1229782938247303441");
			}
			for (int i = 1; i <= 5; i++) {
				for (int j = 1; j <= 5; j++) {
					assertEquals(biArray[i].hashCode(), biArray[j].hashCode());
				}
			}
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode006() {
		try {
			BigInteger[] biArray = new BigInteger[6];
			for (int k = 1; k <= 5; k++) {
				biArray[k] = new BigInteger(
						"9223512774344179712158610000064510564105651056");
			}
			for (int i = 1; i <= 5; i++) {
				for (int j = 1; j <= 5; j++) {
					assertEquals(biArray[i].hashCode(), biArray[j].hashCode());
				}
			}
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode007() {
		try {
			BigInteger[] biArray = new BigInteger[6];
			for (int k = 1; k <= 5; k++) {
				biArray[k] = new BigInteger(
						"-9223512774344179712158610000064510564105651056");
			}
			for (int i = 1; i <= 5; i++) {
				for (int j = 1; j <= 5; j++) {
					assertEquals(biArray[i].hashCode(), biArray[j].hashCode());
				}
			}
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode008() {
		try {
			BigInteger[] biArray = new BigInteger[6];
			for (int k = 1; k <= 5; k++) {
				biArray[k] = new BigInteger("999999999997777773151874");
			}
			for (int i = 1; i <= 5; i++) {
				for (int j = 1; j <= 5; j++) {
					assertEquals(biArray[i].hashCode(), biArray[j].hashCode());
				}
			}
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode009() {
		try {
			BigInteger[] biArray = new BigInteger[6];
			for (int k = 1; k <= 5; k++) {
				biArray[k] = new BigInteger("-999999999997777773151874");
			}
			for (int i = 1; i <= 5; i++) {
				for (int j = 1; j <= 5; j++) {
					assertEquals(biArray[i].hashCode(), biArray[j].hashCode());
				}
			}
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode010() {
		try {
			BigInteger[] biArray = new BigInteger[6];
			for (int k = 1; k <= 5; k++) {
				biArray[k] = new BigInteger(
						"150448610311864301189460189400002623041896410056489748904168108");
			}
			for (int i = 1; i <= 5; i++) {
				for (int j = 1; j <= 5; j++) {
					assertEquals(biArray[i].hashCode(), biArray[j].hashCode());
				}
			}
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode011() {
		try {
			BigInteger[] biArray = new BigInteger[6];
			for (int k = 1; k <= 5; k++) {
				biArray[k] = new BigInteger(
						"-150448610311864301189460189400002623041896410056489748904168108");
			}
			for (int i = 1; i <= 5; i++) {
				for (int j = 1; j <= 5; j++) {
					assertEquals(biArray[i].hashCode(), biArray[j].hashCode());
				}
			}
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode012() {
		try {
			BigInteger[] biArray = new BigInteger[6];
			for (int k = 1; k <= 5; k++) {
				biArray[k] = new BigInteger(
						
			}
			for (int i = 1; i <= 5; i++) {
				for (int j = 1; j <= 5; j++) {
					assertEquals(biArray[i].hashCode(), biArray[j].hashCode());
				}
			}
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode013() {
		try {
			BigInteger[] biArray = new BigInteger[6];
			for (int k = 1; k <= 5; k++) {
				biArray[k] = new BigInteger(
						
			}
			for (int i = 1; i <= 5; i++) {
				for (int j = 1; j <= 5; j++) {
					assertEquals(biArray[i].hashCode(), biArray[j].hashCode());
				}
			}
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode014() {
		try {
			BigInteger[] biArray = new BigInteger[6];
			for (int k = 1; k <= 5; k++) {
				biArray[k] = new BigInteger("100000000000001000000000000");
			}
			for (int i = 1; i <= 5; i++) {
				for (int j = 1; j <= 5; j++) {
					assertEquals(biArray[i].hashCode(), biArray[j].hashCode());
				}
			}
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode015() {
		try {
			BigInteger[] biArray = new BigInteger[6];
			for (int k = 1; k <= 5; k++) {
				biArray[k] = new BigInteger("-100000000000001000000000000");
			}
			for (int i = 1; i <= 5; i++) {
				for (int j = 1; j <= 5; j++) {
					assertEquals(biArray[i].hashCode(), biArray[j].hashCode());
				}
			}
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode016() {
		try {
			bi = new BigInteger("0");
			int hc = bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			assertEquals(hc, bi.hashCode());
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode017() {
		try {
			bi = new BigInteger("5757952");
			int hc = bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			assertEquals(hc, bi.hashCode());
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode018() {
		try {
			bi = new BigInteger("-5757952");
			int hc = bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			assertEquals(hc, bi.hashCode());
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode019() {
		try {
			bi = new BigInteger("1229782938247303441");
			int hc = bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			assertEquals(hc, bi.hashCode());
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode020() {
		try {
			bi = new BigInteger("-1229782938247303441");
			int hc = bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			assertEquals(hc, bi.hashCode());
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode021() {
		try {
			bi = new BigInteger(
					"9223512774344179712158610000064510564105651056");
			int hc = bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			assertEquals(hc, bi.hashCode());
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode022() {
		try {
			bi = new BigInteger(
					"-9223512774344179712158610000064510564105651056");
			int hc = bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			assertEquals(hc, bi.hashCode());
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode023() {
		try {
			bi = new BigInteger("999999999997777773151874");
			int hc = bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			assertEquals(hc, bi.hashCode());
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode024() {
		try {
			bi = new BigInteger("-999999999997777773151874");
			int hc = bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			assertEquals(hc, bi.hashCode());
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode025() {
		try {
			bi = new BigInteger(
					"150448610311864301189460189400002623041896410056489748904168108");
			int hc = bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			assertEquals(hc, bi.hashCode());
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode026() {
		try {
			bi = new BigInteger(
					"-150448610311864301189460189400002623041896410056489748904168108");
			int hc = bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			assertEquals(hc, bi.hashCode());
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode027() {
		try {
			bi = new BigInteger(
					
			int hc = bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			assertEquals(hc, bi.hashCode());
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode028() {
		try {
			bi = new BigInteger(
					
			int hc = bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			assertEquals(hc, bi.hashCode());
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode029() {
		try {
			bi = new BigInteger("100000000000001000000000000");
			int hc = bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			assertEquals(hc, bi.hashCode());
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

	public void testHashCode030() {
		try {
			bi = new BigInteger("-100000000000001000000000000");
			int hc = bi.hashCode();

			bi.hashCode();
			bi.hashCode();
			bi.hashCode();
			assertEquals(hc, bi.hashCode());
		} catch (Throwable e) {
			fail(msgNoException + e);
		}
	}

}
