<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<project name="PORTLIB Build" default="build" basedir=".">
    <description>Build for PORTLIB component</description>

    <!-- import common properties -->
    <import file="${basedir}/../../make/properties.xml" />

    <!-- set global properties for this build. -->
    <xmlproperty file="make/hyproperties.xml" semanticAttributes="true" />

    <property file="../../make/depends.properties" />
    <property name="fdlibm.zip" location="${depends.oss}/fdlibm_5.2.zip" />

    <target name="build" /> <!-- depends="compile-java, copy-resources, build-jar" -->

    <target name="test" >
        <!--
             This target exists to match the API of other module
             build.xml files.  However, we should probably write some
             (native) portlib tests to aid porting.
          -->
    </target>

    <target name="copy-native-includes">
        <copy todir="${hy.hdk}/include" overwrite="yes">
            <fileset dir="${hy.portlib.src.main.native}/include/shared">
                <include name="hyport.h" />
                <include name="hythread.h" />
                <include name="hycomp.h" />
                <include name="hyporterror.h" />
                <include name="hypool.h" />
            </fileset>
        </copy>
        <copy todir="${hy.hdk}/include" overwrite="yes">
            <fileset dir="${hy.portlib.src.main.native}/include/${hy.os}">
                <include name="hymutex.h" />
                <include name="hysock.h" />
                <include name="hyportpg.h" />
            </fileset>
        </copy>
    </target>

    <!-- Build the portlib native components -->
    <target name="build-native" >

       <!-- Build common lib -->
        <make dir="${hy.portlib.src.main.native}/common/${hy.os}" />

        <!-- Build pool lib -->
        <make dir="${hy.portlib.src.main.native}/pool/${hy.os}" />

        <!-- Build sig dll -->
        <make dir="${hy.portlib.src.main.native}/sig/${hy.os}" />

        <copy todir="${hy.jdk}/jre/bin" overwrite="yes">
            <fileset dir="${hy.portlib.src.main.native}/sig">
                <patternset includes="*${shlib.suffix}*" />
            </fileset>
        </copy>

        <!-- Build thread dll -->
        <make dir="${hy.portlib.src.main.native}/thread/${hy.os}" />

        <copy todir="${hy.jdk}/jre/bin" overwrite="yes">
            <fileset dir="${hy.portlib.src.main.native}/thread">
                <patternset includes="*${shlib.suffix}*" />
            </fileset>
        </copy>

        <!-- Build port dll -->
        <make dir="${hy.portlib.src.main.native}/port/${hy.os}" />

        <copy todir="${hy.jdk}/jre/bin" overwrite="yes">
            <fileset dir="${hy.portlib.src.main.native}/port">
                <patternset includes="*${shlib.suffix}*" />
            </fileset>
        </copy>

    </target>

    <!-- Clean natives -->
    <target name="clean-native">
        <make dir="${hy.portlib.src.main.native}/sig/${hy.os}" target="clean" />
        <make dir="${hy.portlib.src.main.native}/thread/${hy.os}" target="clean" />
        <make dir="${hy.portlib.src.main.native}/port/${hy.os}" target="clean" />
        <make dir="${hy.portlib.src.main.native}/common/${hy.os}" target="clean" />
        <make dir="${hy.portlib.src.main.native}/pool/${hy.os}" target="clean" />

    </target>

    <target name="clean">
        <antcall target="clean-native-includes" />
    </target>

    <target name="clean-native-includes">
        <delete failonerror="false">
            <fileset dir="${hy.hdk}/include">
                <include name="hyport.h" />
                <include name="hythread.h" />
                <include name="hymutex.h" />
                <include name="hycomp.h" />
                <include name="hyporterror.h" />
                <include name="hysock.h" />
                <include name="hyportpg.h" />
                <include name="hypool.h" />
            </fileset>
        </delete>
    </target>
</project>
