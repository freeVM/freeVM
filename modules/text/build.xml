<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2005, 2006 The Apache Software Foundation or its
    licensors, as applicable.
  
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<project name="TEXT Build" default="build" basedir=".">
    <description>Build for TEXT component</description>

    <!-- import common properties -->
    <import file="${basedir}/../../make/properties.xml" />

    <!-- set global properties for this build. -->
    <xmlproperty file="make/hyproperties.xml" semanticAttributes="true" />

    <fileset id="classes" dir="${hy.build}">
        <includesfile name="${hy.text}/make/patternset.txt" />
        <excludesfile name="${hy.hdk}/build/patternsets/luni-kernel.txt" />
        <excludesfile name="${hy.hdk}/build/patternsets/security-kernel.txt" />
    </fileset>
                               
    <!-- Set build.compiler to "org.eclipse.jdt.core.JDTCompilerAdapter" to
	     use the Eclipse Java compiler. -->
    <property name="build.compiler" value="modern" />
	
	<property name="iculib.zip" location="${depends.oss}/icu4c-3.4-harmony.zip" />

    <target name="build" depends="compile.java, build.jar" />

    <target name="test" depends="build, compile.tests, run.tests" />
	
    <target name="overlay-oss">
	<mkdir dir="${hy.text.src.main.native}/icu4c/unicode" />
	<unzip src="${iculib.zip}" dest="${hy.text.src.main.native}/icu4c/unicode" />
	<chmod dir="${hy.text.src.main.native}/icu4c/unicode" perm="ugo+r" />
	<antcall target="copy.libs" inheritall="true" />
    </target>
	<target name="copy.libs" if="is.x86_64">
	    <copy todir="${hy.text.src.main.native}/icu4c/unicode" overwrite="yes">
	            <fileset dir="${depends.libs}" includes="*${shlib.suffix}*" />
	    </copy>
    </target>
    <target name="clean-overlay-oss">
	<delete dir="${hy.text.src.main.native}/icu4c" quiet="true" />
    </target>
	
    <!-- Build native code -->
    <target name="build.native" >
	<make dir="${hy.text.src.main.native}/text/${hy.os}" />

	<!-- Copy the built shared libs over to the jre/bin dir -->
	<copy todir="${hy.jdk}/jre/bin" overwrite="yes">
	    <fileset dir="${hy.text.src.main.native}/text">
                <patternset includes="*${shlib.suffix}*" />
            </fileset>
        </copy>
    </target>
	
    <!-- Clean natives -->
    <target name="clean.native">
	<make dir="${hy.text.src.main.native}/text/${hy.os}" target="clean" />
    </target>

    <target name="clean">
        <delete failonerror="false">
            <fileset refid="classes" />
            <fileset dir="${hy.text.bin.test}" />
        </delete>
    </target>

    <target name="compile.java">
        <echo message="Compiling TEXT classes" />

        <mkdir dir="${hy.build}" />

        <javac sourcepath=""
            srcdir="${hy.text.src.main.java}"
            destdir="${hy.build}"
            source="${hy.javac.source}"
            target="${hy.javac.target}"
            debug="${hy.javac.debug}">

            <bootclasspath>
                <fileset dir="${hy.jdk}/jre/lib/boot">
                    <include name="**/*.jar" />
                </fileset>
            </bootclasspath>
        </javac>
    </target>

    <target name="build.jar">
        <jar destfile="${hy.jdk}/jre/lib/boot/text.jar"
             manifest="${hy.text}/META-INF/MANIFEST.MF">
            <fileset refid="classes" />
        </jar>
    </target>

    <target name="compile.tests" depends="copy.test.resources">
        <echo message="Compiling TEXT tests" />

        <mkdir dir="${hy.text.bin.test}" />

        <javac srcdir="${hy.text.src.test.java}"
            destdir="${hy.text.bin.test}"
            sourcepath=""
            source="${hy.javac.source}"
            target="${hy.javac.target}"
            debug="${hy.javac.debug}">

            <bootclasspath>
                <fileset dir="${hy.jdk}/jre/lib/boot">
                    <include name="**/*.jar" />
                </fileset>
            </bootclasspath>
            <classpath location="${hy.hdk}/build/test/support.jar" />
        </javac>
    </target>

    <target name="run.tests">

        <mkdir dir="${hy.tests.reports}" />

        <property name="test.jre.home" value="${hy.jdk}/jre" />

        <junit fork="yes"
            forkmode="once"
            printsummary="withOutAndErr"
            errorproperty="test.errors"
            failureproperty="test.failures"
            showoutput="on"
            dir="${hy.text.bin.test}"
            jvm="${test.jre.home}/bin/java">

            <jvmarg value="-showversion"/>

            <env key="JAVA_HOME" value="${test.jre.home}"/>

            <classpath>
                <pathelement path="${hy.text.bin.test}"/>
            </classpath>
            <classpath location="${hy.hdk}/build/test/support.jar" />

            <formatter type="xml" />

            <test name="${test.case}" todir="${hy.tests.reports}"
                  if="test.case" />

            <batchtest todir="${hy.tests.reports}" haltonfailure="no"
                unless="test.case">

                <fileset dir="${hy.text.src.test.java}">
                    <include name="**/*Test.java"/>
                    <exclude name="org/apache/harmony/text/tests/java/text/CollationKeyTest.java"/>
                    <exclude name="org/apache/harmony/text/tests/java/text/CollatorTest.java"/>
                    <exclude name="org/apache/harmony/text/tests/java/text/DecimalFormatTest.java"/>
                    <exclude name="org/apache/harmony/text/tests/java/text/MessageFormatTest.java"/>
                </fileset>
            </batchtest>
        </junit>
        <antcall target="touch-failures-file" />
        <antcall target="touch-errors-file" />
    </target>

    <target name="touch-failures-file" if="test.failures">
        <echo file="${hy.tests.reports}/test.failures"
            append="true">text${line.separator}</echo>
    </target>

    <target name="touch-errors-file" if="test.errors">
        <echo file="${hy.tests.reports}/test.errors"
            append="true">text${line.separator}</echo>
    </target>

    <target name="copy.test.resources">
        <mkdir dir="${hy.text.bin.test}" />
        <copy todir="${hy.text.bin.test}" includeemptydirs="false">
            <fileset dir="${hy.text.src.test.resources}">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>

</project>
