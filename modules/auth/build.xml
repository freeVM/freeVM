<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
    Copyright 2006 The Apache Software Foundation or its
    licensors, as applicable.
  
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<project name="AUTH Build" default="build" basedir=".">
    <description>Build for AUTH component</description>

    <!-- import common properties -->
    <import file="${basedir}/../../make/properties.xml" />

    <!-- set global properties for this build. -->
    <xmlproperty file="make/hyproperties.xml" semanticAttributes="true" />

    <fileset id="classes" dir="${hy.build}">
        <includesfile name="${hy.auth}/make/patternset.txt" />
        <excludesfile name="${hy.hdk}/build/patternsets/luni-kernel.txt" />
        <excludesfile name="${hy.hdk}/build/patternsets/security-kernel.txt" />
    </fileset>
                               
    <!-- Set build.compiler to "org.eclipse.jdt.core.JDTCompilerAdapter" to
	     use the Eclipse Java compiler. -->
    <property name="build.compiler" value="modern" />

    <property file="../../make/depends.properties" />

    <property name="hy.auth.src.main.java.platform"
              value="${hy.auth.src.main.java}/../${hy.os}" />

    <property name="hy.auth.src.test.java.platform"
              value="${hy.auth.src.test.java}/../${hy.os}" />

    <target name="build" depends="compile.java, build.jar" />

    <target name="test" depends="build, compile.tests, run.tests" />
	
    <!-- Build native code -->
    <target name="build.native" >
	<make dir="${hy.auth.src.main.native}/auth/${hy.os}" />

	<!-- Copy the built shared libs over to the jre/bin dir -->
	<copy todir="${hy.jdk}/jre/bin" overwrite="yes">
	    <fileset dir="${hy.auth.src.main.native}/auth">
                <patternset includes="*${shlib.suffix}*" />
            </fileset>
        </copy>
    </target>
	
    <!-- Clean natives -->
    <target name="clean.native">
	<make dir="${hy.auth.src.main.native}/auth/${hy.os}" target="clean" />
    </target>

    <target name="clean">
        <delete failonerror="false">
            <fileset refid="classes" />
            <fileset dir="${hy.auth.bin.test}" />
        </delete>
    </target>

    <target name="compile.java">
        <echo message="Compiling AUTH classes" />

        <mkdir dir="${hy.build}" />

        <javac sourcepath=""
               destdir="${hy.build}"
               source="${hy.javac.source}"
               target="${hy.javac.target}"
               debug="${hy.javac.debug}">

            <src>
                <pathelement location="${hy.auth.src.main.java}"/>
                <pathelement location="${hy.auth.src.main.java.platform}" />
            </src>

            <bootclasspath>
                <fileset dir="${hy.jdk}/jre/lib/boot">
                    <include name="**/*.jar" />
                </fileset>
            </bootclasspath>
        </javac>
    </target>

    <target name="build.jar">
        <jar destfile="${hy.jdk}/jre/lib/boot/${hy.auth.packaging.jarname}.jar"
             manifest="${hy.auth}/META-INF/MANIFEST.MF">
            <fileset refid="classes" />
        </jar>
    </target>

    <target name="compile.tests">
        <echo message="Compiling AUTH tests" />

        <mkdir dir="${hy.auth.bin.test}" />

        <javac 	destdir="${hy.auth.bin.test}"
                source="${hy.javac.source}"
                target="${hy.javac.target}"
                debug="${hy.javac.debug}">

            <!-- FIXME: AUTH tests should not reach into security module code -->
            <src>
                <pathelement location="${hy.auth.src.test.java}"/>
                <pathelement location="${hy.auth.src.test.java.platform}"/>
                <pathelement location="${hy.auth}/../security/src/test/support/common/java"/>
            </src>

            <include name="javax/security/auth/**/*Test*.java" />
            <include name="javax/security/sasl/**/*Test*.java" />
            <include name="org/ietf/jgss/*Test.java" />
            <include name="org/apache/harmony/auth/**/*Test.java" />
            <include name="org/apache/harmony/security/tests/support/*.java" />
            <include name="tests/api/javax/security/auth/x500/X500PrincipalTest.java" />

            <bootclasspath>
                <fileset dir="${hy.jdk}/jre/lib/boot">
                    <include name="**/*.jar" />
                </fileset>
            </bootclasspath>
            <classpath location="${hy.hdk}/build/test/support.jar" />
        </javac>
    </target>

    <target name="run.tests">

        <mkdir dir="${hy.tests.reports}" />

        <property name="test.jre.home" value="${hy.jdk}/jre" />

        <junit fork="yes"
               forkmode="once"
               printsummary="withOutAndErr"
               errorproperty="test.errors"
               failureproperty="test.failures"
               showoutput="on"
               dir="${hy.auth.bin.test}"
               jvm="${test.jre.home}/bin/java">

            <!--jvmarg value="-showversion"/-->

            <!-- Required for running the serialization unit tests -->
            <!-- Note: will be deleted after improving             -->
            <!-- SerializationTest support class: all resource     -->
            <!-- files will be placed on the classpath             -->
            <jvmarg value="-DRESOURCE_DIR=${hy.auth.src.test.java}"/>

            <!-- to pick up junit.jar -->
            <jvmarg value="-Xbootclasspath/a:${hy.auth.bin.test}${path.separator}../../../../${junit.jar}${path.separator}${hy.hdk}/build/test/support.jar"/>

            <env key="JAVA_HOME" value="${test.jre.home}"/>

            <formatter type="xml" />

            <test name="${test.case}" todir="${hy.tests.reports}"
                 if="test.case" />

            <batchtest todir="${hy.tests.reports}" haltonfailure="no"
                unless="test.case">

                <fileset dir="${hy.auth.src.test.java.platform}">
                    <include name="**/*Test.java"/>
                </fileset>
                <fileset dir="${hy.auth.src.test.java}">
                    <include name="**/*Test.java"/>

                    <!-- Not a test -->
                    <exclude name="org/apache/harmony/auth/internal/SecurityTest.java"/>
                </fileset>
            </batchtest>
        </junit>
        <antcall target="touch-failures-file" />
        <antcall target="touch-errors-file" />
    </target>

    <target name="touch-failures-file" if="test.failures">
        <echo file="${hy.tests.reports}/test.failures"
            append="true">auth${line.separator}</echo>
    </target>

    <target name="touch-errors-file" if="test.errors">
        <echo file="${hy.tests.reports}/test.errors"
            append="true">auth${line.separator}</echo>
    </target>

</project>
