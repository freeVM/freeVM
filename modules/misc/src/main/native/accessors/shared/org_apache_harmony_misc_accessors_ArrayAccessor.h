/*
 *  Copyright 2005 - 2006 The Apache Software Software Foundation or its licensors, as applicable.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * @author Andrey Y. Chernyshev
 * @version $Revision$
 */
/*
 * THE FILE HAS BEEN AUTOGENERATED BY IJH TOOL.
 * Please be aware that all changes made to this file manually
 * will be overwritten by the tool if it runs again.
 */

#include <jni.h>


/* Header for class org.apache.harmony.misc.accessors.ArrayAccessor */

#ifndef _ORG_APACHE_HARMONY_MISC_ACCESSORS_ARRAYACCESSOR_H
#define _ORG_APACHE_HARMONY_MISC_ACCESSORS_ARRAYACCESSOR_H

#ifdef __cplusplus
extern "C" {
#endif


/* Native methods */

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticPinByteArray(Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticPinByteArray(JNIEnv *, jclass, 
    jobject);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticPinCharArray(Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticPinCharArray(JNIEnv *, jclass, 
    jobject);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticPinIntArray(Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticPinIntArray(JNIEnv *, jclass, 
    jobject);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticPinShortArray(Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticPinShortArray(JNIEnv *, jclass, 
    jobject);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticPinLongArray(Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticPinLongArray(JNIEnv *, jclass, 
    jobject);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticPinFloatArray(Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticPinFloatArray(JNIEnv *, jclass, 
    jobject);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticPinDoubleArray(Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticPinDoubleArray(JNIEnv *, jclass, 
    jobject);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticLockArray(Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticLockArray(JNIEnv *, jclass, 
    jobject);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnpinByteArray(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnpinByteArray(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnpinCharArray(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnpinCharArray(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnpinIntArray(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnpinIntArray(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnpinShortArray(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnpinShortArray(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnpinLongArray(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnpinLongArray(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnpinFloatArray(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnpinFloatArray(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnpinDoubleArray(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnpinDoubleArray(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnlockArray(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnlockArray(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnpinByteArrayNoCopy(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnpinByteArrayNoCopy(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnpinCharArrayNoCopy(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnpinCharArrayNoCopy(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnpinIntArrayNoCopy(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnpinIntArrayNoCopy(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnpinShortArrayNoCopy(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnpinShortArrayNoCopy(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnpinLongArrayNoCopy(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnpinLongArrayNoCopy(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnpinFloatArrayNoCopy(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnpinFloatArrayNoCopy(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnpinDoubleArrayNoCopy(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnpinDoubleArrayNoCopy(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.staticUnlockArrayNoCopy(Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_staticUnlockArrayNoCopy(JNIEnv *, jclass, 
    jobject, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.getElement([Ljava/lang/Object;I)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_getElement___3Ljava_lang_Object_2I(JNIEnv *, jobject, 
    jobjectArray, jint);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.getElement([BI)B
 */
JNIEXPORT jbyte JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_getElement___3BI(JNIEnv *, jobject, 
    jbyteArray, jint);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.getElement([FI)F
 */
JNIEXPORT jfloat JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_getElement___3FI(JNIEnv *, jobject, 
    jfloatArray, jint);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.getElement([ZI)Z
 */
JNIEXPORT jboolean JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_getElement___3ZI(JNIEnv *, jobject, 
    jbooleanArray, jint);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.getElement([JI)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_getElement___3JI(JNIEnv *, jobject, 
    jlongArray, jint);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.getElement([CI)C
 */
JNIEXPORT jchar JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_getElement___3CI(JNIEnv *, jobject, 
    jcharArray, jint);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.getElement([II)I
 */
JNIEXPORT jint JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_getElement___3II(JNIEnv *, jobject, 
    jintArray, jint);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.getElement([DI)D
 */
JNIEXPORT jdouble JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_getElement___3DI(JNIEnv *, jobject, 
    jdoubleArray, jint);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.getElement([SI)S
 */
JNIEXPORT jshort JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_getElement___3SI(JNIEnv *, jobject, 
    jshortArray, jint);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.setElement([CIC)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_setElement___3CIC(JNIEnv *, jobject, 
    jcharArray, jint, jchar);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.setElement([III)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_setElement___3III(JNIEnv *, jobject, 
    jintArray, jint, jint);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.setElement([ZIZ)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_setElement___3ZIZ(JNIEnv *, jobject, 
    jbooleanArray, jint, jboolean);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.setElement([JIJ)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_setElement___3JIJ(JNIEnv *, jobject, 
    jlongArray, jint, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.setElement([BIB)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_setElement___3BIB(JNIEnv *, jobject, 
    jbyteArray, jint, jbyte);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.setElement([FIF)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_setElement___3FIF(JNIEnv *, jobject, 
    jfloatArray, jint, jfloat);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.setElement([DID)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_setElement___3DID(JNIEnv *, jobject, 
    jdoubleArray, jint, jdouble);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.setElement([Ljava/lang/Object;ILjava/lang/Object;)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_setElement___3Ljava_lang_Object_2ILjava_lang_Object_2(JNIEnv *, jobject, 
    jobjectArray, jint, jobject);

/*
 * Method: org.apache.harmony.misc.accessors.ArrayAccessor.setElement([SIS)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_ArrayAccessor_setElement___3SIS(JNIEnv *, jobject, 
    jshortArray, jint, jshort);


#ifdef __cplusplus
}
#endif

#endif /* _ORG_APACHE_HARMONY_MISC_ACCESSORS_ARRAYACCESSOR_H */

