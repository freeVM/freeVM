<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
     
         http://www.apache.org/licenses/LICENSE-2.0
     
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License. -->

<project name="bti-main" default="run" basedir=".">

    <property name="framework.properties.file" 
              location="${scripts.dir}/framework.properties"/>
    <property file="${framework.properties.file}"/>

    <property name="framework.implementation.file" 
              location="${scripts.dir}/framework.xml"/>
    <import file="${framework.implementation.file}" optional="true"/>

    <!-- create coma separated list of selected test suites -->
    <dirset id="test.suites.dirs.ref"
            dir="${adaptors.dir}"
            includes="${test.suites}"/>
    <pathconvert pathsep=","
                 property="test.suites.names.list"
                 refid="test.suites.dirs.ref">
        <flattenmapper/>
    </pathconvert>
    
    <!-- For correct framework operation, all global properties defined 
         by framework SHOULD be added to this set -->
    <propertyset id="global.build.parameters.id">
        <propertyref name="root.dir"/>
        <propertyref name="ant.home"/>
        <propertyref name="adaptors.dir"/>
        <propertyref name="scripts.dir"/>
        <propertyref name="framework.properties.file"/>
        <propertyref name="framework.implementation.file"/>
        <propertyref name="test.suites.names.list"/>
    </propertyset>

    <!-- ================================================================== 
                         Framework Setup Functionality
         ================================================================== -->
    <target name="setup"
            depends="check-install, setup-framework, -save-suites-configuration,
                        load-required-parameters, save-required-parameters"/>

    <target name="-save-suites-configuration" depends="define-ant-contrib">
        <echo file="${selected.suites.configuration}"># autogenerated file containing test run setup information

# Selected test suites will be executed in the following order:${line.separator}</echo>
        <echo file="${selected.suites.configuration}" append="true"
              message="test.suites.names.list=${test.suites.names.list}${line.separator}"/>
        
        <echo file="${selected.suites.configuration}" append="true">
# This order has been obtained on the base of the following
# information about dependencies between test suites:${line.separator}</echo>

        <for list="${test.suites.names.list}" param="suite">
        <sequential>
            <echo file="${selected.suites.configuration}" append="true"
                  message="@{suite}.parameters.depends=${@{suite}.parameters.depends}${line.separator}"/>
        </sequential>
        </for>
    </target>

    <target name="check-install">
        <fail>
            <condition>
                <not>
                    <and>
                        <available file="${adaptors.dir}" type="dir"/>
                        <available file="${scripts.dir}" type="dir"/>
                        <available file="${framework.implementation.file}"/>
                        <available file="${framework.local.configuration.file}"/>
                    </and>
                </not>
            </condition>
Could not found some of the framework components.
Please, do buildtest install first.
        </fail>
    </target>

    <!-- ================================================================== 
                          Test Execution Functionality
         ================================================================== -->
    <target name="run" depends="check-setup, init-framework, init-suites, setup-suites, run-suites"/>

    <target name="run-cc" description="run-cc"
            depends="check-setup, init-framework, setup-suites, check-status,
                        create-cc-configuration">
        <java jar="${ext.cc.location}/lib/cruisecontrol-launcher.jar" dir="${cc.work.dir}" fork="true">
            <classpath>
                <fileset dir="${ext.cc.location}/lib">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <sysproperty key="javax.management.builder.initial" value="mx4j.server.MX4JMBeanServerBuilder"/>
            <arg line="-configfile ${cc.config.file} -webapppath ${ext.cc.location}/webapps/cruisecontrol -jmxport ${framework.parameters.cc.jmxport} -webport ${framework.parameters.cc.webport}"/>
            <jvmarg line="-Xmx700M" />
        </java>
    </target>

    <target name="check-setup">
        <fail>
            <condition>
                <not><available file="${required.parameters.location}"/></not>
            </condition>...
------
ERROR: Could not find ${required.parameters.location}. Please, do 'setup' first.
------
        </fail>
        <fail>
            <condition>
                <not><available file="${selected.suites.configuration}"/></not>
            </condition>...
------
ERROR: Could not find ${selected.suites.configuration}. Please, do 'setup' first.
------
        </fail>
    </target>

    <target name="test-mail" depends="define-ant-contrib">
        <xmlproperty file="${scripts.dir}/parameters.xml"
            collapseAttributes="true" 
            semanticAttributes="true"
            prefix="framework"
        />
        <ant antfile="${scripts.dir}/cc-exec-adaptor.xml">
            <property name="suite.name" value="test-mail"/>
            <property name="test-mail.parameters.mail.from" value="Test-Mail@Test.Com"/>
            <property name="test-mail.parameters.cc.from" value="Test@Test.Com"/>
            <property name="test-mail.parameters.mail.summary" 
                      value="${root.dir}/.summary.txt"/>
            <property name="test-mail.parameters.cc.message" 
                      value="${root.dir}/README.txt"/>
            <property name="test-mail.parameters.cc.attachs" 
                      value="${root.dir}/README.txt,${root.dir}/build.xml"/>
            <property name="test-mail.parameters.mail.subject.suffix" 
                      value=" (ignore this message)"/>
            <property name="test-mail.parameters.mail.suppress.exelogs"
                      value="true"/>

            <property name="mail.execution.status" value="TEST MAIL"/>
            <property name="thisbuildsuccessful" value="false"/>
        </ant>
    </target>

    <target name="clean" description="clean" depends="init-framework, clean-suites"/>

    <target name="distclean" description="distclean"/>

</project>
