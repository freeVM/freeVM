<?xml version="1.0" encoding="UTF-8"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
-->
<!DOCTYPE Test SYSTEM "test.dtd">
<!--
Author: Vladimir Nenashev
Version: $Revision: 1.5 $
-->
<Test
	ID="GlobalRefsTest3"
        date-of-creation="2005-10-04"
        timeout="2">
    	<Copyright value="apache"/>
        <Author value="Vladimir Nenashev"/>
        <Description>
		Java class creates a lot of threads. Each of them
		calls the same native method, which creates a lot
		of global references until an error occurs.
		Then the method is called again several times.
		Parameters:
			-threads - Number of threads (100 by default)
			-timeout - Timeout for waiting a thread to die (20 minutes by default)
        </Description>        
        <Keyword name="stress"/>
        <Source name="GlobalRefsTest3.java"/>

        <Runner ID="Runtime">
            <Option value="-Dorg.apache.harmony.test.share.stress.ReliabilityRunner.params=
					org.apache.harmony.test.stress.jni.globalrefs.GlobalRefsTest3 {}"/>
			<Param name="toRun" value="org.apache.harmony.test.share.stress.ReliabilityRunner">
			</Param>
		</Runner>
		<Restriction name="OtherVMOnly"/>
</Test>