<?xml version="1.0" encoding="UTF-8"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
-->
<!DOCTYPE Test SYSTEM "test.dtd">
<Test
	ID="ChainSoftRefTest2"
        date-of-creation="2005-12-19"
        timeout="2"
        >
        <!--
        Author:  Alexander Esin
        Version: $Revision: 1.5 $
        -->
    	<Copyright value="apache"/>
        <Author value="Alexander Esin"/>
		<APITestDescription>
			<TestedClass name="java.lang.ref.SoftReference"/>
			<TestedMethod name="public SoftReference(T referent)"/>
			<TestedClass name="java.lang.System"/>
			<TestedMethod name="public static void gc()"/>
        	<Description>
                    Allocate memory by chain objects: each object of the class contains reference to the same class and to bytes array. Allocation is performed in double loop. Inner loop contains allocation of this chain, some links of the chain including head are assigned to static variables, also it is taken in the account that total size of the chain does not reach heap limit. At the end of the inner loop the head of the chain and other saved links become referents of SoftReferences and their original references are assigned to null. GC is invoked explicitly. Check if OutOfMemoryError not thrown.
        	</Description>
		</APITestDescription>
        
        <Keyword name="stress"/>
        <Source name="ChainTest.java"/>
        <Modification date="2005-12-19" author="Alexander Esin"/>

        <Runner ID="Runtime">
                <Option name="-Xmx80m"/>
               	<Option value="-Dorg.apache.harmony.test.share.stress.ReliabilityRunner.params=
					org.apache.harmony.test.stress.gc.chain.ChainSoftRefTest2.ChainTest {}"/>
			<Param name="toRun" value="org.apache.harmony.test.share.stress.ReliabilityRunner">
			</Param>
		</Runner>
	<Restriction name="OtherVMOnly"/>
</Test>