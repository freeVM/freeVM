<?xml version="1.0" encoding="UTF-8"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
-->
<!DOCTYPE Test SYSTEM "test.dtd">
<Test
	ID="S_ReferenceTest_01"
	date-of-creation="2005-08-16"
	timeout="15"
	>
    <!--
    Author:  Alexander V. Esin
    Version: $Revision: 1.3 $
    -->
		<Copyright value="apache"/>
		<Author value="Alexander V. Esin"/>
		<APITestDescription>
			<TestedClass name="java.lang.ref.SoftReference"/>
			<TestedMethod name="public SoftReference(T referent, ReferenceQueue&lt;? super T&gt; q)"/>
			
			<TestedMethod name="public T get()"/>
			
			<TestedClass name="java.lang.ref.WeakReference"/>
			<TestedMethod name="public WeakReference(T referent, ReferenceQueue&lt;? super T&gt; q))"/>

			<TestedClass name="java.lang.ref.Reference"/>			
			<TestedMethod name="public T get()"/>
			
			<TestedClass name="java.lang.ref.PhantomReference"/>
			<TestedMethod name="public PhantomReference(T referent, ReferenceQueue&lt;? super T&gt; q))"/>
			<TestedMethod name="public T get()"/>
			<TestedClass name="java.lang.ref.ReferenceQueue"/>
            <TestedMethod name="public Reference&lt;? extends T&gt; poll()"/>

  			<TestedClass name="java.util.WeakHashMap"/>
			<TestedMethod name="public WeakHashMap()"/>
			<TestedMethod name="public V put(K key, V value)"/>
			<TestedMethod name="public int size()"/>
			<Description>
  				This tests SoftReference, WeakReference and PhantomReference objects. Also it tests WeakHashMap  1.Create Objects in a loop. Put it into Reference. 2.Invoked gc(). 3. Check the number of enqueued references. 4. Create WeakHashMap, fill it with key-value pairs. 5. Invoke gc(), check if some of pair is cleared.
 			</Description>
		</APITestDescription>

		<Keyword name="stress"/>
		<Source name="S_ReferenceTest_01.java"/>
		<Modification date="2005-08-16" author="Alexander V. Esin"/>

		<Runner ID="Runtime">
			<Param name="toRun" value="org.apache.harmony.test.stress.api.java.lang.ref.S_ReferenceTest_01.S_ReferenceTest_01"></Param>
		</Runner>
</Test> 
