;    Copyright 2005-2006 The Apache Software Foundation or its licensors, as applicable
;
;    Licensed under the Apache License, Version 2.0 (the "License");
;    you may not use this file except in compliance with the License.
;    You may obtain a copy of the License at
;
;       http://www.apache.org/licenses/LICENSE-2.0
;
;    Unless required by applicable law or agreed to in writing, software
;    distributed under the License is distributed on an "AS IS" BASIS,
;    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;
;    See the License for the specific language governing permissions and
;    limitations under the License.

;
; Author: Maxim N. Kurzenev
; Version: $Revision: 1.1 $
;

.source Waiter.jj
.class public org/apache/harmony/vts/test/vm/jvms/threads/threads247/threads24701/Waiter
.super java/lang/Thread

.field  master Lorg/apache/harmony/vts/test/vm/jvms/threads/threads247/threads24701/threads24701p;
.field  testLock Ljava/lang/Object;

;
; constructor
;
.method public <init>(Lorg/apache/harmony/vts/test/vm/jvms/threads/threads247/threads24701/threads24701p;Ljava/lang/Object;)V
    .limit stack 2
    .limit locals 3

    ; default initializer
    aload_0
    invokespecial java/lang/Thread/<init>()V

    ; setup fields with passed values
    aload_0
    aload_1
    putfield org/apache/harmony/vts/test/vm/jvms/threads/threads247/threads24701/Waiter/master Lorg/apache/harmony/vts/test/vm/jvms/threads/threads247/threads24701/threads24701p;
    aload_0
    aload_2
    putfield org/apache/harmony/vts/test/vm/jvms/threads/threads247/threads24701/Waiter/testLock Ljava/lang/Object;

    return
.end method

;
; run method
;
.method public run()V
    .limit stack 4
    .limit locals 5

    .catch java/lang/InterruptedException from WaitStart to WaitEnd using Catcher

    ; acquire monitor on testLock
    aload_0
    getfield org/apache/harmony/vts/test/vm/jvms/threads/threads247/threads24701/Waiter/testLock Ljava/lang/Object;
    dup
    astore_1 ; testLock
    monitorenter

    aload_0
    getfield org/apache/harmony/vts/test/vm/jvms/threads/threads247/threads24701/Waiter/master Lorg/apache/harmony/vts/test/vm/jvms/threads/threads247/threads24701/threads24701p;
    astore_2 ; master

    ; report to master that we've been started
    ; by synchronous master.threadCounter++
    aload_2
    monitorenter
    aload_2
    dup
    getfield org/apache/harmony/vts/test/vm/jvms/threads/threads247/threads24701/threads24701p/threadCounter I
    iconst_1
    iadd
    putfield org/apache/harmony/vts/test/vm/jvms/threads/threads247/threads24701/threads24701p/threadCounter I
    aload_2 
    monitorexit

    ; testLock.wait()
WaitStart:
    aload_1
    invokevirtual java/lang/Object/wait()V
    aconst_null ; stub exception for Catcher handler
WaitEnd:
Catcher:
    aload_1
    monitorexit

    ; report to master that we've been awaken
    ; by synchronous master.reenabledCounter++
    aload_2
    monitorenter
    aload_2
    dup
    getfield org/apache/harmony/vts/test/vm/jvms/threads/threads247/threads24701/threads24701p/reenabledCounter I
    iconst_1
    iadd
    putfield org/apache/harmony/vts/test/vm/jvms/threads/threads247/threads24701/threads24701p/reenabledCounter I
    aload_2
    invokevirtual java/lang/Object/notifyAll()V
    aload_2
    monitorexit
    return

.end method

