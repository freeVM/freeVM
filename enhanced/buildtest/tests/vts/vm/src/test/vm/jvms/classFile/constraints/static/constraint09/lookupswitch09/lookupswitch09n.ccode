/*
    Copyright 2005-2006 The Apache Software Foundation or its licensors, as applicable

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

    See the License for the specific language governing permissions and
    limitations under the License.
*/
// Ccode file

/**
 * @author: Alexander D. Shipilov
 * @version: $Revision: 1.1.1.1 $
 */

magic = xCAFEBABE

minor_version = 3

major_version = 45

constant_pool_count = 13

constant_pool {
  /* #1 */ UTF8 = "org/apache/harmony/vts/test/vm/jvms/classFile/constraints/static/constraint09/lookupswitch09/lookupswitch09n"
  /* #2 */ Method = #12 #7
  /* #3 */ UTF8 = "java/lang/Object"
  /* #4 */ UTF8 = "SourceFile"
  /* #5 */ UTF8 = "<init>"
  /* #6 */ UTF8 = "lookupswitch09n.ccode"
  /* #7 */ NameAndType = #5 #10
  /* #8 */ UTF8 = "Code"
  /* #9 */ UTF8 = "test"
  /* #10 */ UTF8 = "()V"
  /* #11 */ Class = #1
  /* #12 */ Class = #3
}

access_flags = PUBLIC SUPER  // x21

this_class = #11  // "org/apache/harmony/vts/test/vm/jvms/classFile/constraints/static/constraint09/lookupswitch09/lookupswitch09n"

super_class = #12  // "java/lang/Object"

interfaces_count = 0

interfaces {
}

fields_count = 0

methods_count = 2

methods {
  method {
    access_flag = PUBLIC  // x01
    name_index = #5  // "<init>"
    descriptor_index = #10  // "()V"
    attributes_count = 1
      attributes {
        attribute Code {
          attribute_name_index = #8  // "Code"
          attribute_length = 17
          max_stack = 1
          max_locals = 1
          code_length = 5
          code asm {
          0:	aload_0
          1:	invokespecial #2
          4:	return
          }
          exception_table_length = 0
          attributes_count = 0
        }
      }
  }

// Test method
  method {
    access_flag =   // x00
    name_index = #9  // "test"
    descriptor_index = #10  // "()V"
    attributes_count = 1
      attributes {
        attribute Code {
          attribute_name_index = #8  // "Code"
          attribute_length = 69
          max_stack = 2
          max_locals = 2
          code_length = 57
          code bin {
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                 x11 x00 x23 xAB x00 x00 x00 x32   // lookupswitch (xAB)
                                                  // default target has illegal branch (x00 x00 x00 x32) - to the instruction modified by wide instruction.
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                 x00 x00 x00 x04 x00 x00 x00 x0A
                 x00 x00 x00 x2D x00 x00 x00 x17
                 x00 x00 x00 x2A x00 x00 x00 x23
                 x00 x00 x00 x2B x00 x00 x00 x2E
                 x00 x00 x00 x2C xB1 xB1 xB1 xB1
                 xB1 x11 x00 x01 xC4 x36 x00 x02
                 xB1
          }
          exception_table_length = 0
          attributes_count = 0
        }
      }
  }
}

attributes_count = 1
attributes {
  attribute SourceFile {
    attribute_name_index = #4  // "SourceFile"
    attribute_length = 2
    sourcefile_index = #6  // "lookupswitch09n.ccode"
  }
}
