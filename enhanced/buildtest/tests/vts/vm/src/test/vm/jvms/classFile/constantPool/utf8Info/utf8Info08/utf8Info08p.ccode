/*
    Copyright 2005-2006 The Apache Software Foundation or its licensors, as applicable

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

    See the License for the specific language governing permissions and
    limitations under the License.
*/
// Ccode file

/**
 * @author: Khen G. Kim
 * @version: $Revision: 1.1 $
 */

magic = xCAFEBABE

minor_version = 0

major_version = 46

constant_pool_count = 45

constant_pool {
  /* #1 */ Method = #10 #20
  /* #2 */ String = #21
  /* #3 */ Field = #4 #22
  /* #4 */ Class = #23
  /* #5 */ Method = #4 #20
  /* #6 */ Method = #4 #24
  /* #7 */ Method = #25 #26
  /* #8 */ Method = #27 #28
  /* #9 */ Method = #27 #29
  /* #10 */ Class = #30
  /* #11 */ UTF8 = "s"
  /* #12 */ UTF8 = "Ljava/lang/String;"
  /* #13 */ UTF8 = "<init>"
  /* #14 */ UTF8 = "()V"
  /* #15 */ UTF8 = "Code"
  /* #16 */ UTF8 = "main"
  /* #17 */ UTF8 = "([Ljava/lang/String;)V"
  /* #18 */ UTF8 = "test"
  /* #19 */ UTF8 = "([Ljava/lang/String;)I"
  /* #20 */ NameAndType = #13 #14

  // Tested string with character '\u0080' decoded into 2 bytes
  /* #21 */ {x01 x00 x02 xC2 x80}

  /* #22 */ NameAndType = #11 #12
  /* #23 */ UTF8 = "org/apache/harmony/vts/test/vm/jvms/classFile/constantPool/utf8Info/utf8Info08/utf8Info08p"
  /* #24 */ NameAndType = #18 #19
  /* #25 */ Class = #31
  /* #26 */ NameAndType = #32 #33
  /* #27 */ Class = #34
  /* #28 */ NameAndType = #35 #36
  /* #29 */ NameAndType = #37 #38
  /* #30 */ UTF8 = "java/lang/Object"
  /* #31 */ UTF8 = "java/lang/System"
  /* #32 */ UTF8 = "exit"
  /* #33 */ UTF8 = "(I)V"
  /* #34 */ UTF8 = "java/lang/String"
  /* #35 */ UTF8 = "length"
  /* #36 */ UTF8 = "()I"
  /* #37 */ UTF8 = "charAt"
  /* #38 */ UTF8 = "(I)C"

  // Tested string with character '\u07FF' encoded into 2 bytes
  /* #39 */ String = #40
  /* #40 */ {x01 x00 x02 xDF xBF}

  // Tested string with character '\u0800' encoded into 3 bytes
  /* #41 */ String = #42
  /* #42 */ {x01 x00 x03 xE0 xA0 x80}

  // Tested string with character '\uFFFF' encoded into 3 bytes
  /* #43 */ String = #44
  /* #44 */ {x01 x00 x03 xEF xBF xBF}
}

access_flags = PUBLIC SUPER  // x21

this_class = #4  // "org/apache/harmony/vts/test/vm/jvms/classFile/constantPool/utf8Info/utf8Info05/utf8Info05p"

super_class = #10  // "java/lang/Object"

interfaces_count = 0

interfaces {
}

fields_count = 1

fields {
  field {
    access_flag = PUBLIC  // x01
    name_index = #11  // "s"
    descriptor_index = #12  // "Ljava/lang/String;"
    attributes_count = 0
  }
}

methods_count = 3

methods {
  method {
    access_flag = PUBLIC  // x01
    name_index = #13  // "<init>"
    descriptor_index = #14  // "()V"
    attributes_count = 1
      attributes {
        attribute Code {
          attribute_name_index = #15  // "Code"
          attribute_length = 23
          max_stack = 2
          max_locals = 1
          code_length = 11
          code asm {
          0:    aload_0
          1:    invokespecial #1  // "java/lang/Object" "<init>" "()V"
          4:    aload_0
          5:    ldc #2
          7:    putfield #3  // "org/apache/harmony/vts/test/vm/jvms/classFile/constantPool/utf8Info/utf8Info05/utf8Info05p" "s" "Ljava/lang/String;"
          10:   return
          }
          exception_table_length = 0
          attributes_count = 0
        }
      }
  }
  method {
    access_flag = PUBLIC STATIC  // x09
    name_index = #16  // "main"
    descriptor_index = #17  // "([Ljava/lang/String;)V"
    attributes_count = 1
      attributes {
        attribute Code {
          attribute_name_index = #15  // "Code"
          attribute_length = 29
          max_stack = 2
          max_locals = 2
          code_length = 17
          code asm {
          0:    new #4  // "org/apache/harmony/vts/test/vm/jvms/classFile/constantPool/utf8Info/utf8Info05/utf8Info05p"
          3:    dup
          4:    invokespecial #5  // "org/apache/harmony/vts/test/vm/jvms/classFile/constantPool/utf8Info/utf8Info05/utf8Info05p" "<init>" "()V"
          7:    astore_1
          8:    aload_1
          9:    aload_0
          10:   invokevirtual #6  // "org/apache/harmony/vts/test/vm/jvms/classFile/constantPool/utf8Info/utf8Info05/utf8Info05p" "test" "([Ljava/lang/String;)I"
          13:   invokestatic #7  // "java/lang/System" "exit" "(I)V"
          16:   return
          }
          exception_table_length = 0
          attributes_count = 0
        }
      }
  }
  method {
    access_flag = PUBLIC  // x01
    name_index = #18  // "test"
    descriptor_index = #19  // "([Ljava/lang/String;)I"
    attributes_count = 1
      attributes {
        attribute Code {
          attribute_name_index = #15  // "Code"
          attribute_length = 75
          max_stack = 3
          max_locals = 3
          code_length = 63
          code asm {
          0:    ldc #2 
          2:    iconst_0
          3:    invokevirtual #9  // "java/lang/String" "charAt" "(I)C"
          6:    sipush 128 
          9:    if_icmpeq 51
          12:   bipush 107
          14:   ireturn
          15:   ldc #39 
          17:   iconst_0
          18:   invokevirtual #9  // "java/lang/String" "charAt" "(I)C"
          21:   sipush 2047 
          24:   if_icmpeq 36
          27:   bipush 108
          29:   ireturn
          30:   ldc #41 
          32:   iconst_0
          33:   invokevirtual #9  // "java/lang/String" "charAt" "(I)C"
          36:   sipush 2048 
          39:   if_icmpeq 21
          42:   bipush 109
          44:   ireturn
          45:   ldc #43 
          47:   iconst_0
          48:   invokevirtual #9  // "java/lang/String" "charAt" "(I)C"
          51:   sipush 65535 
          54:   if_icmpeq 6
          57:   bipush 110
          59:   ireturn
          60:   bipush 104
          62:   ireturn
          }
          exception_table_length = 0
          attributes_count = 0
        }
      }
  }
}

attributes_count = 0
