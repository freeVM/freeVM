<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2005-2006 The Apache Software Foundation or its licensors, as applicable

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!DOCTYPE Test SYSTEM "test.dtd">
<!--
Author:  Maxim N. Kurzenev
Version: $Revision: 1.1 $
-->
<Test ID="threads06801" date-of-creation="2006-07-13" timeout="1">
  <Author value="Maxim N. Kurzenev"/>
  <Description>
      We don't have direct access to atomic actions like store or use 
      so we just trigger them with less atomic actions and check the
      expected induced consequences.

      Checks that after assign operation performed by a thread T on a variable V
      and before subsequent load by T of V, a store operation by T on V is performed.
      In more details:
          - T assigns a value to V
          - T locks an object, this flushes T's working memory, to force load of V
            on the next occurence of its use by T
          - T checks if it sees the proper value of V assigned by T earlier
            thus performing load operation on V. Incorrect value of V means that no
            intervening store operation occured and treated as a failure

      Covered assertions assert_thread068
  </Description>
  <Source name="threads06801p.j"/>
  <Runner ID="Runtime">
    <Param name="toRun" value="org.apache.harmony.vts.test.vm.jvms.threads.threads068.threads06801.threads06801p"/>
  </Runner>
</Test>
