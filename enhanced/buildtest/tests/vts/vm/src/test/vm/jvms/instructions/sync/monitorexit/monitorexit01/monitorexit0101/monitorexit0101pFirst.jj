;    Copyright 2005-2006 The Apache Software Foundation or its licensors, as applicable
;
;    Licensed under the Apache License, Version 2.0 (the "License");
;    you may not use this file except in compliance with the License.
;    You may obtain a copy of the License at
;
;       http://www.apache.org/licenses/LICENSE-2.0
;
;    Unless required by applicable law or agreed to in writing, software
;    distributed under the License is distributed on an "AS IS" BASIS,
;    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;
;    See the License for the specific language governing permissions and
;    limitations under the License.

;
; Author: Alexander D. Shipilov
; Version: $Revision: 1.1.1.1 $
;

.class public org/apache/harmony/vts/test/vm/jvms/instructions/sync/monitorexit/monitorexit01/monitorexit0101/monitorexit0101pFirst
.super java/lang/Thread
.field public locker [I

;
; initializer
.method public <init>([I)V
   .limit stack 2
   .limit locals 2

   aload_0
   invokespecial java/lang/Thread/<init>()V

; store locker array int[1] in this.locker field
   aload_0
   aload_1
   putfield org/apache/harmony/vts/test/vm/jvms/instructions/sync/monitorexit/monitorexit01/monitorexit0101/monitorexit0101pFirst/locker [I

   return
.end method

;
; run method
.method public run()V
   .limit stack 4
   .limit locals 4
   
; get locker array from locker field and store it in local variable 1
   aload_0
   getfield org/apache/harmony/vts/test/vm/jvms/instructions/sync/monitorexit/monitorexit01/monitorexit0101/monitorexit0101pFirst/locker [I
   astore_1

; get a lock to array object
   aload_1
   monitorenter

; create checker array
   iconst_1
   newarray int
   astore_3
   aload_3
   iconst_0
   iconst_0
   iastore

; create second thread
   new org/apache/harmony/vts/test/vm/jvms/instructions/sync/monitorexit/monitorexit01/monitorexit0101/monitorexit0101pSecond
   dup
   aload_1
   aload_3
   invokespecial org/apache/harmony/vts/test/vm/jvms/instructions/sync/monitorexit/monitorexit01/monitorexit0101/monitorexit0101pSecond/<init>([I[I)V
   astore_2

; unlock array object
   aload_1
   monitorexit

; start second thread
   aload_2
   invokevirtual org/apache/harmony/vts/test/vm/jvms/instructions/sync/monitorexit/monitorexit01/monitorexit0101/monitorexit0101pSecond/start()V

; hold this thread while checker[0] == 0
label:
   aload_3
   iconst_0
   iaload
   ifeq label

; do while second thread working
   aload_2
   invokevirtual org/apache/harmony/vts/test/vm/jvms/instructions/sync/monitorexit/monitorexit01/monitorexit0101/monitorexit0101pSecond/join()V

; stop second thread
   aload_2
   invokevirtual org/apache/harmony/vts/test/vm/jvms/instructions/sync/monitorexit/monitorexit01/monitorexit0101/monitorexit0101pSecond/stop()V

   return
.end method
