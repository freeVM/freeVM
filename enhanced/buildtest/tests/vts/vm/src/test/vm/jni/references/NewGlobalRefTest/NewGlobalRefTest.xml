<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2005-2006 The Apache Software Foundation or its licensors, as applicable

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!DOCTYPE Test SYSTEM "test.dtd">
<!--
Author: Petr Ivanov
Version: $Revision: 1.3 $
-->

<Test
    ID="NewGlobalRefTest"
    date-of-creation="11-02-2005"
    timeout="1"
    >   
        <Author value="Petr Ivanov"/>
        <Description>
            <TestedMethod name="NewGlobalRef()"/>
            Test creates the object and transfers it 
            to native, which stores it in the static variable.
            Then the method is called again and it is checked
            that the reference is valid, and it points the same 
            object as before.

            Covered assertions assert_func093 assert_func094 assert_func097
        </Description>
        <Keyword name="functional"/>    
        <Source name="NewGlobalRefTest.java"/>
            
        <Runner ID="Runtime">
            <Param name="toRun" value="org.apache.harmony.vts.test.vm.jni.references.NewGlobalRefTest"/>
        </Runner>
</Test>
