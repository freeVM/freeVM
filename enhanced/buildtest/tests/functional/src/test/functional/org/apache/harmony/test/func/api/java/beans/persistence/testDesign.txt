#  Licensed to the Apache Software Foundation (ASF) under one or more
#  contributor license agreements.  See the NOTICE file distributed with
#  this work for additional information regarding copyright ownership.
#  The ASF licenses this file to You under the Apache License, Version 2.0
#  (the "License"); you may not use this file except in compliance with
#  the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
Zero step: generate java objects which then are encoded to XML file. You can find xml objects in "xml objects.txt" file. 
Brief decription of xml objects can be found below.

Testing Decoder:
Under test: XMLDecoder
For each xml file:
-     XML file are decoded with help DRL Decoder to java object.
-     Objects obtained from zero step and from step#2 are compared with help equals(Object) method.
  

Testing Encoder:
Under test: XMLEncoder and Encoder
For each object from zero step:
-     Object is encoded with help DRL Encoder: result is XML file.
-     XML file is decoded with help reference implementation Encoder to java object
-     Objects obtained from zero step and from step#2 are compared with help equals(Object) method 

 

Testing Decoder and Encoder:
Under test: XMLDecoder, XMLEncoder and Encoder
For each object from zero step:
-     Object is encoded with help DRL Encoder: result is xml files.
-     XML files are decoded with help DRL Encoder
-     Objects obtained from zero step and from step#2 are compared with help equals(Object) method

You can find xml objects in "xml objects.txt" file. 
Brief decription of xml's:

array_object_empty: Return empty array of object.         
array_primitive_allDefined: Return array of primitive type, all elements of the array are defined.	 
array_string_someDefined: Return array of string type, some elements of the array are defined.
boolean_: Boolean object
byte_: Byte object
character_: Character object                 
class_: Class object
double_: Double object                     
float_: Float object
integer_: Integer object
long_: Long object
null_: null
object_properties_cross_reference: Return object, which has cross-reference.
object_properties_noreference: Return object, 2 of 4 properties of the object are set.
object_properties_reference: Return object, values of 2 properties of this object are one object.
object_properties_reference_to_returnedObject: Return object, which has property, value of which is returned object.
short_: Short object
string_: String object