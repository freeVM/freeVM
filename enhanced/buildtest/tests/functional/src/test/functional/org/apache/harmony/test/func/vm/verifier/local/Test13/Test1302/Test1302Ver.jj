;  Licensed to the Apache Software Foundation (ASF) under one or more
;  contributor license agreements.  See the NOTICE file distributed with
;  this work for additional information regarding copyright ownership.
;  The ASF licenses this file to You under the Apache License, Version 2.0
;  (the "License"); you may not use this file except in compliance with
;  the License.  You may obtain a copy of the License at
;
;     http://www.apache.org/licenses/LICENSE-2.0
;
;  Unless required by applicable law or agreed to in writing, software
;  distributed under the License is distributed on an "AS IS" BASIS,
;  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;  See the License for the specific language governing permissions and
;  limitations under the License.
;
;
;

.class public org/apache/harmony/test/func/vm/verifier/local/Test13/Test1302/Test1302Ver
.super java/lang/Object

;
; standard initializer
.method public <init>()V
   aload_0
   invokespecial java/lang/Object/<init>()V
   return
.end method

;
; test method
.method public test()V
   .limit stack 6
   .limit locals 6

   new org/apache/harmony/test/func/vm/verifier/local/Test13/Test1302/Test1302E
   dup
   invokespecial org/apache/harmony/test/func/vm/verifier/local/Test13/Test1302/Test1302E/<init>()V
   astore 3 ; E
   new org/apache/harmony/test/func/vm/verifier/local/Test13/Test1302/Test1302P
   dup
   invokespecial org/apache/harmony/test/func/vm/verifier/local/Test13/Test1302/Test1302P/<init>()V
   astore 4 ; P
   new java/lang/Object
   dup
   invokespecial java/lang/Object/<init>()V
   astore 5 ; Object

; store 0 to localvariable2
   sipush 0
   istore_2

; push Object, E, Object, P, Object
   aload 5 ; Object
   aload 3 ; E
   aload 5 ; Object
   aload 4 ; P
   aload 5 ; Object

lab:
   iinc 2 1 ; localvariable2++
   pop
   invokevirtual org/apache/harmony/test/func/vm/verifier/local/Test13/Test1302/Test1302H/test()V
   pop
   invokevirtual org/apache/harmony/test/func/vm/verifier/local/Test13/Test1302/Test1302B/test()V
   pop

   iload_2
   tableswitch 1
        l1 ; if 1 jump to l1
        l2 ; if 2 jump to l2
        l3 ; if 3 jump to l3
        l4 ; if 4 jump to l4
        l5 ; if 5 jump to l5
        l6 ; if 6 jump to l6
        l7 ; if 7 jump to l7
        l8 ; if 8 jump to l8
        l9 ; if 9 jump to l9
        l10 ; if 10 jump to l10
     default: def ; jump to def

l1:
; push Object, E, Object, P, Object
   aload 5 ; Object
   aload 3 ; E
   aload 5 ; Object
   aload 4 ; P
   aload 5 ; Object
   goto lab

l2:
; push Object, E, Object, P, Object
   aload 5 ; Object
   aload 3 ; E
   aload 5 ; Object
   aload 4 ; P
   aload 5 ; Object
   goto lab

l3:
; push E, E, E, P, P
   aload 3 ; E
   aload 3 ; E
   aload 3 ; E
   aload 4 ; P
   aload 4 ; P
   goto lab

l4:
; push Object, E, Object, P, Object
   aload 5 ; Object
   aload 3 ; E
   aload 5 ; Object
   aload 4 ; P
   aload 5 ; Object
   goto lab

l5:
; push Object, E, Object, P, Object
   aload 5 ; Object
   aload 3 ; E
   aload 5 ; Object
   aload 4 ; P
   aload 5 ; Object
   goto lab

l6:
; push Object, E, Object, P, Object
   aload 5 ; Object
   aload 3 ; E
   aload 5 ; Object
   aload 4 ; P
   aload 5 ; Object
   goto lab

l7:
; push Object, E, Object, P, Object
   aload 5 ; Object
   aload 3 ; E
   aload 5 ; Object
   aload 4 ; P
   aload 5 ; Object
   goto lab

l8:
; push Object, E, Object, P, Object
   aload 5 ; Object
   aload 3 ; E
   aload 5 ; Object
   aload 4 ; P
   aload 5 ; Object
   goto lab
 
l9:
; push Object, E, Object, P, Object
   aload 5 ; Object
   aload 3 ; E
   aload 5 ; Object
   aload 4 ; P
   aload 5 ; Object
   goto lab

l10:
; push Object, E, Object, P or Object, Object
   aload 5 ; Object

   iconst_1
   ifeq l11
   aload 3 ; E
   goto l12
l11:
   aload 5 ; Object
l12:

   aload 5 ; Object
   aload 4 ; P
   aload 5 ; Object
   goto lab

def:
   return
.end method
