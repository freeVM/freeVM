<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/xsl' href='../../../../../../../../../../test.xsl'?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!DOCTYPE Test SYSTEM '../../../../../../../../../../test.dtd'>
<!-- 
-->


<Test
    ID="JComponentAncestorListenerTest"
    date-of-creation="2005-03-18"
    timeout="1"
    >

    
    
    
    <MulticaseTestDescription>
        <TestedClass name="javax.swing.JComponent"/>

        <Case ID="testAddRemove">
            <TestedMethod name="public void addAncestorListener(AncestorListener listener)"/>
            <TestedMethod name="public void removeAncestorListener(AncestorListener listener)"/>
            <TestedMethod name="public AncestorListener[] getAncestorListeners()"/>
            <Precondition>creates a child of JComponent</Precondition>
            <Description>adds and removes many ancestorlisteners (null, equal to existing, etc) and tracks count of currently
            available listeners using getAncestorListeners()</Description>
        </Case>

        <Case ID="testGetAncestorListeners">
            <TestedMethod name="public AncestorListener[] getAncestorListeners()"/>
            <Precondition>creates a child of JComponent</Precondition>
            <Description>calls getAncestorListeners() twice</Description>
            <Expected>different objects returned</Expected>
        </Case>

        <Case ID="testSetLocation">
            <TestedMethod name="public void addAncestorListener(AncestorListener listener)"/>
            <Precondition>creates a child of JComponent, adds AncestorListeners</Precondition>
            <Description>calls setLocation(13,17) two times</Description>
            <Expected>first time ancestorMoved() of listeners is called, second - not called</Expected>
        </Case>

        <Case ID="testSetLocation">
            <TestedMethod name="public void addAncestorListener(AncestorListener listener)"/>
            <Precondition>creates a child of JComponent, adds AncestorListener</Precondition>
            <Description>calls setLocation(13,17) two times</Description>
            <Expected>first time ancestorMoved() of listener is called, second - not called</Expected>
        </Case>
        
        <Case ID="testAncestorAdded">
            <TestedMethod name="public void addAncestorListener(AncestorListener listener)"/>
            <Precondition>creates a child of JComponent, adds AncestorListeners</Precondition>
            <Description>adds JComponent to an invisible pane, call setVisible(true) 
            twice on that pane</Description>
            <Expected>first time ancestorAdded() of listeners is called, second - not called</Expected>
        </Case>
        
        <Case ID="testAncestorRemoved">
            <TestedMethod name="public void addAncestorListener(AncestorListener listener)"/>
            <Precondition>creates a child of JComponent, adds AncestorListeners</Precondition>
            <Description>adds JComponent to a visible pane, call setVisible(false) 
            twice on that pane</Description>
            <Expected>first time ancestorRemoved() of listeners is called, second - not called</Expected>
        </Case>

    </MulticaseTestDescription>
    
    <Keyword name="gui"/>    
    <Keyword name="functional"/>    
    <Source name="JComponentAncestorListenerTest.java"/>

    <Runner ID="MultiCase">
        <Param name="toRun" value="org.apache.harmony.test.func.api.javax.swing.JComponent.JComponentAncestorListenerTest">
        </Param>
    </Runner>
    <Restriction name="OtherVMOnly"/>
</Test> 
