<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/xsl' href='../../../../../../../../../../test.xsl'?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!DOCTYPE Test SYSTEM '../../../../../../../../../../test.dtd'>
<!-- 
-->


<Test
    ID="AbstractActionTest"
    date-of-creation="2005-03-01"
    timeout="1"
    >

    
    
    
    <MulticaseTestDescription>
        <TestedClass name="javax.swing.AbstractAction"/>

        <Case ID="testInit">
            <TestedMethod name="public AbstractAction()"/>
            <Precondition> none </Precondition>
            <Description>creates a new AbstractAction object and check its init state</Description>
            <Expected>API conformance</Expected>
        </Case>

        <Case ID="testInit02">
            <TestedMethod name="public AbstractAction(String name)"/>
            <Precondition> none </Precondition>
            <Description>creates a new AbstractAction object and check its init state</Description>
            <Expected>API conformance</Expected>
        </Case>

        <Case ID="testInit03">
            <TestedMethod name="public AbstractAction(String name, Icon icon)"/>
            <Precondition> none </Precondition>
            <Description>creates a new AbstractAction object and check its init state</Description>
            <Expected>API conformance</Expected>
        </Case>

        <Case ID="testAddPropertyChangeListener">
            <TestedMethod name="public void addPropertyChangeListener(PropertyChangeListener listener)"/>
            <Precondition>creates an  AbstractAction object</Precondition>
            <Description>adds a listener and check message posting</Description>
            <Expected>API conformance</Expected>
        </Case>

        <Case ID="testClone">
            <TestedMethod name="protected Object clone()"/>
            <Precondition>creates an  AbstractAction object</Precondition>
            <Description>clones the object and check cloned one</Description>
            <Expected>API conformance</Expected>
        </Case>

        <Case ID="testFirePropertyChange">
            <TestedMethod name="protected void firePropertyChange(String propertyName, Object oldValue, Object newValue)"/>
            <Precondition>creates an AbstractAction object</Precondition>
            <Description></Description>
            <Expected>API conformance</Expected>
        </Case>
        
        <Case ID="testGetKeys">
            <TestedMethod name="public Object[] getKeys()"/>
            <Precondition>creates an AbstractAction object</Precondition>
            <Description></Description>
            <Expected>API conformance</Expected>
        </Case>
        
        <Case ID="testIsEnabled">
            <TestedMethod name="public boolean isEnabled()"/>
            <Precondition>creates an AbstractAction object</Precondition>
            <Description></Description>
            <Expected>API conformance</Expected>
        </Case>
        
        <Case ID="testSetEnabled">
            <TestedMethod name="public void setEnabled(boolean newValue)"/>
            <Precondition>creates an AbstractAction object</Precondition>
            <Description></Description>
            <Expected>API conformance</Expected>
        </Case>

        <Case ID="testGetValue">
            <TestedMethod name="public Object getValue(String key)"/>
            <Precondition>creates an AbstractAction object</Precondition>
            <Description></Description>
            <Expected>API conformance</Expected>
        </Case>
        
        <Case ID="testPutValue">
            <TestedMethod name="public void putValue(String key, Object newValue)"/>
            <Precondition>creates an AbstractAction object</Precondition>
            <Description></Description>
            <Expected>API conformance</Expected>
        </Case>


    </MulticaseTestDescription>

    <Keyword name="functional"/>
    <Keyword name="gui"/>


    <Source name="AbstractActionTest.java"/>

    <Runner ID="MultiCase">
        <Param name="toRun" value="org.apache.harmony.test.func.api.javax.swing.AbstractAction.AbstractActionTest">
                <Option name="-reference" value="$ReferenceRuntime"/>
                <Option name="-tested" value="$TestedRuntime"/>
                <Option name="-temp" value="$TempStorage"/>
                <Option name="-usedCP" value="$CP"/>
                <Option name="-bootCP" value="$bootClassPath"/>
                <Option name="-mode" value="$performance.tests.mode"/>
                <Option name="-threads" value="$qa.threads"/>
        </Param>
    </Runner>
</Test> 
