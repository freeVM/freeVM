<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/xsl' href='../../../../../../../../../../test.xsl'?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!DOCTYPE Test SYSTEM '../../../../../../../../../../test.dtd'>
<!-- 
-->

<Test
    ID="MessageFormatTest"
    date-of-creation="2005-02-07"
    timeout="1"
    >   
        
        
        <APITestDescription>
            
            <TestedClass name="java.text.DateFormat" />
            <TestedMethod name="StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition fieldPosition)" />
            <TestedMethod name="static DateFormat getTimeInstance(int style, Locale aLocale)" />
            <TestedMethod name="static DateFormat getDateInstance(int style, Locale aLocale)" />
            <TestedMethod name="static DateFormat getDateInstance()" />
            <TestedMethod name="static DateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale aLocale)" />
            <TestedMethod name="static DateFormat getDateTimeInstance(int dateStyle, int timeStyle) " />
            <TestedMethod name="setTimeZone(TimeZone)" />
            <TestedMethod name="DateFormat()" />
            <TestedMethod name="String format(Date date)" />

            
            <TestedClass name="java.text.DateFormatSymbols" />
            <TestedMethod name="DateFormatSymbols(Locale)" />
            <TestedMethod name="String[][] getZoneStrings()" />

            <TestedClass name="java.text.DecimalFormat" />
            <TestedMethod name="setMaximumIntegerDigits(int)" />
            <TestedMethod name="Object clone()" />
            <TestedMethod name="setMinimumFractionDigits(int)" />
            <TestedMethod name="setDecimalSeparatorAlwaysShown(boolean)" />
            <TestedMethod name="public String getPositivePrefix()" />
            <TestedMethod name="StringBuffer format(long number, StringBuffer result, FieldPosition fieldPosition)" />
            <TestedMethod name="setMaximumFractionDigits(int)" />
            <TestedMethod name="DecimalFormatSymbols getDecimalFormatSymbols()" />
            <TestedMethod name="setMinimumIntegerDigits(int)" />
            <TestedMethod name="void applyPattern(String pattern)" />

            <TestedClass name="java.text.DecimalFormatSymbols" />
            <TestedMethod name="char getGroupingSeparator()" />
            <TestedMethod name="char getMinusSign()" />
            <TestedMethod name="DecimalFormatSymbols(Locale)" />
            <TestedMethod name="char getZeroDigit()" />
            <TestedMethod name="char getDecimalSeparator()" />

            <TestedClass name="java.text.FieldPosition" />
            <TestedMethod name="FieldPosition(int)" />
            <TestedMethod name="Format$Field getFieldAttribute()" />
            <TestedMethod name="setEndIndex(int)" />
            <TestedMethod name="setBeginIndex(int)" />

            <TestedClass name="java.text.Format" />
            <TestedMethod name="Format()" />
            <TestedMethod name="Object clone()" />
            <TestedMethod name="String format(Object obj)" />
            
            <TestedClass name="java.text.MessageFormat" />
            <TestedMethod name="MessageFormat(String)" />
            <TestedMethod name="applyPattern(String)" />
            <TestedMethod name="StringBuffer format(Object[] arguments, StringBuffer result, FieldPosition pos)" />
            <TestedMethod name="public static String format(String pattern, Object... arguments)" />
            <TestedMethod name="StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition fieldPosition)" />
            <TestedMethod name="setLocale(Locale)" />
            
            <TestedClass name="java.text.NumberFormat" />
            <TestedMethod name="NumberFormat()" />
            <TestedMethod name="int getMinimumIntegerDigits()" />
            <TestedMethod name="setMinimumIntegerDigits(int)" />
            <TestedMethod name="setParseIntegerOnly(boolean)" />
            <TestedMethod name="boolean isGroupingUsed()" />
            <TestedMethod name="public static NumberFormat getIntegerInstance(Locale inLocale)" />
            <TestedMethod name="public static final NumberFormat getPercentInstance(Locale inLocale)" />
            <TestedMethod name="public static final NumberFormat getNumberInstance(Locale inLocale)" />
            <TestedMethod name="public static final NumberFormat getInstance(Locale inLocale)" />
            <TestedMethod name="Object clone()" />
            <TestedMethod name="setGroupingUsed(boolean)" />
            <TestedMethod name="int getMaximumIntegerDigits()" />
            <TestedMethod name="int getMaximumFractionDigits()" />
            <TestedMethod name="setMaximumIntegerDigits(int)" />
            <TestedMethod name="setMinimumFractionDigits(int)" />
            <TestedMethod name="StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition fieldPosition)" />
            <TestedMethod name="setMaximumFractionDigits(int)" />
            <TestedMethod name="int getMinimumFractionDigits()" />

            <TestedClass name="java.text.SimpleDateFormat" />
            <TestedMethod name="SimpleDateFormat(String, Locale)" />
            <TestedMethod name="void set2DigitYearStart(Date startDate)" />
            <TestedMethod name="StringBuffer format(Date date, StringBuffer toAppendTo, FieldPosition pos)" />

            <Description>
                Tests MessageFormat class by collating some predefined strings
            </Description>
        </APITestDescription>

        <Keyword name="functional" />
        <Source name="MessageFormatTest.java"/>
            
        <Runner ID="Runtime">
            <Param name="toRun" value="org.apache.harmony.test.func.api.java.text.MessageFormat.MessageFormatTest"/>
        </Runner>
</Test>
