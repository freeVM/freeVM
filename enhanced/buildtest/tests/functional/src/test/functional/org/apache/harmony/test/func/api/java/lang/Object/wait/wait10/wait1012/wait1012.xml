<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/xsl' href='../../../../../../../../../../../../../test.xsl'?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!DOCTYPE Test SYSTEM '../../../../../../../../../../../../../test.dtd'>
<Test
    ID="wait1012"
    date-of-creation="2005-6-30"
    timeout="1"
    >
        
        
        <APITestDescription>
            <TestedClass name="java.lang.Object"/>
            <TestedMethod name="public final void wait() throws InterruptedException"/>
            <Description>
The test is against wait1012 method.

For testing purposes the main thread holding a lock to a monitor object
creates two threads and sequentially starts these.
After starting a thread in indefinitely waits.
Each new thread waits for a predefined time first,
then it interrupts the main thread.

The test performs the following checks on the wait1012 method.
1) The method throws "IllegalMonitorStateException"
   if the current thread is not the owner of this object's monitor.
2) The method causes current thread to wait until another thread interrupts it.
            </Description>
            </APITestDescription>
        <Source name="wait1012.java"/>
        <Runner ID="Runtime">
            <Param name="toRun" value="org.apache.harmony.test.func.api.java.lang.Object.wait.wait10.wait1012.wait1012"/>
        </Runner>
</Test>
