<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/xsl' href='../../../../../../../../../../../test.xsl'?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!DOCTYPE Test SYSTEM '../../../../../../../../../../../test.dtd'>
<Test
    ID="F_ReflectionTest_01"
    date-of-creation="2004-12-01"
    timeout="1"
    >
    <!--
    -->
        
        
        <APITestDescription>
            <TestedClass name="java.lang.Class"/>
            <TestedMethod name="public static Class&lt;?&gt; forName(String className) throws ClassNotFoundException"/>
            <TestedMethod name="public int getModifiers()"/>
            <TestedMethod name="public Class&lt;? super T&gt; getSuperclass()"/>
            <TestedMethod name="public Class[] getInterfaces()"/>
            <TestedMethod name="public String getName()"/>
            <TestedMethod name="public Field[] getDeclaredFields()"/>
            <TestedMethod name="public Constructor[] getDeclaredConstructors()"/>
            <TestedMethod name="public Method[] getDeclaredMethods()"/>
            <TestedMethod name="public Class[] getDeclaredClasses()"/>
            <TestedMethod name="public boolean isPrimitive()"/>
            <TestedMethod name="public boolean isArray()"/>
            <TestedMethod name="public Class&lt;?&gt; getComponentType()"/>            
            <TestedMethod name="public boolean isInterface()"/>
            
            <TestedClass name="java.lang.StringBuffer"/>
            <TestedMethod name="public StringBuffer(int capacity)"/>
            <TestedMethod name="public String toString()"/>
            
            <TestedClass name="java.lang.String"/>
            <TestedMethod name="public int lastIndexOf(int ch)"/>
            <TestedMethod name="public String substring(int beginIndex)"/>            
            
            <TestedClass name="java.lang.reflect.Modifier"/>
            <TestedMethod name="public static boolean isPublic(int mod)"/>
            <TestedMethod name="public static boolean isPrivate(int mod)"/>
            <TestedMethod name="public static boolean isProtected(int mod)"/>
            <TestedMethod name="public static boolean isStatic(int mod)"/>
            <TestedMethod name="public static boolean isAbstract(int mod)"/>
            <TestedMethod name="public static boolean isFinal(int mod)"/>
            
            <TestedClass name="java.lang.reflect.Field"/>
            <TestedMethod name="public String getName()"/>
            <TestedMethod name="public Class&lt;?&gt; getType()"/>
            <TestedMethod name="public int getModifiers()"/>
            
            <TestedClass name="java.lang.reflect.Constructor"/>
            <TestedMethod name="public int getModifiers()"/>
            <TestedMethod name="public String getName()"/>
            <TestedMethod name="public Class&lt;?&gt;[] getParameterTypes()"/>
            <TestedMethod name="public Class&lt;?&gt;[] getExceptionTypes()"/>
            
            <TestedClass name="java.lang.reflect.Method"/>
            <TestedMethod name="public int getModifiers()"/>
            <TestedMethod name="public String getName()"/>
            <TestedMethod name="public Class&lt;?&gt;[] getParameterTypes()"/>
            <TestedMethod name="public Class&lt;?&gt;[] getExceptionTypes()"/>
            <TestedMethod name="public Class&lt;?&gt; getReturnType()"/>
            
            <Description>
                Extract metadata of classes.
            </Description>
        </APITestDescription>

        <Keyword name="functional"/>
        <Source name="F_ReflectionTest_01.java"/>
        <Modification date="2004-12-02" />

        <Runner ID="Runtime">
            <Param name="toRun" value="org.apache.harmony.test.func.api.java.lang.reflect.F_ReflectionTest_01.F_ReflectionTest_01"></Param>
        </Runner>
</Test> 