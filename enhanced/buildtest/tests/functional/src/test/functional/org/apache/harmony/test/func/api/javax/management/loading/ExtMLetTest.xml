<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/xsl' href='../../../../../../../../../../test.xsl'?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!DOCTYPE Test SYSTEM '../../../../../../../../../../test.dtd'>
<!-- 
-->
    

<Test  ID="ExtMLetTest"  date-of-creation="2005-11-11" timeout="10">
    
    
        <MulticaseTestDescription>
        <TestedClass name="javax.management.loading.MLet"/>
        
        <Case ID="testFindClass">
            <TestedMethod name="Class findClass(String name)  "/>
            <Description>
             1. Create MBeanServers 
             2. Create MLet Service
             3. Register MLet via MBeanServer use corresponding ObjectName
             4. Add MLet use method getMBeansFromURL() and check that method work properly
             5. Check that method findClass() work properly
           </Description>
        </Case>
        
        <Case ID="testNotFindClass">
            <TestedMethod name="Class findClass(String name)  "/>
            <Description>
             1. Create MBeanServers 
             2. Create MLet Service
             3. Register MLet via MBeanServer use corresponding ObjectName
             4. Add MLet use method getMBeansFromURL() and check that method work properly
             5. Check Exception
           </Description>
        </Case>

        <Case ID="testNotMLetFindClass">
            <TestedMethod name=" String findLibrary(String libname)  "/>
            <Description>
              1. Create MBeanServers 
             2. Create MLet Service
             3. Register MLet via MBeanServer use corresponding ObjectName
             4. Add MLet use method getMBeansFromURL() and check that method work properly
             5. Check that method findLibrary() work properly if libname not null

           </Description>
        </Case>
        
        <Case ID="testMLetFindDll">
            <TestedMethod name=" String findLibrary(String libname)  "/>
            <Description>
             1. Create MBeanServers 
             2. Create MLet Service
             3. Register MLet via MBeanServer use corresponding ObjectName
             4. Add MLet use method getMBeansFromURL() and check that method work properly
             5. Check that method findLibrary() work properly if libname = null
           </Description>
        </Case>
        
        <Case ID="testMLetLoadClass">
            <TestedMethod name="  Class loadClass(String name, ClassLoaderRepository clr) "/>
            <Description>
             1. Create MBeanServers 
             2. Create MLet Service
             3. Register MLet via MBeanServer use corresponding ObjectName
             4. Add MLet use method getMBeansFromURL() and check that method work properly
             5. Check that method loadClass() work properly if classname not null
           </Description>
        </Case>
        
        <Case ID="testMLetLoadNotAClass">
            <TestedMethod name="  Class loadClass(String name, ClassLoaderRepository clr) "/>
            <Description>
             1. Create MBeanServers 
             2. Create MLet Service
             3. Register MLet via MBeanServer use corresponding ObjectName
             4. Add MLet use method getMBeansFromURL() and check that method work properly
             5. Check that method loadClass() work properly if classname = null
           </Description>
        </Case>

    </MulticaseTestDescription>    
    <Source name="ExtMLetTest.java"/>
    <Runner ID="MultiCase">
    <Param name="toRun" value="org.apache.harmony.test.func.api.javax.management.loading.ExtMLetTest">
    <Option value="$TEST_HTTP_TOMCAT_HOST:$TEST_HTTP_TOMCAT_PORT" />           
    </Param>
</Runner>
<Restriction name="OtherVMOnly" />
</Test>
