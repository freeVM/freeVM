/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 */
package org.apache.harmony.test.func.api.javax.swing.JButton;

import java.awt.Component;

import javax.swing.AbstractButton;
import javax.swing.Action;
import javax.swing.ButtonModel;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.plaf.ButtonUI;

import org.apache.harmony.test.func.api.javax.swing.AbstractButton.AbstractButtonTest;
import org.apache.harmony.test.func.api.javax.swing.share.ButtonInternalsMadePublic;
import org.apache.harmony.test.func.api.javax.swing.share.InstrumentedAbstractAction;
import org.apache.harmony.test.func.api.javax.swing.share.InstrumentedButtonModel;
import org.apache.harmony.test.func.api.javax.swing.share.InstrumentedButtonUI;
import org.apache.harmony.test.func.api.javax.swing.share.InstrumentedJButton;
import org.apache.harmony.test.func.api.javax.swing.share.InstrumentedLookAndFeel;
import org.apache.harmony.test.func.api.javax.swing.share.InstrumentedUILog;
import org.apache.harmony.test.func.api.javax.swing.share.Util;
import org.apache.harmony.share.Result;

public class JButtonTest extends AbstractButtonTest {
    public static void main(String[] args)
            throws UnsupportedLookAndFeelException {
        UIManager.setLookAndFeel(new InstrumentedLookAndFeel());
        System.exit(new JButtonTest().test(args));
    }

    protected AbstractButton getInstrumentedAbstractButton() {
        return new InstrumentedJButton();
    }

    public Result testAction() {
        AbstractButton iab = getInstrumentedAbstractButton();

        if (iab.getAction() != null) {
            return failed("expected default action to be null");
        }

        InstrumentedUILog.clear();

        iab.setAction(null);

        Util.waitQueueEventsProcess();

        if (!InstrumentedUILog
                .equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setAction", null },
                        /* 2 */{ "AbstractButton.getAction" },
                        /* 3 */{
                                "AbstractButton.configurePropertiesFromAction",
                                null },
                        /* 4 */{ "AbstractButton.setMnemonic", "0" },
                        /* 5 */{ "AbstractButton.getMnemonic" },
                        /* 6 */{ "ButtonModel.setMnemonic", "0" },
                        /* 7 */{ "ButtonModel.fireStateChanged" },
                        /* 8 */{ "ButtonModel.getMnemonic" },
                        /* 9 */{ "JComponent.setToolTipText", null },
                        /* 10 */{ "JComponent.getToolTipText" },
                        /* 11 */{ "awt.Component.removeMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 12 */{ "awt.Component.removeMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 13 */{ "AbstractButton.setIcon", null },
                        /* 14 */{ "JComponent.firePropertyChange", "icon",
                                null, null },
                        /* 15 */{ "AbstractButton.setActionCommand", null },
                        /* 16 */{ "AbstractButton.getModel" },
                        /* 17 */{ "ButtonModel.setActionCommand", null },
                        /* 18 */{ "JComponent.setEnabled", "true" },
                        /* 19 */{ "JComponent.isEnabled" },
                        /* 20 */{ "awt.Component.enable", "true" },
                        /* 21 */{ "JComponent.enable" },
                        /* 22 */{ "JComponent.isEnabled" },
                        /* 23 */{ "JComponent.firePropertyChangeBoolean",
                                "enabled", "true", "true" },
                        /* 24 */{ "ButtonModel.setEnabled", "true" },
                        /* 25 */{ "ButtonModel.isEnabled" },
                        /* 26 */{ "AbstractButton.setText", null },
                        /* 27 */{ "JComponent.firePropertyChange", "text", "",
                                null },
                        /* 28 */{ "AbstractButton.getText" },
                        /* 29 */{ "AbstractButton.getMnemonic" },
                        /* 30 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 31 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 32 */{ "JComponent.revalidate" },
                        /* 33 */{ "awt.Component.getParent" },
                        /* 34 */{ "awt.Component.repaint" },
                        /* 35 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 36 */{ "JComponent.firePropertyChange", "action",
                                null, null },
                        /* 37 */{ "JComponent.revalidate" },
                        /* 38 */{ "awt.Component.getParent" },
                        /* 39 */{ "awt.Component.repaint" },
                        /* 40 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setAction", null },
                        /* 2 */{ "AbstractButton.getAction" },
                        /* 3 */{
                                "AbstractButton.configurePropertiesFromAction",
                                null },
                        /* 4 */{ "AbstractButton.setMnemonic", "0" },
                        /* 5 */{ "AbstractButton.getMnemonic" },
                        /* 6 */{ "ButtonModel.setMnemonic", "0" },
                        /* 7 */{ "ButtonModel.fireStateChanged" },
                        /* 8 */{ "ButtonModel.getMnemonic" },
                        /* 9 */{ "AbstractButton.fireStateChanged" },
                        /* 10 */{ "awt.Component.repaint" },
                        /* 11 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 12 */{ "awt.Component.repaint" },
                        /* 13 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 14 */{ "ButtonModel.getMnemonic" },
                        /* 15 */{ "JComponent.setToolTipText", null },
                        /* 16 */{ "JComponent.getToolTipText" },
                        /* 17 */{ "awt.Component.removeMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 18 */{ "awt.Component.removeMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 19 */{ "AbstractButton.setIcon", null },
                        /* 20 */{ "JComponent.firePropertyChange", "icon",
                                null, null },
                        /* 21 */{ "AbstractButton.setActionCommand", null },
                        /* 22 */{ "AbstractButton.getModel" },
                        /* 23 */{ "ButtonModel.setActionCommand", null },
                        /* 24 */{ "JComponent.setEnabled", "true" },
                        /* 25 */{ "JComponent.isEnabled" },
                        /* 26 */{ "awt.Component.enable", "true" },
                        /* 27 */{ "JComponent.enable" },
                        /* 28 */{ "JComponent.isEnabled" },
                        /* 29 */{ "JComponent.firePropertyChangeBoolean",
                                "enabled", "true", "true" },
                        /* 30 */{ "ButtonModel.setEnabled", "true" },
                        /* 31 */{ "ButtonModel.isEnabled" },
                        /* 32 */{ "AbstractButton.setText", null },
                        /* 33 */{ "JComponent.firePropertyChange", "text", "",
                                null },
                        /* 34 */{ "AbstractButton.getText" },
                        /* 35 */{ "AbstractButton.getMnemonic" },
                        /* 36 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 37 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 38 */{ "JComponent.revalidate" },
                        /* 39 */{ "awt.Component.getParent" },
                        /* 40 */{ "awt.Component.repaint" },
                        /* 41 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 42 */{ "JComponent.firePropertyChange", "action",
                                null, null },
                        /* 43 */{ "JComponent.revalidate" },
                        /* 44 */{ "awt.Component.getParent" },
                        /* 45 */{ "awt.Component.repaint" },
                        /* 46 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setAction", null },
                        /* 2 */{ "JComponent.firePropertyChange", "action",
                                null, null },
                        /* 3 */{ "JComponent.revalidate" },
                        /* 4 */{ "awt.Container.invalidate" },
                        /* 5 */{ "awt.Component.getParent" },
                        /* 6 */{ "JComponent.isValidateRoot" },
                        /* 7 */{ "awt.Component.getParent" },
                        /* 8 */{ "awt.Component.isValid" },
                        /* 9 */{ "awt.Component.isShowing" },
                        /* 10 */{ "awt.Component.isVisible" },
                        /* 11 */{ "awt.Component.isDisplayable" },
                        /* 12 */{ "awt.Component.repaint" },
                        /* 13 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 14 */{ "JComponent.getVisibleRect" },
                        /* 15 */{ "JComponent.getWidth" },
                        /* 16 */{ "JComponent.getHeight" },
                        /* 17 */{ "awt.Component.getParent" },
                        /* 18 */{
                                "AbstractButton.configurePropertiesFromAction",
                                null },
                        /* 19 */{ "AbstractButton.setActionCommand", null },
                        /* 20 */{ "ButtonModel.setActionCommand", null },
                        /* 21 */{ "AbstractButton.setIcon", null },
                        /* 22 */{ "JComponent.firePropertyChange", "icon",
                                null, null },
                        /* 23 */{ "JComponent.revalidate" },
                        /* 24 */{ "awt.Container.invalidate" },
                        /* 25 */{ "awt.Component.getParent" },
                        /* 26 */{ "JComponent.isValidateRoot" },
                        /* 27 */{ "awt.Component.getParent" },
                        /* 28 */{ "awt.Component.isValid" },
                        /* 29 */{ "awt.Component.isShowing" },
                        /* 30 */{ "awt.Component.isVisible" },
                        /* 31 */{ "awt.Component.isDisplayable" },
                        /* 32 */{ "awt.Component.repaint" },
                        /* 33 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 34 */{ "JComponent.getVisibleRect" },
                        /* 35 */{ "JComponent.getWidth" },
                        /* 36 */{ "JComponent.getHeight" },
                        /* 37 */{ "awt.Component.getParent" },
                        /* 38 */{ "AbstractButton.setText", null },
                        /* 39 */{ "JComponent.firePropertyChange", "text", "",
                                null },
                        /* 40 */{ "JComponent.revalidate" },
                        /* 41 */{ "awt.Container.invalidate" },
                        /* 42 */{ "awt.Component.getParent" },
                        /* 43 */{ "JComponent.isValidateRoot" },
                        /* 44 */{ "awt.Component.getParent" },
                        /* 45 */{ "awt.Component.isValid" },
                        /* 46 */{ "awt.Component.isShowing" },
                        /* 47 */{ "awt.Component.isVisible" },
                        /* 48 */{ "awt.Component.isDisplayable" },
                        /* 49 */{ "awt.Component.repaint" },
                        /* 50 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 51 */{ "JComponent.getVisibleRect" },
                        /* 52 */{ "JComponent.getWidth" },
                        /* 53 */{ "JComponent.getHeight" },
                        /* 54 */{ "awt.Component.getParent" },
                        /* 55 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 56 */{ "AbstractButton.getText" },
                        /* 57 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 58 */{ "JComponent.firePropertyChange",
                                "displayedMnemonicIndex", new Integer(-1),
                                new Integer(-1) },
                        /* 59 */{ "JComponent.setEnabled", "true" },
                        /* 60 */{ "ButtonModel.isEnabled" },
                        /* 61 */{ "JComponent.setToolTipText", null },
                        /* 62 */{ "awt.Component.removeMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 63 */{ "awt.Component.removeMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 64 */{ "AbstractButton.setMnemonic", "0" },
                        /* 65 */{ "ButtonModel.setMnemonic", "0" },
                        /* 66 */{ "ButtonModel.fireStateChanged" },
                        /* 67 */{ "ButtonModel.getChangeListeners" },
                        /* 68 */{ "ButtonModel.getMnemonic" },
                        /* 69 */{ "AbstractButton.fireStateChanged" },
                        /* 70 */{ "AbstractButton.getChangeListeners" },
                        /* 71 */{ "JComponent.revalidate" },
                        /* 72 */{ "awt.Container.invalidate" },
                        /* 73 */{ "awt.Component.getParent" },
                        /* 74 */{ "JComponent.isValidateRoot" },
                        /* 75 */{ "awt.Component.getParent" },
                        /* 76 */{ "awt.Component.isValid" },
                        /* 77 */{ "awt.Component.isShowing" },
                        /* 78 */{ "awt.Component.isVisible" },
                        /* 79 */{ "awt.Component.isDisplayable" },
                        /* 80 */{ "awt.Component.repaint" },
                        /* 81 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 82 */{ "JComponent.getVisibleRect" },
                        /* 83 */{ "JComponent.getWidth" },
                        /* 84 */{ "JComponent.getHeight" },
                        /* 85 */{ "awt.Component.getParent" }, })

                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setAction", null },
                        /* 2 */{ "AbstractButton.getAction" },
                        /* 3 */{
                                "AbstractButton.configurePropertiesFromAction",
                                null },
                        /* 4 */{ "AbstractButton.setMnemonic", "0" },
                        /* 5 */{ "AbstractButton.getMnemonic" },
                        /* 6 */{ "ButtonModel.setMnemonic", "0" },
                        /* 7 */{ "ButtonModel.fireStateChanged" },
                        /* 8 */{ "ButtonModel.getMnemonic" },
                        /* 9 */{ "AbstractButton.fireStateChanged" },
                        /* 10 */{ "awt.Component.repaint" },
                        /* 11 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 12 */{ "awt.Component.repaint" },
                        /* 13 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 14 */{ "ButtonModel.getMnemonic" },
                        /* 15 */{ "AbstractButton.setText", null },
                        /* 16 */{ "JComponent.firePropertyChange", "text", "",
                                null },
                        /* 17 */{ "AbstractButton.getText" },
                        /* 18 */{ "AbstractButton.getMnemonic" },
                        /* 19 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 20 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 21 */{ "JComponent.revalidate" },
                        /* 22 */{ "awt.Component.getParent" },
                        /* 23 */{ "awt.Component.repaint" },
                        /* 24 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 25 */{ "JComponent.setToolTipText", null },
                        /* 26 */{ "JComponent.getToolTipText" },
                        /* 27 */{ "awt.Component.removeMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 28 */{ "awt.Component.removeMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 29 */{ "AbstractButton.setIcon", null },
                        /* 30 */{ "JComponent.firePropertyChange", "icon",
                                null, null },
                        /* 31 */{ "AbstractButton.setActionCommand", null },
                        /* 32 */{ "AbstractButton.getModel" },
                        /* 33 */{ "ButtonModel.setActionCommand", null },
                        /* 34 */{ "JComponent.setEnabled", "true" },
                        /* 35 */{ "JComponent.isEnabled" },
                        /* 36 */{ "awt.Component.enable", "true" },
                        /* 37 */{ "JComponent.enable" },
                        /* 38 */{ "JComponent.isEnabled" },
                        /* 39 */{ "JComponent.firePropertyChangeBoolean",
                                "enabled", Boolean.TRUE, Boolean.TRUE },
                        /* 40 */{ "ButtonModel.setEnabled", "true" },
                        /* 41 */{ "ButtonModel.isEnabled" },
                        /* 42 */{ "JComponent.firePropertyChange", "action",
                                null, null },
                        /* 43 */{ "JComponent.revalidate" },
                        /* 44 */{ "awt.Component.getParent" },
                        /* 45 */{ "awt.Component.repaint" },
                        /* 46 */{ "JComponent.repaint", "0 0 0 0 0" }, }))

        {
            InstrumentedUILog.printLogAsArray();
            return failed("expected setAction(null) to call another sequence of events");
        }

        Action action = new InstrumentedAbstractAction();
        InstrumentedUILog.clear();
        iab.setAction(action);

        Util.waitQueueEventsProcess();

        if (!InstrumentedUILog.equals(new Object[][] {
                /* 1 */{ "AbstractButton.setAction", action },
                /* 2 */{ "AbstractButton.getAction" },
                //start configurePropertiesFromAction
                /* 3 */{ "AbstractButton.configurePropertiesFromAction",
                        action },
                /* 4 */{ "AbstractAction", "getValue", "MnemonicKey" },
                /* 5 */{ "AbstractButton.setMnemonic",
                        "" + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                /* 6 */{ "AbstractButton.getMnemonic" },
                /* 7 */{ "ButtonModel.setMnemonic",
                        "" + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                /* 8 */{ "ButtonModel.fireStateChanged" },
                /* 9 */{ "ButtonModel.getMnemonic" },
                /* 10 */{ "JComponent.firePropertyChangeInt", "mnemonic", "0",
                        "" + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                /* 11 */{ "AbstractButton.getMnemonic" },
                /* 12 */{ "awt.Component.getParent" },
                /* 13 */{ "JComponent.firePropertyChange",
                        "_WhenInFocusedWindow", null,
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 14 */{ "awt.Component.getParent" },
                /* 15 */{ "awt.Component.getParent" },
                /* 16 */{ "awt.Component.getParent" },
                /* 17 */{ "awt.Component.getParent" },
                /* 18 */{ "awt.Component.getParent" },
                /* 19 */{ "AbstractButton.getText" },
                /* 20 */{ "AbstractButton.setDisplayedMnemonicIndex", "-1" },
                /* 21 */{ "JComponent.firePropertyChangeInt",
                        "displayedMnemonicIndex", "-1", "-1" },
                /* 22 */{ "JComponent.revalidate" },
                /* 23 */{ "awt.Component.getParent" },
                /* 24 */{ "awt.Component.repaint" },
                /* 25 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 26 */{ "AbstractAction", "getValue", "ShortDescription" },
                /* 27 */{ "JComponent.setToolTipText",
                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                /* 28 */{ "JComponent.getToolTipText" },
                /* 29 */{ "JComponent.firePropertyChange", "ToolTipText",
                        null, InstrumentedAbstractAction.SHORT_DESCRIPTION },
                /* 30 */{ "awt.Component.removeMouseListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 31 */{ "awt.Component.addMouseListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 32 */{ "awt.Component.removeMouseMotionListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 33 */{ "awt.Component.addMouseMotionListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 34 */{ "AbstractAction", "getValue", "SmallIcon" },
                /* 35 */{ "AbstractButton.setIcon",
                        InstrumentedAbstractAction.SMALL_ICON },
                /* 36 */{ "JComponent.firePropertyChange", "icon", null,
                        InstrumentedAbstractAction.SMALL_ICON },
                /* 37 */{ "JComponent.revalidate" },
                /* 38 */{ "awt.Component.getParent" },
                /* 39 */{ "awt.Component.repaint" },
                /* 40 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 41 */{ "AbstractAction", "getValue", "ActionCommandKey" },
                /* 42 */{ "AbstractButton.setActionCommand",
                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                /* 43 */{ "AbstractButton.getModel" },
                /* 44 */{ "ButtonModel.setActionCommand",
                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                /* 45 */{ "AbstractAction", "isEnabled" },
                /* 46 */{ "JComponent.setEnabled", "true" },
                /* 47 */{ "JComponent.isEnabled" },
                /* 48 */{ "awt.Component.enable", "true" },
                /* 49 */{ "JComponent.enable" },
                /* 50 */{ "JComponent.isEnabled" },
                /* 51 */{ "JComponent.firePropertyChangeBoolean", "enabled",
                        "true", "true" },
                /* 52 */{ "ButtonModel.setEnabled", "true" },
                /* 53 */{ "ButtonModel.isEnabled" },
                /* 54 */{ "AbstractAction", "getValue", "Name" },
                /* 55 */{ "AbstractButton.setText",
                        InstrumentedAbstractAction.NAME },
                /* 56 */{ "JComponent.firePropertyChange", "text", null,
                        InstrumentedAbstractAction.NAME },
                /* 57 */{ "AbstractButton.getText" },
                /* 58 */{ "AbstractButton.getMnemonic" },
                /* 59 */{ "AbstractButton.setDisplayedMnemonicIndex", "0" },
                /* 60 */{ "AbstractButton.getText" },
                /* 61 */{ "JComponent.firePropertyChangeInt",
                        "displayedMnemonicIndex", "-1", "0" },
                /* 62 */{ "JComponent.revalidate" },
                /* 63 */{ "awt.Component.getParent" },
                /* 64 */{ "awt.Component.repaint" },
                /* 65 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 66 */{ "JComponent.revalidate" },
                /* 67 */{ "awt.Component.getParent" },
                /* 68 */{ "awt.Component.repaint" },
                /* 69 */{ "JComponent.repaint", "0 0 0 0 0" },
                //end configurePropertiesFromAction
                /* 70 */{ "AbstractButton.addActionListener", action },
                /* 71 */{ "AbstractButton.createActionPropertyChangeListener",
                        action },
                /* 72 */{ "AbstractAction.addPropertyChangeListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 73 */{ "JComponent.firePropertyChange", "action", null,
                        action },
                /* 74 */{ "JComponent.revalidate" },
                /* 75 */{ "awt.Component.getParent" },
                /* 76 */{ "awt.Component.repaint" },
                /* 77 */{ "JComponent.repaint", "0 0 0 0 0" }, })

                && !InstrumentedUILog
                        .equals(new Object[][] {
                                /* 1 */{ "AbstractButton.setAction", action },
                                /* 2 */{ "AbstractButton.getAction" },
                                /* 3 */{
                                        "AbstractButton.configurePropertiesFromAction",
                                        action },
                                /* 4 */{ "AbstractAction", "getValue",
                                        "MnemonicKey" },
                                /* 5 */{
                                        "AbstractButton.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 6 */{ "AbstractButton.getMnemonic" },
                                /* 7 */{
                                        "ButtonModel.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 8 */{ "ButtonModel.fireStateChanged" },
                                /* 9 */{ "ButtonModel.getMnemonic" },
                                /* 10 */{
                                        "JComponent.firePropertyChangeInt",
                                        "mnemonic",
                                        "0",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 11 */{ "AbstractButton.getMnemonic" },
                                /* 12 */{ "awt.Component.getParent" },
                                /* 13 */{ "JComponent.firePropertyChange",
                                        "_WhenInFocusedWindow", null,
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 14 */{ "awt.Component.getParent" },
                                /* 15 */{ "awt.Component.getParent" },
                                /* 16 */{ "awt.Component.getParent" },
                                /* 17 */{ "awt.Component.getParent" },
                                /* 18 */{ "awt.Component.getParent" },
                                /* 19 */{ "AbstractButton.getText" },
                                /* 20 */{
                                        "AbstractButton.setDisplayedMnemonicIndex",
                                        "-1" },
                                /* 21 */{ "JComponent.firePropertyChangeInt",
                                        "displayedMnemonicIndex", "-1", "-1" },
                                /* 22 */{ "JComponent.revalidate" },
                                /* 23 */{ "awt.Component.getParent" },
                                /* 24 */{ "awt.Component.repaint" },
                                /* 25 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 26 */{ "AbstractAction", "getValue", "Name" },
                                /* 27 */{ "AbstractButton.setText",
                                        InstrumentedAbstractAction.NAME },
                                /* 28 */{ "JComponent.firePropertyChange",
                                        "text", null,
                                        InstrumentedAbstractAction.NAME },
                                /* 29 */{ "AbstractButton.getText" },
                                /* 30 */{ "AbstractButton.getMnemonic" },
                                /* 31 */{
                                        "AbstractButton.setDisplayedMnemonicIndex",
                                        "0" },
                                /* 32 */{ "AbstractButton.getText" },
                                /* 33 */{ "JComponent.firePropertyChangeInt",
                                        "displayedMnemonicIndex", "-1", "0" },
                                /* 34 */{ "JComponent.revalidate" },
                                /* 35 */{ "awt.Component.getParent" },
                                /* 36 */{ "awt.Component.repaint" },
                                /* 37 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 38 */{ "JComponent.revalidate" },
                                /* 39 */{ "awt.Component.getParent" },
                                /* 40 */{ "awt.Component.repaint" },
                                /* 41 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 42 */{ "AbstractAction", "getValue",
                                        "ShortDescription" },
                                /* 43 */{
                                        "JComponent.setToolTipText",
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 44 */{ "JComponent.getToolTipText" },
                                /* 45 */{
                                        "JComponent.firePropertyChange",
                                        "ToolTipText",
                                        null,
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 46 */{ "awt.Component.removeMouseListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 47 */{ "awt.Component.addMouseListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 48 */{
                                        "awt.Component.removeMouseMotionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 49 */{
                                        "awt.Component.addMouseMotionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 50 */{ "AbstractAction", "getValue",
                                        "SmallIcon" },
                                /* 51 */{ "AbstractButton.setIcon",
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 52 */{ "JComponent.firePropertyChange",
                                        "icon", null,
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 53 */{ "JComponent.revalidate" },
                                /* 54 */{ "awt.Component.getParent" },
                                /* 55 */{ "awt.Component.repaint" },
                                /* 56 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 57 */{ "AbstractAction", "getValue",
                                        "ActionCommandKey" },
                                /* 58 */{
                                        "AbstractButton.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                                /* 59 */{ "AbstractButton.getModel" },
                                /* 60 */{
                                        "ButtonModel.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                                /* 61 */{ "AbstractAction", "isEnabled" },
                                /* 62 */{ "JComponent.setEnabled", "true" },
                                /* 63 */{ "JComponent.isEnabled" },
                                /* 64 */{ "awt.Component.enable", "true" },
                                /* 65 */{ "JComponent.enable" },
                                /* 66 */{ "JComponent.isEnabled" },
                                /* 67 */{
                                        "JComponent.firePropertyChangeBoolean",
                                        "enabled", "true", "true" },
                                /* 68 */{ "ButtonModel.setEnabled", "true" },
                                /* 69 */{ "ButtonModel.isEnabled" },
                                /* 70 */{ "AbstractButton.addActionListener",
                                        action },
                                /* 71 */{
                                        "AbstractButton.createActionPropertyChangeListener",
                                        action },
                                /* 72 */{
                                        "AbstractAction.addPropertyChangeListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 73 */{ "JComponent.firePropertyChange",
                                        "action", null, action },
                                /* 74 */{ "JComponent.revalidate" },
                                /* 75 */{ "awt.Component.getParent" },
                                /* 76 */{ "awt.Component.repaint" },
                                /* 77 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                && !InstrumentedUILog
                        .equals(new Object[][] {
                                /* 1 */{ "AbstractButton.setAction", action },
                                /* 2 */{ "AbstractButton.getAction" },
                                /* 3 */{
                                        "AbstractButton.configurePropertiesFromAction",
                                        action },
                                /* 4 */{ "AbstractAction", "getValue",
                                        "MnemonicKey" },
                                /* 5 */{
                                        "AbstractButton.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 6 */{ "AbstractButton.getMnemonic" },
                                /* 7 */{
                                        "ButtonModel.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 8 */{ "ButtonModel.fireStateChanged" },
                                /* 9 */{ "ButtonModel.getMnemonic" },
                                /* 10 */{
                                        "JComponent.firePropertyChangeInt",
                                        "mnemonic",
                                        "0",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 11 */{ "AbstractButton.getMnemonic" },
                                /* 12 */{ "awt.Component.getParent" },
                                /* 13 */{ "JComponent.firePropertyChange",
                                        "_WhenInFocusedWindow", null,
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 14 */{ "awt.Component.getParent" },
                                /* 15 */{ "awt.Component.getParent" },
                                /* 16 */{ "awt.Component.getParent" },
                                /* 17 */{ "awt.Component.getParent" },
                                /* 18 */{ "awt.Component.getParent" },
                                /* 19 */{ "AbstractButton.getText" },
                                /* 20 */{
                                        "AbstractButton.setDisplayedMnemonicIndex",
                                        "-1" },
                                /* 21 */{ "JComponent.firePropertyChangeInt",
                                        "displayedMnemonicIndex", "-1", "-1" },
                                /* 22 */{ "JComponent.revalidate" },
                                /* 23 */{ "awt.Component.getParent" },
                                /* 24 */{ "awt.Component.repaint" },
                                /* 25 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 26 */{ "AbstractButton.fireStateChanged" },
                                /* 27 */{ "awt.Component.repaint" },
                                /* 28 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 29 */{ "awt.Component.repaint" },
                                /* 30 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 31 */{ "ButtonModel.getMnemonic" },
                                /* 32 */{ "AbstractAction", "getValue",
                                        "ShortDescription" },
                                /* 33 */{
                                        "JComponent.setToolTipText",
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 34 */{ "JComponent.getToolTipText" },
                                /* 35 */{
                                        "JComponent.firePropertyChange",
                                        "ToolTipText",
                                        null,
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 36 */{ "awt.Component.removeMouseListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 37 */{ "awt.Component.addMouseListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 38 */{
                                        "awt.Component.removeMouseMotionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 39 */{
                                        "awt.Component.addMouseMotionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 40 */{ "AbstractAction", "getValue",
                                        "SmallIcon" },
                                /* 41 */{ "AbstractButton.setIcon",
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 42 */{ "JComponent.firePropertyChange",
                                        "icon", null,
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 43 */{ "JComponent.revalidate" },
                                /* 44 */{ "awt.Component.getParent" },
                                /* 45 */{ "awt.Component.repaint" },
                                /* 46 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 47 */{ "AbstractAction", "getValue",
                                        "ActionCommandKey" },
                                /* 48 */{
                                        "AbstractButton.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                                /* 49 */{ "AbstractButton.getModel" },
                                /* 50 */{
                                        "ButtonModel.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                                /* 51 */{ "AbstractAction", "isEnabled" },
                                /* 52 */{ "JComponent.setEnabled", "true" },
                                /* 53 */{ "JComponent.isEnabled" },
                                /* 54 */{ "awt.Component.enable", "true" },
                                /* 55 */{ "JComponent.enable" },
                                /* 56 */{ "JComponent.isEnabled" },
                                /* 57 */{
                                        "JComponent.firePropertyChangeBoolean",
                                        "enabled", "true", "true" },
                                /* 58 */{ "ButtonModel.setEnabled", "true" },
                                /* 59 */{ "ButtonModel.isEnabled" },
                                /* 60 */{ "AbstractAction", "getValue", "Name" },
                                /* 61 */{ "AbstractButton.setText",
                                        InstrumentedAbstractAction.NAME },
                                /* 62 */{ "JComponent.firePropertyChange",
                                        "text", null,
                                        InstrumentedAbstractAction.NAME },
                                /* 63 */{ "AbstractButton.getText" },
                                /* 64 */{ "AbstractButton.getMnemonic" },
                                /* 65 */{
                                        "AbstractButton.setDisplayedMnemonicIndex",
                                        "0" },
                                /* 66 */{ "AbstractButton.getText" },
                                /* 67 */{ "JComponent.firePropertyChangeInt",
                                        "displayedMnemonicIndex", "-1", "0" },
                                /* 68 */{ "JComponent.revalidate" },
                                /* 69 */{ "awt.Component.getParent" },
                                /* 70 */{ "awt.Component.repaint" },
                                /* 71 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 72 */{ "JComponent.revalidate" },
                                /* 73 */{ "awt.Component.getParent" },
                                /* 74 */{ "awt.Component.repaint" },
                                /* 75 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 76 */{ "AbstractButton.addActionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 77 */{
                                        "AbstractButton.createActionPropertyChangeListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 78 */{
                                        "AbstractAction.addPropertyChangeListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 79 */{ "JComponent.firePropertyChange",
                                        "action", null,
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 80 */{ "JComponent.revalidate" },
                                /* 81 */{ "awt.Component.getParent" },
                                /* 82 */{ "awt.Component.repaint" },
                                /* 83 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                && !InstrumentedUILog
                        .equals(new Object[][] {
                                /* 1 */{ "AbstractButton.setAction", action },
                                /* 2 */{ "AbstractButton.getAction" },
                                /* 3 */{
                                        "AbstractButton.configurePropertiesFromAction",
                                        action },
                                /* 4 */{ "AbstractAction", "getValue",
                                        "MnemonicKey" },
                                /* 5 */{
                                        "AbstractButton.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 6 */{ "AbstractButton.getMnemonic" },
                                /* 7 */{
                                        "ButtonModel.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 8 */{ "ButtonModel.fireStateChanged" },
                                /* 9 */{ "ButtonModel.getMnemonic" },
                                /* 10 */{
                                        "JComponent.firePropertyChangeInt",
                                        "mnemonic",
                                        "0",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 11 */{ "AbstractButton.getMnemonic" },
                                /* 12 */{ "awt.Component.getParent" },
                                /* 13 */{ "JComponent.firePropertyChange",
                                        "_WhenInFocusedWindow", null,
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 14 */{ "awt.Component.getParent" },
                                /* 15 */{ "awt.Component.getParent" },
                                /* 16 */{ "awt.Component.getParent" },
                                /* 17 */{ "awt.Component.getParent" },
                                /* 18 */{ "awt.Component.getParent" },
                                /* 19 */{ "AbstractButton.getText" },
                                /* 20 */{
                                        "AbstractButton.setDisplayedMnemonicIndex",
                                        "-1" },
                                /* 21 */{ "JComponent.firePropertyChangeInt",
                                        "displayedMnemonicIndex", "-1", "-1" },
                                /* 22 */{ "JComponent.revalidate" },
                                /* 23 */{ "awt.Component.getParent" },
                                /* 24 */{ "awt.Component.repaint" },
                                /* 25 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 26 */{ "AbstractButton.fireStateChanged" },
                                /* 27 */{ "awt.Component.repaint" },
                                /* 28 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 29 */{ "awt.Component.repaint" },
                                /* 30 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 31 */{ "ButtonModel.getMnemonic" },
                                /* 32 */{ "AbstractAction", "getValue", "Name" },
                                /* 33 */{ "AbstractButton.setText",
                                        InstrumentedAbstractAction.NAME },
                                /* 34 */{ "JComponent.firePropertyChange",
                                        "text", null,
                                        InstrumentedAbstractAction.NAME },
                                /* 35 */{ "AbstractButton.getText" },
                                /* 36 */{ "AbstractButton.getMnemonic" },
                                /* 37 */{
                                        "AbstractButton.setDisplayedMnemonicIndex",
                                        "0" },
                                /* 38 */{ "AbstractButton.getText" },
                                /* 39 */{ "JComponent.firePropertyChangeInt",
                                        "displayedMnemonicIndex", "-1", "0" },
                                /* 40 */{ "JComponent.revalidate" },
                                /* 41 */{ "awt.Component.getParent" },
                                /* 42 */{ "awt.Component.repaint" },
                                /* 43 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 44 */{ "JComponent.revalidate" },
                                /* 45 */{ "awt.Component.getParent" },
                                /* 46 */{ "awt.Component.repaint" },
                                /* 47 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 48 */{ "AbstractAction", "getValue",
                                        "ShortDescription" },
                                /* 49 */{
                                        "JComponent.setToolTipText",
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 50 */{ "JComponent.getToolTipText" },
                                /* 51 */{
                                        "JComponent.firePropertyChange",
                                        "ToolTipText",
                                        null,
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 52 */{ "awt.Component.removeMouseListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 53 */{ "awt.Component.addMouseListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 54 */{
                                        "awt.Component.removeMouseMotionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 55 */{
                                        "awt.Component.addMouseMotionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 56 */{ "AbstractAction", "getValue",
                                        "SmallIcon" },
                                /* 57 */{ "AbstractButton.setIcon",
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 58 */{ "JComponent.firePropertyChange",
                                        "icon", null,
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 59 */{ "JComponent.revalidate" },
                                /* 60 */{ "awt.Component.getParent" },
                                /* 61 */{ "awt.Component.repaint" },
                                /* 62 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 63 */{ "AbstractAction", "getValue",
                                        "ActionCommandKey" },
                                /* 64 */{
                                        "AbstractButton.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                                /* 65 */{ "AbstractButton.getModel" },
                                /* 66 */{
                                        "ButtonModel.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                                /* 67 */{ "AbstractAction", "isEnabled" },
                                /* 68 */{ "JComponent.setEnabled", "true" },
                                /* 69 */{ "JComponent.isEnabled" },
                                /* 70 */{ "awt.Component.enable", "true" },
                                /* 71 */{ "JComponent.enable" },
                                /* 72 */{ "JComponent.isEnabled" },
                                /* 73 */{
                                        "JComponent.firePropertyChangeBoolean",
                                        "enabled", "true", "true" },
                                /* 74 */{ "ButtonModel.setEnabled", "true" },
                                /* 75 */{ "ButtonModel.isEnabled" },
                                /* 76 */{ "AbstractButton.addActionListener",
                                        action },
                                /* 77 */{
                                        "AbstractButton.createActionPropertyChangeListener",
                                        action },
                                /* 78 */{
                                        "AbstractAction.addPropertyChangeListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 79 */{ "JComponent.firePropertyChange",
                                        "action", null,
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 80 */{ "JComponent.revalidate" },
                                /* 81 */{ "awt.Component.getParent" },
                                /* 82 */{ "awt.Component.repaint" },
                                /* 83 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                //
                && !InstrumentedUILog
                        .equals(new Object[][] {
                                /* 1 */{ "AbstractButton.setAction", action },
                                /* 2 */{ "AbstractButton.addActionListener",
                                        action },
                                /* 3 */{
                                        "AbstractButton.createActionPropertyChangeListener",
                                        action },
                                /* 4 */{
                                        "AbstractAction.addPropertyChangeListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 5 */{ "JComponent.firePropertyChange",
                                        "action", null, action },
                                /* 6 */{ "JComponent.revalidate" },
                                /* 7 */{ "awt.Container.invalidate" },
                                /* 8 */{ "awt.Component.getParent" },
                                /* 9 */{ "JComponent.isValidateRoot" },
                                /* 10 */{ "awt.Component.getParent" },
                                /* 11 */{ "awt.Component.isValid" },
                                /* 12 */{ "awt.Component.isShowing" },
                                /* 13 */{ "awt.Component.isVisible" },
                                /* 14 */{ "awt.Component.isDisplayable" },
                                /* 15 */{ "awt.Component.repaint" },
                                /* 16 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 17 */{ "JComponent.getVisibleRect" },
                                /* 18 */{ "JComponent.getWidth" },
                                /* 19 */{ "JComponent.getHeight" },
                                /* 20 */{ "awt.Component.getParent" },
                                /* 21 */{
                                        "AbstractButton.configurePropertiesFromAction",
                                        action },
                                /* 22 */{ "AbstractAction", "getValue",
                                        "MnemonicKey" },
                                /* 23 */{
                                        "AbstractButton.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 24 */{
                                        "ButtonModel.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 25 */{ "ButtonModel.fireStateChanged" },
                                /* 26 */{ "ButtonModel.getChangeListeners" },
                                /* 27 */{ "ButtonModel.getMnemonic" },
                                /* 28 */{
                                        "JComponent.firePropertyChangeInt",
                                        "mnemonic",
                                        "0",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 29 */{
                                        "JComponent.firePropertyChange",
                                        "mnemonic",
                                        new Integer(0),
                                        InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 30 */{ "JComponent.revalidate" },
                                /* 31 */{ "awt.Container.invalidate" },
                                /* 32 */{ "awt.Component.getParent" },
                                /* 33 */{ "JComponent.isValidateRoot" },
                                /* 34 */{ "awt.Component.getParent" },
                                /* 35 */{ "awt.Component.isValid" },
                                /* 36 */{ "awt.Component.isShowing" },
                                /* 37 */{ "awt.Component.isVisible" },
                                /* 38 */{ "awt.Component.isDisplayable" },
                                /* 39 */{ "awt.Component.repaint" },
                                /* 40 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 41 */{ "JComponent.getVisibleRect" },
                                /* 42 */{ "JComponent.getWidth" },
                                /* 43 */{ "JComponent.getHeight" },
                                /* 44 */{ "awt.Component.getParent" },
                                /* 45 */{
                                        "AbstractButton.setDisplayedMnemonicIndex",
                                        "-1" },
                                /* 46 */{ "AbstractButton.getText" },
                                /* 47 */{ "JComponent.firePropertyChangeInt",
                                        "displayedMnemonicIndex", "-1", "-1" },
                                /* 48 */{ "JComponent.firePropertyChange",
                                        "displayedMnemonicIndex",
                                        new Integer(-1), new Integer(-1) },
                                /* 49 */{ "AbstractButton.fireStateChanged" },
                                /* 50 */{ "AbstractButton.getChangeListeners" },
                                /* 51 */{ "JComponent.revalidate" },
                                /* 52 */{ "awt.Container.invalidate" },
                                /* 53 */{ "awt.Component.getParent" },
                                /* 54 */{ "JComponent.isValidateRoot" },
                                /* 55 */{ "awt.Component.getParent" },
                                /* 56 */{ "awt.Component.isValid" },
                                /* 57 */{ "awt.Component.isShowing" },
                                /* 58 */{ "awt.Component.isVisible" },
                                /* 59 */{ "awt.Component.isDisplayable" },
                                /* 60 */{ "awt.Component.repaint" },
                                /* 61 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 62 */{ "JComponent.getVisibleRect" },
                                /* 63 */{ "JComponent.getWidth" },
                                /* 64 */{ "JComponent.getHeight" },
                                /* 65 */{ "awt.Component.getParent" },
                                /* 66 */{ "AbstractAction", "getValue",
                                        "ShortDescription" },
                                /* 67 */{
                                        "JComponent.setToolTipText",
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 68 */{
                                        "JComponent.firePropertyChange",
                                        "ToolTipText",
                                        null,
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 69 */{ "JComponent.revalidate" },
                                /* 70 */{ "awt.Container.invalidate" },
                                /* 71 */{ "awt.Component.getParent" },
                                /* 72 */{ "JComponent.isValidateRoot" },
                                /* 73 */{ "awt.Component.getParent" },
                                /* 74 */{ "awt.Component.isValid" },
                                /* 75 */{ "awt.Component.isShowing" },
                                /* 76 */{ "awt.Component.isVisible" },
                                /* 77 */{ "awt.Component.isDisplayable" },
                                /* 78 */{ "awt.Component.repaint" },
                                /* 79 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 80 */{ "JComponent.getVisibleRect" },
                                /* 81 */{ "JComponent.getWidth" },
                                /* 82 */{ "JComponent.getHeight" },
                                /* 83 */{ "awt.Component.getParent" },
                                /* 84 */{
                                        "awt.Component.removeMouseMotionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 85 */{ "awt.Component.removeMouseListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 86 */{
                                        "awt.Component.addMouseMotionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 87 */{ "awt.Component.addMouseListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 88 */{ "AbstractAction", "getValue",
                                        "SmallIcon" },
                                /* 89 */{ "AbstractButton.setIcon",
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 90 */{ "JComponent.firePropertyChange",
                                        "icon", null,
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 91 */{ "JComponent.revalidate" },
                                /* 92 */{ "awt.Container.invalidate" },
                                /* 93 */{ "awt.Component.getParent" },
                                /* 94 */{ "JComponent.isValidateRoot" },
                                /* 95 */{ "awt.Component.getParent" },
                                /* 96 */{ "awt.Component.isValid" },
                                /* 97 */{ "awt.Component.isShowing" },
                                /* 98 */{ "awt.Component.isVisible" },
                                /* 99 */{ "awt.Component.isDisplayable" },
                                /* 100 */{ "awt.Component.repaint" },
                                /* 101 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 102 */{ "JComponent.getVisibleRect" },
                                /* 103 */{ "JComponent.getWidth" },
                                /* 104 */{ "JComponent.getHeight" },
                                /* 105 */{ "awt.Component.getParent" },
                                /* 106 */{ "AbstractAction", "isEnabled" },
                                /* 107 */{ "JComponent.setEnabled", "true" },
                                /* 108 */{ "ButtonModel.isEnabled" },
                                /* 109 */{ "AbstractAction", "getValue",
                                        "Name" },
                                /* 110 */{ "AbstractButton.setText",
                                        "AbstractActionName" },
                                /* 111 */{ "JComponent.firePropertyChange",
                                        "text", null,
                                        InstrumentedAbstractAction.NAME },
                                /* 112 */{ "JComponent.revalidate" },
                                /* 113 */{ "awt.Container.invalidate" },
                                /* 114 */{ "awt.Component.getParent" },
                                /* 115 */{ "JComponent.isValidateRoot" },
                                /* 116 */{ "awt.Component.getParent" },
                                /* 117 */{ "awt.Component.isValid" },
                                /* 118 */{ "awt.Component.isShowing" },
                                /* 119 */{ "awt.Component.isVisible" },
                                /* 120 */{ "awt.Component.isDisplayable" },
                                /* 121 */{ "awt.Component.repaint" },
                                /* 122 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 123 */{ "JComponent.getVisibleRect" },
                                /* 124 */{ "JComponent.getWidth" },
                                /* 125 */{ "JComponent.getHeight" },
                                /* 126 */{ "awt.Component.getParent" },
                                /* 127 */{
                                        "AbstractButton.setDisplayedMnemonicIndex",
                                        "-1" },
                                /* 128 */{ "AbstractButton.getText" },
                                /* 129 */{ "JComponent.firePropertyChangeInt",
                                        "displayedMnemonicIndex", "-1", "-1" },
                                /* 130 */{ "JComponent.firePropertyChange",
                                        "displayedMnemonicIndex",
                                        new Integer(-1), new Integer(-1) },
                                /* 131 */{ "AbstractAction", "getValue",
                                        "ActionCommandKey" },
                                /* 132 */{
                                        "AbstractButton.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                                /* 133 */{
                                        "ButtonModel.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY }, })) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected setAction(Action != null) to call another sequence of events");
        }

        InstrumentedUILog.clear();
        if (iab.getAction() != action) {
            return failed("expected getAction() to return what was set by setAction(...)");
        }
        if (!InstrumentedUILog
                .equals(new Object[][] { { "AbstractButton.getAction" } })) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected getAction() not to call any additional methods");
        }

        return passed();
    }

    public Result testActionCommand() {
        return super.testActionCommand();
    }

    public Result testBorderPainted() {
        AbstractButton iab = getInstrumentedAbstractButton();
        InstrumentedUILog.clear();
        if (!iab.isBorderPainted()) {
            return failed("expected isBorderPainted() to return true by default");
        }
        Util.waitQueueEventsProcess();

        if (!InstrumentedUILog.equals(new Object[][] {
        /* 1 */{ "AbstractButton.isBorderPainted" }, })) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected AbstractButton.isBorderPainted not to call any additional methods");
        }

        InstrumentedUILog.clear();
        iab.setBorderPainted(false);
        Util.waitQueueEventsProcess();
        if (!InstrumentedUILog.equals(new Object[][] {
                /* 1 */{ "AbstractButton.setBorderPainted", "false" },
                /* 2 */{ "JComponent.firePropertyChangeBoolean",
                        "borderPainted", "true", "false" },
                /* 3 */{ "JComponent.revalidate" },
                /* 4 */{ "awt.Component.getParent" },
                /* 5 */{ "awt.Component.repaint" },
                /* 6 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setBorderPainted", "false" },
                        /* 2 */{ "JComponent.firePropertyChangeBoolean",
                                "borderPainted", "true", "false" },
                        /* 3 */{ "JComponent.firePropertyChange",
                                "borderPainted", Boolean.TRUE, Boolean.FALSE },
                        /* 4 */{ "JComponent.revalidate" },
                        /* 5 */{ "awt.Container.invalidate" },
                        /* 6 */{ "awt.Component.getParent" },
                        /* 7 */{ "JComponent.isValidateRoot" },
                        /* 8 */{ "awt.Component.getParent" },
                        /* 9 */{ "awt.Component.isValid" },
                        /* 10 */{ "awt.Component.isShowing" },
                        /* 11 */{ "awt.Component.isVisible" },
                        /* 12 */{ "awt.Component.isDisplayable" },
                        /* 13 */{ "awt.Component.repaint" },
                        /* 14 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 15 */{ "JComponent.getVisibleRect" },
                        /* 16 */{ "JComponent.getWidth" },
                        /* 17 */{ "JComponent.getHeight" },
                        /* 18 */{ "awt.Component.getParent" }, })
        && !InstrumentedUILog.equals(new Object[][] {
                /* 1 */ { "AbstractButton.setBorderPainted", "false"}, 
                /* 2 */ { "JComponent.firePropertyChangeBoolean", "borderPainted", "true", "false"}, 
                /* 3 */ { "JComponent.revalidate"}, 
                /* 4 */ { "awt.Container.invalidate"}, 
                /* 5 */ { "awt.Component.getParent"}, 
                /* 6 */ { "JComponent.isValidateRoot"}, 
                /* 7 */ { "awt.Component.getParent"}, 
                /* 8 */ { "awt.Component.isValid"}, 
                /* 9 */ { "awt.Component.isShowing"}, 
                /* 10 */ { "awt.Component.isVisible"}, 
                /* 11 */ { "awt.Component.isDisplayable"}, 
                /* 12 */ { "awt.Component.repaint"}, 
                })                
        ) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected AbstractButton.setBorderPainted(false) to call another sequence of events");
        }
        InstrumentedUILog.clear();
        iab.setBorderPainted(false);
        Util.waitQueueEventsProcess();
        if (!InstrumentedUILog.equals(new Object[][] {
                /* 1 */{ "AbstractButton.setBorderPainted", "false" },
                /* 2 */{ "JComponent.firePropertyChangeBoolean",
                        "borderPainted", "false", "false" }, })

                && !InstrumentedUILog
                        .equals(new Object[][] {
                                /* 1 */{ "AbstractButton.setBorderPainted",
                                        "false" },
                                /* 2 */{
                                        "JComponent.firePropertyChangeBoolean",
                                        "borderPainted", "false", "false" },
                                /* 3 */{ "JComponent.firePropertyChange",
                                        "borderPainted", Boolean.FALSE,
                                        Boolean.FALSE }, })

        ) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected second AbstractButton.setBorderPainted(false) to call another sequence of events");
        }

        return passed();
    }

    public Result testCheckHorizontalKey() {
        return super.testCheckHorizontalKey();
    }

    public Result testCheckVerticalKey() {
        return super.testCheckVerticalKey();
    }

    public Result testConfigurePropertiesFromAction() {
        ButtonInternalsMadePublic bimp = getButtonWithPublicInternals();
        InstrumentedUILog.clear();

        bimp.configurePropertiesFromAction(null);

        Util.waitQueueEventsProcess();

        if (!InstrumentedUILog
                .equals(new Object[][] {
                        /* 1 */{
                                "AbstractButton.configurePropertiesFromAction",
                                null },
                        /* 2 */{ "AbstractButton.setMnemonic", "0" },
                        /* 3 */{ "AbstractButton.getMnemonic" },
                        /* 4 */{ "ButtonModel.setMnemonic", "0" },
                        /* 5 */{ "ButtonModel.fireStateChanged" },
                        /* 6 */{ "ButtonModel.getMnemonic" },
                        /* 7 */{ "JComponent.setToolTipText", null },
                        /* 8 */{ "JComponent.getToolTipText" },
                        /* 9 */{ "awt.Component.removeMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 10 */{ "awt.Component.removeMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 11 */{ "AbstractButton.setIcon", null },
                        /* 12 */{ "JComponent.firePropertyChange", "icon",
                                null, null },
                        /* 13 */{ "AbstractButton.setActionCommand", null },
                        /* 14 */{ "AbstractButton.getModel" },
                        /* 15 */{ "ButtonModel.setActionCommand", null },
                        /* 16 */{ "JComponent.setEnabled", "true" },
                        /* 17 */{ "JComponent.isEnabled" },
                        /* 18 */{ "awt.Component.enable", "true" },
                        /* 19 */{ "JComponent.enable" },
                        /* 20 */{ "JComponent.isEnabled" },
                        /* 21 */{ "JComponent.firePropertyChangeBoolean",
                                "enabled", "true", "true" },
                        /* 22 */{ "ButtonModel.setEnabled", "true" },
                        /* 23 */{ "ButtonModel.isEnabled" },
                        /* 24 */{ "AbstractButton.setText", null },
                        /* 25 */{ "JComponent.firePropertyChange", "text", "",
                                null },
                        /* 26 */{ "AbstractButton.getText" },
                        /* 27 */{ "AbstractButton.getMnemonic" },
                        /* 28 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 29 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 30 */{ "JComponent.revalidate" },
                        /* 31 */{ "awt.Component.getParent" },
                        /* 32 */{ "awt.Component.repaint" },
                        /* 33 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{
                                "AbstractButton.configurePropertiesFromAction",
                                null },
                        /* 2 */{ "AbstractButton.setMnemonic", "0" },
                        /* 3 */{ "AbstractButton.getMnemonic" },
                        /* 4 */{ "ButtonModel.setMnemonic", "0" },
                        /* 5 */{ "ButtonModel.fireStateChanged" },
                        /* 6 */{ "ButtonModel.getMnemonic" },
                        /* 7 */{ "AbstractButton.fireStateChanged" },
                        /* 8 */{ "awt.Component.repaint" },
                        /* 9 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 10 */{ "awt.Component.repaint" },
                        /* 11 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 12 */{ "ButtonModel.getMnemonic" },
                        /* 13 */{ "JComponent.setToolTipText", null },
                        /* 14 */{ "JComponent.getToolTipText" },
                        /* 15 */{ "awt.Component.removeMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 16 */{ "awt.Component.removeMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 17 */{ "AbstractButton.setIcon", null },
                        /* 18 */{ "JComponent.firePropertyChange", "icon",
                                null, null },
                        /* 19 */{ "AbstractButton.setActionCommand", null },
                        /* 20 */{ "AbstractButton.getModel" },
                        /* 21 */{ "ButtonModel.setActionCommand", null },
                        /* 22 */{ "JComponent.setEnabled", "true" },
                        /* 23 */{ "JComponent.isEnabled" },
                        /* 24 */{ "awt.Component.enable", "true" },
                        /* 25 */{ "JComponent.enable" },
                        /* 26 */{ "JComponent.isEnabled" },
                        /* 27 */{ "JComponent.firePropertyChangeBoolean",
                                "enabled", "true", "true" },
                        /* 28 */{ "ButtonModel.setEnabled", "true" },
                        /* 29 */{ "ButtonModel.isEnabled" },
                        /* 30 */{ "AbstractButton.setText", null },
                        /* 31 */{ "JComponent.firePropertyChange", "text", "",
                                null },
                        /* 32 */{ "AbstractButton.getText" },
                        /* 33 */{ "AbstractButton.getMnemonic" },
                        /* 34 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 35 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 36 */{ "JComponent.revalidate" },
                        /* 37 */{ "awt.Component.getParent" },
                        /* 38 */{ "awt.Component.repaint" },
                        /* 39 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{
                                "AbstractButton.configurePropertiesFromAction",
                                null },
                        /* 2 */{ "AbstractButton.setMnemonic", "0" },
                        /* 3 */{ "AbstractButton.getMnemonic" },
                        /* 4 */{ "ButtonModel.setMnemonic", "0" },
                        /* 5 */{ "ButtonModel.fireStateChanged" },
                        /* 6 */{ "ButtonModel.getMnemonic" },
                        /* 7 */{ "AbstractButton.setText", null },
                        /* 8 */{ "JComponent.firePropertyChange", "text", "",
                                null },
                        /* 9 */{ "AbstractButton.getText" },
                        /* 10 */{ "AbstractButton.getMnemonic" },
                        /* 11 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 12 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 13 */{ "JComponent.revalidate" },
                        /* 14 */{ "awt.Component.getParent" },
                        /* 15 */{ "awt.Component.repaint" },
                        /* 16 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 17 */{ "JComponent.setToolTipText", null },
                        /* 18 */{ "JComponent.getToolTipText" },
                        /* 19 */{ "awt.Component.removeMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 20 */{ "awt.Component.removeMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 21 */{ "AbstractButton.setIcon", null },
                        /* 22 */{ "JComponent.firePropertyChange", "icon",
                                null, null },
                        /* 23 */{ "AbstractButton.setActionCommand", null },
                        /* 24 */{ "AbstractButton.getModel" },
                        /* 25 */{ "ButtonModel.setActionCommand", null },
                        /* 26 */{ "JComponent.setEnabled", "true" },
                        /* 27 */{ "JComponent.isEnabled" },
                        /* 28 */{ "awt.Component.enable", "true" },
                        /* 29 */{ "JComponent.enable" },
                        /* 30 */{ "JComponent.isEnabled" },
                        /* 31 */{ "JComponent.firePropertyChangeBoolean",
                                "enabled", "true", "true" },
                        /* 32 */{ "ButtonModel.setEnabled", "true" },
                        /* 33 */{ "ButtonModel.isEnabled" }, })

                //Linux 1.5
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{
                                "AbstractButton.configurePropertiesFromAction",
                                null },
                        /* 2 */{ "AbstractButton.setMnemonic", "0" },
                        /* 3 */{ "AbstractButton.getMnemonic" },
                        /* 4 */{ "ButtonModel.setMnemonic", "0" },
                        /* 5 */{ "ButtonModel.fireStateChanged" },
                        /* 6 */{ "ButtonModel.getMnemonic" },
                        /* 7 */{ "AbstractButton.fireStateChanged" },
                        /* 8 */{ "awt.Component.repaint" },
                        /* 9 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 10 */{ "awt.Component.repaint" },
                        /* 11 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 12 */{ "ButtonModel.getMnemonic" },
                        /* 13 */{ "AbstractButton.setText", null },
                        /* 14 */{ "JComponent.firePropertyChange", "text", "",
                                null },
                        /* 15 */{ "AbstractButton.getText" },
                        /* 16 */{ "AbstractButton.getMnemonic" },
                        /* 17 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 18 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 19 */{ "JComponent.revalidate" },
                        /* 20 */{ "awt.Component.getParent" },
                        /* 21 */{ "awt.Component.repaint" },
                        /* 22 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 23 */{ "JComponent.setToolTipText", null },
                        /* 24 */{ "JComponent.getToolTipText" },
                        /* 25 */{ "awt.Component.removeMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 26 */{ "awt.Component.removeMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 27 */{ "AbstractButton.setIcon", null },
                        /* 28 */{ "JComponent.firePropertyChange", "icon",
                                null, null },
                        /* 29 */{ "AbstractButton.setActionCommand", null },
                        /* 30 */{ "AbstractButton.getModel" },
                        /* 31 */{ "ButtonModel.setActionCommand", null },
                        /* 32 */{ "JComponent.setEnabled", "true" },
                        /* 33 */{ "JComponent.isEnabled" },
                        /* 34 */{ "awt.Component.enable", "true" },
                        /* 35 */{ "JComponent.enable" },
                        /* 36 */{ "JComponent.isEnabled" },
                        /* 37 */{ "JComponent.firePropertyChangeBoolean",
                                "enabled", "true", "true" },
                        /* 38 */{ "ButtonModel.setEnabled", "true" },
                        /* 39 */{ "ButtonModel.isEnabled" },

                })
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{
                                "AbstractButton.configurePropertiesFromAction",
                                null },
                        /* 2 */{ "AbstractButton.setMnemonic", "0" },
                        /* 3 */{ "AbstractButton.getMnemonic" },
                        /* 4 */{ "ButtonModel.setMnemonic", "0" },
                        /* 5 */{ "ButtonModel.fireStateChanged" },
                        /* 6 */{ "ButtonModel.getMnemonic" },
                        /* 7 */{ "AbstractButton.fireStateChanged" },
                        /* 8 */{ "awt.Component.repaint" },
                        /* 9 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 10 */{ "ButtonModel.getMnemonic" },
                        /* 11 */{ "AbstractButton.setText", null },
                        /* 12 */{ "JComponent.firePropertyChange", "text", "",
                                null },
                        /* 13 */{ "AbstractButton.getMnemonic" },
                        /* 14 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 15 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 16 */{ "JComponent.revalidate" },
                        /* 17 */{ "awt.Component.getParent" },
                        /* 18 */{ "awt.Component.repaint" },
                        /* 19 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 20 */{ "JComponent.setToolTipText", null },
                        /* 21 */{ "JComponent.getToolTipText" },
                        /* 22 */{ "awt.Component.removeMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 23 */{ "awt.Component.removeMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 24 */{ "AbstractButton.setIcon", null },
                        /* 25 */{ "JComponent.firePropertyChange", "icon",
                                null, null },
                        /* 26 */{ "AbstractButton.setActionCommand", null },
                        /* 27 */{ "AbstractButton.getModel" },
                        /* 28 */{ "ButtonModel.setActionCommand", null },
                        /* 29 */{ "JComponent.setEnabled", "true" },
                        /* 30 */{ "JComponent.isEnabled" },
                        /* 31 */{ "awt.Component.enable", "true" },
                        /* 32 */{ "JComponent.enable" },
                        /* 33 */{ "JComponent.isEnabled" },
                        /* 34 */{ "JComponent.firePropertyChangeBoolean",
                                "enabled", "true", "true" },
                        /* 35 */{ "ButtonModel.setEnabled", "true" },
                        /* 36 */{ "ButtonModel.isEnabled" }, })
                && !InstrumentedUILog.equals(new Object[][] {

                        /* 1 */{
                                "AbstractButton.configurePropertiesFromAction",
                                null },
                        /* 2 */{ "AbstractButton.setActionCommand", null },
                        /* 3 */{ "ButtonModel.setActionCommand", null },
                        /* 4 */{ "AbstractButton.setIcon", null },
                        /* 5 */{ "JComponent.firePropertyChange", "icon",
                                null, null },
                        /* 6 */{ "JComponent.revalidate" },
                        /* 7 */{ "awt.Container.invalidate" },
                        /* 8 */{ "awt.Component.getParent" },
                        /* 9 */{ "JComponent.isValidateRoot" },
                        /* 10 */{ "awt.Component.getParent" },
                        /* 11 */{ "awt.Component.isValid" },
                        /* 12 */{ "awt.Component.isShowing" },
                        /* 13 */{ "awt.Component.isVisible" },
                        /* 14 */{ "awt.Component.isDisplayable" },
                        /* 15 */{ "awt.Component.repaint" },
                        /* 16 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 17 */{ "JComponent.getVisibleRect" },
                        /* 18 */{ "JComponent.getWidth" },
                        /* 19 */{ "JComponent.getHeight" },
                        /* 20 */{ "awt.Component.getParent" },
                        /* 21 */{ "AbstractButton.setText", null },
                        /* 22 */{ "JComponent.firePropertyChange", "text", "",
                                null },
                        /* 23 */{ "JComponent.revalidate" },
                        /* 24 */{ "awt.Container.invalidate" },
                        /* 25 */{ "awt.Component.getParent" },
                        /* 26 */{ "JComponent.isValidateRoot" },
                        /* 27 */{ "awt.Component.getParent" },
                        /* 28 */{ "awt.Component.isValid" },
                        /* 29 */{ "awt.Component.isShowing" },
                        /* 30 */{ "awt.Component.isVisible" },
                        /* 31 */{ "awt.Component.isDisplayable" },
                        /* 32 */{ "awt.Component.repaint" },
                        /* 33 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 34 */{ "JComponent.getVisibleRect" },
                        /* 35 */{ "JComponent.getWidth" },
                        /* 36 */{ "JComponent.getHeight" },
                        /* 37 */{ "awt.Component.getParent" },
                        /* 38 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 39 */{ "AbstractButton.getText" },
                        /* 40 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 41 */{ "JComponent.firePropertyChange",
                                "displayedMnemonicIndex", new Integer(-1),
                                new Integer(-1) },
                        /* 42 */{ "JComponent.setEnabled", "true" },
                        /* 43 */{ "ButtonModel.isEnabled" },
                        /* 44 */{ "JComponent.setToolTipText", null },
                        /* 45 */{ "awt.Component.removeMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 46 */{ "awt.Component.removeMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 47 */{ "AbstractButton.setMnemonic", "0" },
                        /* 48 */{ "ButtonModel.setMnemonic", "0" },
                        /* 49 */{ "ButtonModel.fireStateChanged" },
                        /* 50 */{ "ButtonModel.getChangeListeners" }, })

                //
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{
                                "AbstractButton.configurePropertiesFromAction",
                                null },
                        /* 2 */{ "AbstractButton.setActionCommand", null },
                        /* 3 */{ "ButtonModel.setActionCommand", null },
                        /* 4 */{ "AbstractButton.setIcon", null },
                        /* 5 */{ "JComponent.firePropertyChange", "icon",
                                null, null },
                        /* 6 */{ "JComponent.revalidate" },
                        /* 7 */{ "awt.Container.invalidate" },
                        /* 8 */{ "awt.Component.getParent" },
                        /* 9 */{ "JComponent.isValidateRoot" },
                        /* 10 */{ "awt.Component.getParent" },
                        /* 11 */{ "awt.Component.isValid" },
                        /* 12 */{ "awt.Component.isShowing" },
                        /* 13 */{ "awt.Component.isVisible" },
                        /* 14 */{ "awt.Component.isDisplayable" },
                        /* 15 */{ "awt.Component.repaint" },
                        /* 16 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 17 */{ "JComponent.getVisibleRect" },
                        /* 18 */{ "JComponent.getWidth" },
                        /* 19 */{ "JComponent.getHeight" },
                        /* 20 */{ "awt.Component.getParent" },
                        /* 21 */{ "AbstractButton.setText", null },
                        /* 22 */{ "JComponent.firePropertyChange", "text", "",
                                null },
                        /* 23 */{ "JComponent.revalidate" },
                        /* 24 */{ "awt.Container.invalidate" },
                        /* 25 */{ "awt.Component.getParent" },
                        /* 26 */{ "JComponent.isValidateRoot" },
                        /* 27 */{ "awt.Component.getParent" },
                        /* 28 */{ "awt.Component.isValid" },
                        /* 29 */{ "awt.Component.isShowing" },
                        /* 30 */{ "awt.Component.isVisible" },
                        /* 31 */{ "awt.Component.isDisplayable" },
                        /* 32 */{ "awt.Component.repaint" },
                        /* 33 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 34 */{ "JComponent.getVisibleRect" },
                        /* 35 */{ "JComponent.getWidth" },
                        /* 36 */{ "JComponent.getHeight" },
                        /* 37 */{ "awt.Component.getParent" },
                        /* 38 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 39 */{ "AbstractButton.getText" },
                        /* 40 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 41 */{ "JComponent.firePropertyChange",
                                "displayedMnemonicIndex", new Integer(-1),
                                new Integer(-1) },
                        /* 42 */{ "JComponent.setEnabled", "true" },
                        /* 43 */{ "ButtonModel.isEnabled" },
                        /* 44 */{ "JComponent.setToolTipText", null },
                        /* 45 */{ "awt.Component.removeMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 46 */{ "awt.Component.removeMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 47 */{ "AbstractButton.setMnemonic", "0" },
                        /* 48 */{ "ButtonModel.setMnemonic", "0" },
                        /* 49 */{ "ButtonModel.fireStateChanged" },
                        /* 50 */{ "ButtonModel.getChangeListeners" },
                        /* 51 */{ "ButtonModel.getMnemonic" },
                        /* 52 */{ "AbstractButton.fireStateChanged" },
                        /* 53 */{ "AbstractButton.getChangeListeners" },
                        /* 54 */{ "JComponent.revalidate" },
                        /* 55 */{ "awt.Container.invalidate" },
                        /* 56 */{ "awt.Component.getParent" },
                        /* 57 */{ "JComponent.isValidateRoot" },
                        /* 58 */{ "awt.Component.getParent" },
                        /* 59 */{ "awt.Component.isValid" },
                        /* 60 */{ "awt.Component.isShowing" },
                        /* 61 */{ "awt.Component.isVisible" },
                        /* 62 */{ "awt.Component.isDisplayable" },
                        /* 63 */{ "awt.Component.repaint" },
                        /* 64 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 65 */{ "JComponent.getVisibleRect" },
                        /* 66 */{ "JComponent.getWidth" },
                        /* 67 */{ "JComponent.getHeight" },
                        /* 68 */{ "awt.Component.getParent" }, })

        ) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected configurePropertiesFromAction(null) to call another sequence of events");
        }

        Action action = new InstrumentedAbstractAction();
        InstrumentedUILog.clear();
        bimp.configurePropertiesFromAction(action);

        Util.waitQueueEventsProcess();
        //InstrumentedUILog.printLogAsArray();

        if (!InstrumentedUILog.equals(new Object[][] {
                /* 1 */{ "AbstractButton.configurePropertiesFromAction",
                        action },
                /* 2 */{ "AbstractAction", "getValue", "MnemonicKey" },
                /* 3 */{ "AbstractButton.setMnemonic",
                        "" + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                /* 4 */{ "AbstractButton.getMnemonic" },
                /* 5 */{ "ButtonModel.setMnemonic",
                        "" + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                /* 6 */{ "ButtonModel.fireStateChanged" },
                /* 7 */{ "ButtonModel.getMnemonic" },
                /* 8 */{ "JComponent.firePropertyChangeInt", "mnemonic", "0",
                        "" + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                /* 9 */{ "AbstractButton.getMnemonic" },
                /* 10 */{ "awt.Component.getParent" },
                /* 11 */{ "JComponent.firePropertyChange",
                        "_WhenInFocusedWindow", null,
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 12 */{ "awt.Component.getParent" },
                /* 13 */{ "awt.Component.getParent" },
                /* 14 */{ "awt.Component.getParent" },
                /* 15 */{ "awt.Component.getParent" },
                /* 16 */{ "awt.Component.getParent" },
                /* 17 */{ "AbstractButton.getText" },
                /* 18 */{ "AbstractButton.setDisplayedMnemonicIndex", "-1" },
                /* 19 */{ "JComponent.firePropertyChangeInt",
                        "displayedMnemonicIndex", "-1", "-1" },
                /* 20 */{ "JComponent.revalidate" },
                /* 21 */{ "awt.Component.getParent" },
                /* 22 */{ "awt.Component.repaint" },
                /* 23 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 24 */{ "AbstractAction", "getValue", "ShortDescription" },
                /* 25 */{ "JComponent.setToolTipText",
                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                /* 26 */{ "JComponent.getToolTipText" },
                /* 27 */{ "JComponent.firePropertyChange", "ToolTipText",
                        null, InstrumentedAbstractAction.SHORT_DESCRIPTION },
                /* 28 */{ "awt.Component.removeMouseListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 29 */{ "awt.Component.addMouseListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 30 */{ "awt.Component.removeMouseMotionListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 31 */{ "awt.Component.addMouseMotionListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 32 */{ "AbstractAction", "getValue", "SmallIcon" },
                /* 33 */{ "AbstractButton.setIcon",
                        InstrumentedAbstractAction.SMALL_ICON },
                /* 34 */{ "JComponent.firePropertyChange", "icon", null,
                        InstrumentedAbstractAction.SMALL_ICON },
                /* 35 */{ "JComponent.revalidate" },
                /* 36 */{ "awt.Component.getParent" },
                /* 37 */{ "awt.Component.repaint" },
                /* 38 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 39 */{ "AbstractAction", "getValue", "ActionCommandKey" },
                /* 40 */{ "AbstractButton.setActionCommand",
                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                /* 41 */{ "AbstractButton.getModel" },
                /* 42 */{ "ButtonModel.setActionCommand",
                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                /* 43 */{ "AbstractAction", "isEnabled" },
                /* 44 */{ "JComponent.setEnabled", "true" },
                /* 45 */{ "JComponent.isEnabled" },
                /* 46 */{ "awt.Component.enable", "true" },
                /* 47 */{ "JComponent.enable" },
                /* 48 */{ "JComponent.isEnabled" },
                /* 49 */{ "JComponent.firePropertyChangeBoolean", "enabled",
                        "true", "true" },
                /* 50 */{ "ButtonModel.setEnabled", "true" },
                /* 51 */{ "ButtonModel.isEnabled" },
                /* 52 */{ "AbstractAction", "getValue", "Name" },
                /* 53 */{ "AbstractButton.setText",
                        InstrumentedAbstractAction.NAME },
                /* 54 */{ "JComponent.firePropertyChange", "text", null,
                        InstrumentedAbstractAction.NAME },
                /* 55 */{ "AbstractButton.getText" },
                /* 56 */{ "AbstractButton.getMnemonic" },
                /* 57 */{ "AbstractButton.setDisplayedMnemonicIndex", "0" },
                /* 58 */{ "AbstractButton.getText" },
                /* 59 */{ "JComponent.firePropertyChangeInt",
                        "displayedMnemonicIndex", "-1", "0" },
                /* 60 */{ "JComponent.revalidate" },
                /* 61 */{ "awt.Component.getParent" },
                /* 62 */{ "awt.Component.repaint" },
                /* 63 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 64 */{ "JComponent.revalidate" },
                /* 65 */{ "awt.Component.getParent" },
                /* 66 */{ "awt.Component.repaint" },
                /* 67 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                && !InstrumentedUILog
                        .equals(new Object[][] {
                                /* 1 */{
                                        "AbstractButton.configurePropertiesFromAction",
                                        action },
                                /* 2 */{ "AbstractAction", "getValue",
                                        "MnemonicKey" },
                                /* 3 */{
                                        "AbstractButton.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 4 */{ "AbstractButton.getMnemonic" },
                                /* 5 */{
                                        "ButtonModel.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 6 */{ "ButtonModel.fireStateChanged" },
                                /* 7 */{ "ButtonModel.getMnemonic" },
                                /* 8 */{
                                        "JComponent.firePropertyChangeInt",
                                        "mnemonic",
                                        "0",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 9 */{ "AbstractButton.getMnemonic" },
                                /* 10 */{ "awt.Component.getParent" },
                                /* 11 */{ "JComponent.firePropertyChange",
                                        "_WhenInFocusedWindow", null,
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 12 */{ "awt.Component.getParent" },
                                /* 13 */{ "awt.Component.getParent" },
                                /* 14 */{ "awt.Component.getParent" },
                                /* 15 */{ "awt.Component.getParent" },
                                /* 16 */{ "awt.Component.getParent" },
                                /* 17 */{ "AbstractButton.getText" },
                                /* 18 */{
                                        "AbstractButton.setDisplayedMnemonicIndex",
                                        "-1" },
                                /* 19 */{ "JComponent.firePropertyChangeInt",
                                        "displayedMnemonicIndex", "-1", "-1" },
                                /* 20 */{ "JComponent.revalidate" },
                                /* 21 */{ "awt.Component.getParent" },
                                /* 22 */{ "awt.Component.repaint" },
                                /* 23 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 24 */{ "AbstractAction", "getValue", "Name" },
                                /* 25 */{ "AbstractButton.setText",
                                        InstrumentedAbstractAction.NAME },
                                /* 26 */{ "JComponent.firePropertyChange",
                                        "text", null,
                                        InstrumentedAbstractAction.NAME },
                                /* 27 */{ "AbstractButton.getText" },
                                /* 28 */{ "AbstractButton.getMnemonic" },
                                /* 29 */{
                                        "AbstractButton.setDisplayedMnemonicIndex",
                                        "0" },
                                /* 30 */{ "AbstractButton.getText" },
                                /* 31 */{ "JComponent.firePropertyChangeInt",
                                        "displayedMnemonicIndex", "-1", "0" },
                                /* 32 */{ "JComponent.revalidate" },
                                /* 33 */{ "awt.Component.getParent" },
                                /* 34 */{ "awt.Component.repaint" },
                                /* 35 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 36 */{ "JComponent.revalidate" },
                                /* 37 */{ "awt.Component.getParent" },
                                /* 38 */{ "awt.Component.repaint" },
                                /* 39 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 40 */{ "AbstractAction", "getValue",
                                        "ShortDescription" },
                                /* 41 */{
                                        "JComponent.setToolTipText",
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 42 */{ "JComponent.getToolTipText" },
                                /* 43 */{
                                        "JComponent.firePropertyChange",
                                        "ToolTipText",
                                        null,
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 44 */{ "awt.Component.removeMouseListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 45 */{ "awt.Component.addMouseListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 46 */{
                                        "awt.Component.removeMouseMotionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 47 */{
                                        "awt.Component.addMouseMotionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 48 */{ "AbstractAction", "getValue",
                                        "SmallIcon" },
                                /* 49 */{ "AbstractButton.setIcon",
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 50 */{ "JComponent.firePropertyChange",
                                        "icon", null,
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 51 */{ "JComponent.revalidate" },
                                /* 52 */{ "awt.Component.getParent" },
                                /* 53 */{ "awt.Component.repaint" },
                                /* 54 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 55 */{ "AbstractAction", "getValue",
                                        "ActionCommandKey" },
                                /* 56 */{
                                        "AbstractButton.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                                /* 57 */{ "AbstractButton.getModel" },
                                /* 58 */{
                                        "ButtonModel.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                                /* 59 */{ "AbstractAction", "isEnabled" },
                                /* 60 */{ "JComponent.setEnabled", "true" },
                                /* 61 */{ "JComponent.isEnabled" },
                                /* 62 */{ "awt.Component.enable", "true" },
                                /* 63 */{ "JComponent.enable" },
                                /* 64 */{ "JComponent.isEnabled" },
                                /* 65 */{
                                        "JComponent.firePropertyChangeBoolean",
                                        "enabled", "true", "true" },
                                /* 66 */{ "ButtonModel.setEnabled", "true" },
                                /* 67 */{ "ButtonModel.isEnabled" }, })
                && !InstrumentedUILog
                        .equals(new Object[][] {
                                /* 1 */{
                                        "AbstractButton.configurePropertiesFromAction",
                                        action },
                                /* 2 */{ "AbstractAction", "getValue",
                                        "MnemonicKey" },
                                /* 3 */{
                                        "AbstractButton.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 4 */{ "AbstractButton.getMnemonic" },
                                /* 5 */{
                                        "ButtonModel.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 6 */{ "ButtonModel.fireStateChanged" },
                                /* 7 */{ "ButtonModel.getMnemonic" },
                                /* 8 */{
                                        "JComponent.firePropertyChangeInt",
                                        "mnemonic",
                                        "0",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 9 */{ "AbstractButton.getMnemonic" },
                                /* 10 */{ "awt.Component.getParent" },
                                /* 11 */{ "JComponent.firePropertyChange",
                                        "_WhenInFocusedWindow", null,
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 12 */{ "awt.Component.getParent" },
                                /* 13 */{ "awt.Component.getParent" },
                                /* 14 */{ "awt.Component.getParent" },
                                /* 15 */{ "awt.Component.getParent" },
                                /* 16 */{ "awt.Component.getParent" },
                                /* 17 */{ "AbstractButton.getText" },
                                /* 18 */{
                                        "AbstractButton.setDisplayedMnemonicIndex",
                                        "-1" },
                                /* 19 */{ "JComponent.firePropertyChangeInt",
                                        "displayedMnemonicIndex", "-1", "-1" },
                                /* 20 */{ "JComponent.revalidate" },
                                /* 21 */{ "awt.Component.getParent" },
                                /* 22 */{ "awt.Component.repaint" },
                                /* 23 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 24 */{ "AbstractButton.fireStateChanged" },
                                /* 25 */{ "awt.Component.repaint" },
                                /* 26 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 27 */{ "awt.Component.repaint" },
                                /* 28 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 29 */{ "ButtonModel.getMnemonic" },
                                /* 30 */{ "AbstractAction", "getValue",
                                        "ShortDescription" },
                                /* 31 */{
                                        "JComponent.setToolTipText",
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 32 */{ "JComponent.getToolTipText" },
                                /* 33 */{
                                        "JComponent.firePropertyChange",
                                        "ToolTipText",
                                        null,
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 34 */{ "awt.Component.removeMouseListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 35 */{ "awt.Component.addMouseListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 36 */{
                                        "awt.Component.removeMouseMotionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 37 */{
                                        "awt.Component.addMouseMotionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 38 */{ "AbstractAction", "getValue",
                                        "SmallIcon" },
                                /* 39 */{ "AbstractButton.setIcon",
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 40 */{ "JComponent.firePropertyChange",
                                        "icon", null,
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 41 */{ "JComponent.revalidate" },
                                /* 42 */{ "awt.Component.getParent" },
                                /* 43 */{ "awt.Component.repaint" },
                                /* 44 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 45 */{ "AbstractAction", "getValue",
                                        "ActionCommandKey" },
                                /* 46 */{
                                        "AbstractButton.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                                /* 47 */{ "AbstractButton.getModel" },
                                /* 48 */{
                                        "ButtonModel.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                                /* 49 */{ "AbstractAction", "isEnabled" },
                                /* 50 */{ "JComponent.setEnabled", "true" },
                                /* 51 */{ "JComponent.isEnabled" },
                                /* 52 */{ "awt.Component.enable", "true" },
                                /* 53 */{ "JComponent.enable" },
                                /* 54 */{ "JComponent.isEnabled" },
                                /* 55 */{
                                        "JComponent.firePropertyChangeBoolean",
                                        "enabled", "true", "true" },
                                /* 56 */{ "ButtonModel.setEnabled", "true" },
                                /* 57 */{ "ButtonModel.isEnabled" },
                                /* 58 */{ "AbstractAction", "getValue", "Name" },
                                /* 59 */{ "AbstractButton.setText",
                                        InstrumentedAbstractAction.NAME },
                                /* 60 */{ "JComponent.firePropertyChange",
                                        "text", null,
                                        InstrumentedAbstractAction.NAME },
                                /* 61 */{ "AbstractButton.getText" },
                                /* 62 */{ "AbstractButton.getMnemonic" },
                                /* 63 */{
                                        "AbstractButton.setDisplayedMnemonicIndex",
                                        "0" },
                                /* 64 */{ "AbstractButton.getText" },
                                /* 65 */{ "JComponent.firePropertyChangeInt",
                                        "displayedMnemonicIndex", "-1", "0" },
                                /* 66 */{ "JComponent.revalidate" },
                                /* 67 */{ "awt.Component.getParent" },
                                /* 68 */{ "awt.Component.repaint" },
                                /* 69 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 70 */{ "JComponent.revalidate" },
                                /* 71 */{ "awt.Component.getParent" },
                                /* 72 */{ "awt.Component.repaint" },
                                /* 73 */{ "JComponent.repaint", "0 0 0 0 0" }, })

                //Linux 1.5
                && !InstrumentedUILog
                        .equals(new Object[][] {
                                /* 1 */{
                                        "AbstractButton.configurePropertiesFromAction",
                                        action },
                                /* 2 */{ "AbstractAction", "getValue",
                                        "MnemonicKey" },
                                /* 3 */{
                                        "AbstractButton.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 4 */{ "AbstractButton.getMnemonic" },
                                /* 5 */{
                                        "ButtonModel.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 6 */{ "ButtonModel.fireStateChanged" },
                                /* 7 */{ "ButtonModel.getMnemonic" },
                                /* 8 */{
                                        "JComponent.firePropertyChangeInt",
                                        "mnemonic",
                                        "0",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 9 */{ "AbstractButton.getMnemonic" },
                                /* 10 */{ "awt.Component.getParent" },
                                /* 11 */{ "JComponent.firePropertyChange",
                                        "_WhenInFocusedWindow", null,
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 12 */{ "awt.Component.getParent" },
                                /* 13 */{ "awt.Component.getParent" },
                                /* 14 */{ "awt.Component.getParent" },
                                /* 15 */{ "awt.Component.getParent" },
                                /* 16 */{ "awt.Component.getParent" },
                                /* 17 */{ "AbstractButton.getText" },
                                /* 18 */{
                                        "AbstractButton.setDisplayedMnemonicIndex",
                                        "-1" },
                                /* 19 */{ "JComponent.firePropertyChangeInt",
                                        "displayedMnemonicIndex", "-1", "-1" },
                                /* 20 */{ "JComponent.revalidate" },
                                /* 21 */{ "awt.Component.getParent" },
                                /* 22 */{ "awt.Component.repaint" },
                                /* 23 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 24 */{ "AbstractButton.fireStateChanged" },
                                /* 25 */{ "awt.Component.repaint" },
                                /* 26 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 27 */{ "awt.Component.repaint" },
                                /* 28 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 29 */{ "ButtonModel.getMnemonic" },
                                /* 30 */{ "AbstractAction", "getValue", "Name" },
                                /* 31 */{ "AbstractButton.setText",
                                        InstrumentedAbstractAction.NAME },
                                /* 32 */{ "JComponent.firePropertyChange",
                                        "text", null,
                                        InstrumentedAbstractAction.NAME },
                                /* 33 */{ "AbstractButton.getText" },
                                /* 34 */{ "AbstractButton.getMnemonic" },
                                /* 35 */{
                                        "AbstractButton.setDisplayedMnemonicIndex",
                                        "0" },
                                /* 36 */{ "AbstractButton.getText" },
                                /* 37 */{ "JComponent.firePropertyChangeInt",
                                        "displayedMnemonicIndex", "-1", "0" },
                                /* 38 */{ "JComponent.revalidate" },
                                /* 39 */{ "awt.Component.getParent" },
                                /* 40 */{ "awt.Component.repaint" },
                                /* 41 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 42 */{ "JComponent.revalidate" },
                                /* 43 */{ "awt.Component.getParent" },
                                /* 44 */{ "awt.Component.repaint" },
                                /* 45 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 46 */{ "AbstractAction", "getValue",
                                        "ShortDescription" },
                                /* 47 */{
                                        "JComponent.setToolTipText",
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 48 */{ "JComponent.getToolTipText" },
                                /* 49 */{
                                        "JComponent.firePropertyChange",
                                        "ToolTipText",
                                        null,
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 50 */{ "awt.Component.removeMouseListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 51 */{ "awt.Component.addMouseListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 52 */{
                                        "awt.Component.removeMouseMotionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 53 */{
                                        "awt.Component.addMouseMotionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 54 */{ "AbstractAction", "getValue",
                                        "SmallIcon" },
                                /* 55 */{ "AbstractButton.setIcon",
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 56 */{ "JComponent.firePropertyChange",
                                        "icon", null,
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 57 */{ "JComponent.revalidate" },
                                /* 58 */{ "awt.Component.getParent" },
                                /* 59 */{ "awt.Component.repaint" },
                                /* 60 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 61 */{ "AbstractAction", "getValue",
                                        "ActionCommandKey" },
                                /* 62 */{
                                        "AbstractButton.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                                /* 63 */{ "AbstractButton.getModel" },
                                /* 64 */{
                                        "ButtonModel.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                                /* 65 */{ "AbstractAction", "isEnabled" },
                                /* 66 */{ "JComponent.setEnabled", "true" },
                                /* 67 */{ "JComponent.isEnabled" },
                                /* 68 */{ "awt.Component.enable", "true" },
                                /* 69 */{ "JComponent.enable" },
                                /* 70 */{ "JComponent.isEnabled" },
                                /* 71 */{
                                        "JComponent.firePropertyChangeBoolean",
                                        "enabled", "true", "true" },
                                /* 72 */{ "ButtonModel.setEnabled", "true" },
                                /* 73 */{ "ButtonModel.isEnabled" }, })

                //
                && !InstrumentedUILog
                        .contains(new Object[][] {
                                /* 1 */{
                                        "AbstractButton.configurePropertiesFromAction",
                                        action },
                                /* 2 */{ "AbstractAction", "getValue",
                                        "MnemonicKey" },
                                /* 3 */{
                                        "AbstractButton.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 4 */{
                                        "ButtonModel.setMnemonic",
                                        ""
                                                + InstrumentedAbstractAction.MNEMONIC_KEY_VALUE },
                                /* 5 */{ "ButtonModel.fireStateChanged" },
                                /* 6 */{ "ButtonModel.getChangeListeners" },
                                /* 7 */{ "AbstractAction", "getValue",
                                        "ShortDescription" },
                                /* 8 */{
                                        "JComponent.setToolTipText",
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 9 */{
                                        "JComponent.firePropertyChange",
                                        "ToolTipText",
                                        null,
                                        InstrumentedAbstractAction.SHORT_DESCRIPTION },
                                /* 10 */{ "JComponent.revalidate" },
                                /* 11 */{ "awt.Container.invalidate" },
                                /* 12 */{ "awt.Component.getParent" },
                                /* 13 */{ "JComponent.isValidateRoot" },
                                /* 14 */{ "awt.Component.getParent" },
                                /* 15 */{ "awt.Component.isValid" },
                                /* 16 */{ "awt.Component.isShowing" },
                                /* 17 */{ "awt.Component.isVisible" },
                                /* 18 */{ "awt.Component.isDisplayable" },
                                /* 19 */{ "awt.Component.repaint" },
                                /* 20 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 21 */{ "JComponent.getVisibleRect" },
                                /* 22 */{ "JComponent.getWidth" },
                                /* 23 */{ "JComponent.getHeight" },
                                /* 24 */{ "awt.Component.getParent" },
                                /* 25 */{
                                        "awt.Component.addMouseMotionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 26 */{ "awt.Component.addMouseListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                /* 27 */{ "AbstractAction", "getValue",
                                        "SmallIcon" },
                                /* 28 */{ "AbstractButton.setIcon",
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 29 */{ "JComponent.firePropertyChange",
                                        "icon", null,
                                        InstrumentedAbstractAction.SMALL_ICON },
                                /* 30 */{ "JComponent.revalidate" },
                                /* 31 */{ "awt.Container.invalidate" },
                                /* 32 */{ "awt.Component.getParent" },
                                /* 33 */{ "JComponent.isValidateRoot" },
                                /* 34 */{ "awt.Component.getParent" },
                                /* 35 */{ "awt.Component.isValid" },
                                /* 36 */{ "awt.Component.isShowing" },
                                /* 37 */{ "awt.Component.isVisible" },
                                /* 38 */{ "awt.Component.isDisplayable" },
                                /* 39 */{ "awt.Component.repaint" },
                                /* 40 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 41 */{ "JComponent.getVisibleRect" },
                                /* 42 */{ "JComponent.getWidth" },
                                /* 43 */{ "JComponent.getHeight" },
                                /* 44 */{ "awt.Component.getParent" },
                                /* 45 */{ "AbstractAction", "isEnabled" },
                                /* 46 */{ "JComponent.setEnabled", "true" },
                                /* 47 */{ "ButtonModel.isEnabled" },
                                /* 48 */{ "AbstractAction", "getValue", "Name" },
                                /* 49 */{ "AbstractButton.setText",
                                        InstrumentedAbstractAction.NAME },
                                /* 50 */{ "JComponent.firePropertyChange",
                                        "text", null,
                                        InstrumentedAbstractAction.NAME },
                                /* 51 */{ "JComponent.revalidate" },
                                /* 52 */{ "awt.Container.invalidate" },
                                /* 53 */{ "awt.Component.getParent" },
                                /* 54 */{ "JComponent.isValidateRoot" },
                                /* 55 */{ "awt.Component.getParent" },
                                /* 56 */{ "awt.Component.isValid" },
                                /* 57 */{ "awt.Component.isShowing" },
                                /* 58 */{ "awt.Component.isVisible" },
                                /* 59 */{ "awt.Component.isDisplayable" },
                                /* 60 */{ "awt.Component.repaint" },
                                /* 61 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 62 */{ "JComponent.getVisibleRect" },
                                /* 63 */{ "JComponent.getWidth" },
                                /* 64 */{ "JComponent.getHeight" },
                                /* 65 */{ "awt.Component.getParent" },
                                /* 66 */{
                                        "AbstractButton.setDisplayedMnemonicIndex",
                                        "-1" },
                                /* 67 */{ "AbstractButton.getText" },
                                /* 68 */{ "JComponent.firePropertyChangeInt",
                                        "displayedMnemonicIndex", "-1", "-1" },
                                /* 69 */{ "JComponent.firePropertyChange",
                                        "displayedMnemonicIndex",
                                        new Integer(-1), new Integer(-1) },
                                /* 70 */{ "AbstractAction", "getValue",
                                        "ActionCommandKey" },
                                /* 71 */{
                                        "AbstractButton.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },
                                /* 72 */{
                                        "ButtonModel.setActionCommand",
                                        InstrumentedAbstractAction.ACTION_COMMAND_KEY },

                        })

        ) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected configurePropertiesFromAction(Action != null) to call another sequence of events");
        }

        return passed();
    }

    public Result testConstructor() {
        InstrumentedUILog.clear();
        AbstractButton iab = new InstrumentedJButton();
        Util.waitQueueEventsProcess();
        if (!InstrumentedUILog.equals(new Object[][] {
                /* 1 */{ "awt.Component.addFocusListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 2 */{ "JComponent.isManagingFocus" },
                /* 3 */{ "JComponent.firePropertyChange", "locale", null,
                        JComponent.getDefaultLocale() },
                /* 4 */{ "AbstractButton.setModel" },
                /* 5 */{ "AbstractButton.getModel" },
                /* 6 */{ "AbstractButton.createChangeListener" },
                /* 7 */{ "AbstractButton.createActionListener" },
                /* 8 */{ "AbstractButton.createItemListener" },
                /* 9 */{ "AbstractButton.getText" },
                /* 10 */{ "AbstractButton.setDisplayedMnemonicIndex", "-1" },
                /* 11 */{ "JComponent.firePropertyChangeInt",
                        "displayedMnemonicIndex", "-1", "-1" },
                /* 12 */{ "JComponent.firePropertyChange", "model", null,
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 13 */{ "JComponent.revalidate" },
                /* 14 */{ "awt.Component.getParent" },
                /* 15 */{ "awt.Component.repaint" },
                /* 16 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 17 */{ "AbstractButton.init", null, null },
                /* 18 */{ "AbstractButton.setLayout",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 19 */{ "JComponent.updateUI" },
                /* 20 */{ "JComponent.getUIClassID" },
                /* 21 */{ "AbstractButton.setUI",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 22 */{ "AbstractButton.isContentAreaFilled" },
                /* 23 */{ "JComponent.setOpaque", "true" },
                /* 24 */{ "JComponent.firePropertyChangeBoolean", "opaque",
                        "false", "true" },
                /* 25 */{ "AbstractButton.getMargin" },
                /* 26 */{ "AbstractButton.setMargin",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 27 */{ "JComponent.firePropertyChange", "margin", null,
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 28 */{ "JComponent.revalidate" },
                /* 29 */{ "awt.Component.getParent" },
                /* 30 */{ "awt.Component.repaint" },
                /* 31 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 32 */{ "awt.Component.getFont" },
                /* 33 */{ "JComponent.setFont",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 34 */{ "awt.Component.getFont" },
                /* 35 */{ "awt.Component.getFont" },
                /* 36 */{ "JComponent.firePropertyChange", "font", null,
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 37 */{ "awt.Component.getFont" },
                /* 38 */{ "JComponent.revalidate" },
                /* 39 */{ "awt.Component.getParent" },
                /* 40 */{ "awt.Component.repaint" },
                /* 41 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 42 */{ "awt.Component.getBackground" },
                /* 43 */{ "JComponent.setBackground",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 44 */{ "awt.Component.getBackground" },
                /* 45 */{ "JComponent.firePropertyChange", "background", null,
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 46 */{ "awt.Component.repaint" },
                /* 47 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 48 */{ "awt.Component.getForeground" },
                /* 49 */{ "JComponent.setForeground",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 50 */{ "awt.Component.getForeground" },
                /* 51 */{ "JComponent.firePropertyChange", "foreground", null,
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 52 */{ "awt.Component.repaint" },
                /* 53 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 54 */{ "JComponent.getBorder" },
                /* 55 */{ "JComponent.setBorder",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 56 */{ "JComponent.firePropertyChange", "border", null,
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 57 */{ "JComponent.revalidate" },
                /* 58 */{ "awt.Component.getParent" },
                /* 59 */{ "awt.Component.repaint" },
                /* 60 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 61 */{ "JComponent.firePropertyChange",
                        InstrumentedUILog.ANY_NON_NULL_VALUE, null,
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 62 */{ "awt.Component.addMouseListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 63 */{ "awt.Component.addMouseMotionListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 64 */{ "awt.Component.addFocusListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 65 */{ "JComponent.addPropertyChangeListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 66 */{ "AbstractButton.addChangeListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 67 */{ "AbstractButton.getMnemonic" },
                /* 68 */{ "AbstractButton.getUI" },
                /* 69 */{ "AbstractButton.getText" },
                /* 70 */{ "JComponent.firePropertyChange", "UI", null,
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 71 */{ "JComponent.revalidate" },
                /* 72 */{ "awt.Component.getParent" },
                /* 73 */{ "awt.Component.repaint" },
                /* 74 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 75 */{ "JComponent.setAlignmentX",
                        "" + Component.LEFT_ALIGNMENT },
                /* 76 */{ "JComponent.setAlignmentY",
                        "" + Component.CENTER_ALIGNMENT },
                /* 77 */{ "ButtonModel.setEnabled", "true" },
                /* 78 */{ "ButtonModel.isEnabled" },
                /* 79 */{ "ButtonModel.fireStateChanged" }, })

                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "awt.Component.addFocusListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 2 */{ "JComponent.isManagingFocus" },
                        /* 3 */{ "awt.Component.setLocale",
                                JComponent.getDefaultLocale() },
                        /* 4 */{ "JComponent.firePropertyChange", "locale",
                                null, JComponent.getDefaultLocale() },
                        /* 5 */{ "AbstractButton.setModel" },
                        /* 6 */{ "AbstractButton.getModel" },
                        /* 7 */{ "AbstractButton.createChangeListener" },
                        /* 8 */{ "AbstractButton.createActionListener" },
                        /* 9 */{ "AbstractButton.createItemListener" },
                        /* 10 */{ "AbstractButton.getText" },
                        /* 11 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 12 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 13 */{ "JComponent.firePropertyChange", "model",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 14 */{ "JComponent.revalidate" },
                        /* 15 */{ "awt.Component.getParent" },
                        /* 16 */{ "awt.Component.repaint" },
                        /* 17 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 18 */{ "AbstractButton.init", null, null },
                        /* 19 */{ "AbstractButton.setLayout",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 20 */{ "JComponent.updateUI" },
                        /* 21 */{ "JComponent.getUIClassID" },
                        /* 22 */{ "AbstractButton.setUI",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 23 */{ "AbstractButton.isContentAreaFilled" },
                        /* 24 */{ "JComponent.setOpaque", "true" },
                        /* 25 */{ "JComponent.firePropertyChangeBoolean",
                                "opaque", "false", "true" },
                        /* 26 */{ "AbstractButton.getMargin" },
                        /* 27 */{ "AbstractButton.setMargin",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 28 */{ "JComponent.firePropertyChange", "margin",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 29 */{ "JComponent.revalidate" },
                        /* 30 */{ "awt.Component.getParent" },
                        /* 31 */{ "awt.Component.repaint" },
                        /* 32 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 33 */{ "awt.Component.getFont" },
                        /* 34 */{ "JComponent.setFont",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 35 */{ "awt.Component.getFont" },
                        /* 36 */{ "awt.Component.getFont" },
                        /* 37 */{ "JComponent.firePropertyChange", "font",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 38 */{ "awt.Component.getFont" },
                        /* 39 */{ "JComponent.revalidate" },
                        /* 40 */{ "awt.Component.getParent" },
                        /* 41 */{ "awt.Component.repaint" },
                        /* 42 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 43 */{ "awt.Component.getBackground" },
                        /* 44 */{ "JComponent.setBackground",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 45 */{ "awt.Component.getBackground" },
                        /* 46 */{ "JComponent.firePropertyChange",
                                "background", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 47 */{ "awt.Component.repaint" },
                        /* 48 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 49 */{ "awt.Component.getForeground" },
                        /* 50 */{ "JComponent.setForeground",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 51 */{ "awt.Component.getForeground" },
                        /* 52 */{ "JComponent.firePropertyChange",
                                "foreground", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 53 */{ "awt.Component.repaint" },
                        /* 54 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 55 */{ "JComponent.getBorder" },
                        /* 56 */{ "JComponent.setBorder",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 57 */{ "JComponent.firePropertyChange", "border",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 58 */{ "JComponent.revalidate" },
                        /* 59 */{ "awt.Component.getParent" },
                        /* 60 */{ "awt.Component.repaint" },
                        /* 61 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 62 */{ "JComponent.firePropertyChange",
                                InstrumentedUILog.ANY_NON_NULL_VALUE, null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 63 */{ "awt.Component.addMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 64 */{ "awt.Component.addMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 65 */{ "awt.Component.addFocusListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 66 */{ "JComponent.addPropertyChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 67 */{ "AbstractButton.addChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 68 */{ "AbstractButton.getMnemonic" },
                        /* 69 */{ "AbstractButton.getUI" },
                        /* 70 */{ "AbstractButton.getText" },
                        /* 71 */{ "JComponent.firePropertyChange", "UI", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 72 */{ "JComponent.revalidate" },
                        /* 73 */{ "awt.Component.getParent" },
                        /* 74 */{ "awt.Component.repaint" },
                        /* 75 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 76 */{ "awt.Component.addFocusListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 77 */{ "JComponent.setAlignmentX",
                                "" + Component.LEFT_ALIGNMENT },
                        /* 78 */{ "JComponent.setAlignmentY",
                                "" + Component.CENTER_ALIGNMENT },
                        /* 79 */{ "ButtonModel.setEnabled", "true" },
                        /* 80 */{ "ButtonModel.isEnabled" },
                        /* 81 */{ "ButtonModel.fireStateChanged" }, })

                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "JComponent.isManagingFocus" },
                        /* 2 */{ "JComponent.firePropertyChange", "locale",
                                null, JComponent.getDefaultLocale() },
                        /* 3 */{ "AbstractButton.setModel" },
                        /* 4 */{ "AbstractButton.getModel" },
                        /* 5 */{ "AbstractButton.createChangeListener" },
                        /* 6 */{ "AbstractButton.createActionListener" },
                        /* 7 */{ "AbstractButton.createItemListener" },
                        /* 8 */{ "AbstractButton.getText" },
                        /* 9 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 10 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 11 */{ "JComponent.firePropertyChange", "model",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 12 */{ "JComponent.revalidate" },
                        /* 13 */{ "awt.Component.getParent" },
                        /* 14 */{ "awt.Component.repaint" },
                        /* 15 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 16 */{ "AbstractButton.init", null, null },
                        /* 17 */{ "JComponent.updateUI" },
                        /* 18 */{ "JComponent.getUIClassID" },
                        /* 19 */{ "AbstractButton.setUI",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 20 */{ "AbstractButton.isContentAreaFilled" },
                        /* 21 */{ "JComponent.setOpaque", "true" },
                        /* 22 */{ "JComponent.firePropertyChangeBoolean",
                                "opaque", "false", "true" },
                        /* 23 */{ "AbstractButton.getMargin" },
                        /* 24 */{ "AbstractButton.setMargin",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 25 */{ "JComponent.firePropertyChange", "margin",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 26 */{ "JComponent.revalidate" },
                        /* 27 */{ "awt.Component.getParent" },
                        /* 28 */{ "awt.Component.repaint" },
                        /* 29 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 30 */{ "awt.Component.getFont" },
                        /* 31 */{ "JComponent.setFont",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 32 */{ "awt.Component.getFont" },
                        /* 33 */{ "awt.Component.getFont" },
                        /* 34 */{ "JComponent.firePropertyChange", "font",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 35 */{ "awt.Component.getFont" },
                        /* 36 */{ "JComponent.revalidate" },
                        /* 37 */{ "awt.Component.getParent" },
                        /* 38 */{ "awt.Component.repaint" },
                        /* 39 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 40 */{ "awt.Component.getBackground" },
                        /* 41 */{ "JComponent.setBackground",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 42 */{ "awt.Component.getBackground" },
                        /* 43 */{ "JComponent.firePropertyChange",
                                "background", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 44 */{ "awt.Component.repaint" },
                        /* 45 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 46 */{ "awt.Component.getForeground" },
                        /* 47 */{ "JComponent.setForeground",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 48 */{ "awt.Component.getForeground" },
                        /* 49 */{ "JComponent.firePropertyChange",
                                "foreground", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 50 */{ "awt.Component.repaint" },
                        /* 51 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 52 */{ "JComponent.getBorder" },
                        /* 53 */{ "JComponent.setBorder",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 54 */{ "JComponent.firePropertyChange", "border",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 55 */{ "JComponent.revalidate" },
                        /* 56 */{ "awt.Component.getParent" },
                        /* 57 */{ "awt.Component.repaint" },
                        /* 58 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 59 */{ "awt.Component.addMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 60 */{ "awt.Component.addMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 61 */{ "awt.Component.addFocusListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 62 */{ "JComponent.addPropertyChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 63 */{ "AbstractButton.addChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 64 */{ "awt.Component.getMouseMotionListeners" },
                        /* 65 */{ "JComponent.getListeners" },
                        /* 66 */{ "AbstractButton.getMnemonic" },
                        /* 67 */{ "AbstractButton.getUI" },
                        /* 68 */{ "awt.Component.getLocale" },
                        /* 69 */{ "AbstractButton.getText" },
                        /* 70 */{ "JComponent.firePropertyChange", "UI", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 71 */{ "JComponent.revalidate" },
                        /* 72 */{ "awt.Component.getParent" },
                        /* 73 */{ "awt.Component.repaint" },
                        /* 74 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 75 */{ "JComponent.setAlignmentX",
                                "" + Component.LEFT_ALIGNMENT },
                        /* 76 */{ "JComponent.setAlignmentY",
                                "" + Component.CENTER_ALIGNMENT },
                        /* 77 */{ "ButtonModel.setEnabled", "true" },
                        /* 78 */{ "ButtonModel.isEnabled" },
                        /* 79 */{ "ButtonModel.fireStateChanged" }, })

                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "awt.Component.addFocusListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 2 */{ "JComponent.isManagingFocus" },
                        /* 3 */{ "JComponent.firePropertyChange", "locale",
                                null, JComponent.getDefaultLocale() },
                        /* 4 */{ "AbstractButton.setModel" },
                        /* 5 */{ "AbstractButton.getModel" },
                        /* 6 */{ "AbstractButton.createChangeListener" },
                        /* 7 */{ "AbstractButton.createActionListener" },
                        /* 8 */{ "AbstractButton.createItemListener" },
                        /* 9 */{ "AbstractButton.getText" },
                        /* 10 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 11 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 12 */{ "JComponent.firePropertyChange", "model",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 13 */{ "JComponent.revalidate" },
                        /* 14 */{ "awt.Component.getParent" },
                        /* 15 */{ "awt.Component.repaint" },
                        /* 16 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 17 */{ "AbstractButton.init", null, null },
                        /* 18 */{ "AbstractButton.setLayout",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 19 */{ "JComponent.updateUI" },
                        /* 20 */{ "JComponent.getUIClassID" },
                        /* 21 */{ "AbstractButton.setUI",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 22 */{ "AbstractButton.isContentAreaFilled" },
                        /* 23 */{ "JComponent.setOpaque", "true" },
                        /* 24 */{ "JComponent.firePropertyChangeBoolean",
                                "opaque", "false", "true" },
                        /* 25 */{ "AbstractButton.getMargin" },
                        /* 26 */{ "AbstractButton.setMargin",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 27 */{ "JComponent.firePropertyChange", "margin",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 28 */{ "JComponent.revalidate" },
                        /* 29 */{ "awt.Component.getParent" },
                        /* 30 */{ "awt.Component.repaint" },
                        /* 31 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 32 */{ "awt.Component.getFont" },
                        /* 33 */{ "JComponent.setFont",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 34 */{ "awt.Component.getFont" },
                        /* 35 */{ "awt.Component.getFont" },
                        /* 36 */{ "JComponent.firePropertyChange", "font",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 37 */{ "awt.Component.getFont" },
                        /* 38 */{ "JComponent.revalidate" },
                        /* 39 */{ "awt.Component.getParent" },
                        /* 40 */{ "awt.Component.repaint" },
                        /* 41 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 42 */{ "awt.Component.getBackground" },
                        /* 43 */{ "JComponent.setBackground",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 44 */{ "awt.Component.getBackground" },
                        /* 45 */{ "JComponent.firePropertyChange",
                                "background", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 46 */{ "awt.Component.repaint" },
                        /* 47 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 48 */{ "awt.Component.getForeground" },
                        /* 49 */{ "JComponent.setForeground",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 50 */{ "awt.Component.getForeground" },
                        /* 51 */{ "JComponent.firePropertyChange",
                                "foreground", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 52 */{ "awt.Component.repaint" },
                        /* 53 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 54 */{ "JComponent.getBorder" },
                        /* 55 */{ "JComponent.setBorder",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 56 */{ "JComponent.firePropertyChange", "border",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 57 */{ "JComponent.revalidate" },
                        /* 58 */{ "awt.Component.getParent" },
                        /* 59 */{ "awt.Component.repaint" },
                        /* 60 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 61 */{ "JComponent.firePropertyChange",
                                InstrumentedUILog.ANY_NON_NULL_VALUE, null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 62 */{ "awt.Component.addMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 63 */{ "awt.Component.addMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 64 */{ "awt.Component.addFocusListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 65 */{ "JComponent.addPropertyChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 66 */{ "AbstractButton.addChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 67 */{ "AbstractButton.getMnemonic" },
                        /* 68 */{ "AbstractButton.getUI" },
                        /* 69 */{ "AbstractButton.getText" },
                        /* 70 */{ "JComponent.firePropertyChange", "UI", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 71 */{ "JComponent.revalidate" },
                        /* 72 */{ "awt.Component.getParent" },
                        /* 73 */{ "awt.Component.repaint" },
                        /* 74 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 75 */{ "JComponent.setAlignmentX", "0.0" },
                        /* 76 */{ "JComponent.setAlignmentY", "0.5" },
                        /* 77 */{ "ButtonModel.setEnabled", "true" },
                        /* 78 */{ "ButtonModel.isEnabled" },
                        /* 79 */{ "ButtonModel.fireStateChanged" },
                        /* 80 */{ "AbstractButton.setModel" },
                        /* 81 */{ "AbstractButton.getModel" },
                        /* 82 */{ "AbstractButton.createChangeListener" },
                        /* 83 */{ "AbstractButton.createActionListener" },
                        /* 84 */{ "AbstractButton.createItemListener" },
                        /* 85 */{ "ButtonModel.addChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 86 */{ "ButtonModel.addActionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 87 */{ "ButtonModel.addItemListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 88 */{ "ButtonModel.getMnemonic" },
                        /* 89 */{ "AbstractButton.getText" },
                        /* 90 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 91 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 92 */{ "JComponent.firePropertyChange", "model",
                                InstrumentedUILog.ANY_NON_NULL_VALUE,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 93 */{ "JComponent.revalidate" },
                        /* 94 */{ "awt.Component.getParent" },
                        /* 95 */{ "awt.Component.repaint" },
                        /* 96 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                //Linux 1.5
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "JComponent.isManagingFocus" },
                        /* 2 */{ "JComponent.firePropertyChange", "locale",
                                null, JButton.getDefaultLocale() },
                        /* 3 */{ "AbstractButton.setModel" },
                        /* 4 */{ "AbstractButton.getModel" },
                        /* 5 */{ "AbstractButton.createChangeListener" },
                        /* 6 */{ "AbstractButton.createActionListener" },
                        /* 7 */{ "AbstractButton.createItemListener" },
                        /* 8 */{ "AbstractButton.getText" },
                        /* 9 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 10 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 11 */{ "JComponent.firePropertyChange", "model",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 12 */{ "JComponent.revalidate" },
                        /* 13 */{ "awt.Component.getParent" },
                        /* 14 */{ "awt.Component.repaint" },
                        /* 15 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 16 */{ "AbstractButton.init", null, null },
                        /* 17 */{ "JComponent.updateUI" },
                        /* 18 */{ "JComponent.getUIClassID" },
                        /* 19 */{ "AbstractButton.setUI",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 20 */{ "AbstractButton.isContentAreaFilled" },
                        /* 21 */{ "JComponent.setOpaque", "true" },
                        /* 22 */{ "JComponent.firePropertyChangeBoolean",
                                "opaque", "false", "true" },
                        /* 23 */{ "AbstractButton.getMargin" },
                        /* 24 */{ "AbstractButton.setMargin",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 25 */{ "JComponent.firePropertyChange", "margin",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 26 */{ "JComponent.revalidate" },
                        /* 27 */{ "awt.Component.getParent" },
                        /* 28 */{ "awt.Component.repaint" },
                        /* 29 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 30 */{ "awt.Component.getFont" },
                        /* 31 */{ "JComponent.setFont",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 32 */{ "awt.Component.getFont" },
                        /* 33 */{ "awt.Component.getFont" },
                        /* 34 */{ "JComponent.firePropertyChange", "font",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 35 */{ "awt.Component.getFont" },
                        /* 36 */{ "JComponent.revalidate" },
                        /* 37 */{ "awt.Component.getParent" },
                        /* 38 */{ "awt.Component.repaint" },
                        /* 39 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 40 */{ "awt.Component.getBackground" },
                        /* 41 */{ "JComponent.setBackground",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 42 */{ "awt.Component.getBackground" },
                        /* 43 */{ "JComponent.firePropertyChange",
                                "background", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 44 */{ "awt.Component.repaint" },
                        /* 45 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 46 */{ "awt.Component.getForeground" },
                        /* 47 */{ "JComponent.setForeground",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 48 */{ "awt.Component.getForeground" },
                        /* 49 */{ "JComponent.firePropertyChange",
                                "foreground", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 50 */{ "awt.Component.repaint" },
                        /* 51 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 52 */{ "JComponent.getBorder" },
                        /* 53 */{ "JComponent.setBorder",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 54 */{ "JComponent.firePropertyChange", "border",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 55 */{ "JComponent.revalidate" },
                        /* 56 */{ "awt.Component.getParent" },
                        /* 57 */{ "awt.Component.repaint" },
                        /* 58 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 59 */{ "awt.Component.addMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 60 */{ "awt.Component.addMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 61 */{ "awt.Component.addFocusListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 62 */{ "JComponent.addPropertyChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 63 */{ "AbstractButton.addChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 64 */{ "awt.Component.getMouseMotionListeners" },
                        /* 65 */{ "JComponent.getListeners" },
                        /* 66 */{ "AbstractButton.getMnemonic" },
                        /* 67 */{ "AbstractButton.getUI" },
                        /* 68 */{ "awt.Component.getLocale" },
                        /* 69 */{ "AbstractButton.getText" },
                        /* 70 */{ "JComponent.firePropertyChange", "UI", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 71 */{ "JComponent.revalidate" },
                        /* 72 */{ "awt.Component.getParent" },
                        /* 73 */{ "awt.Component.repaint" },
                        /* 74 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 75 */{ "JComponent.setAlignmentX", "0.0" },
                        /* 76 */{ "JComponent.setAlignmentY", "0.5" },
                        /* 77 */{ "ButtonModel.setEnabled", "true" },
                        /* 78 */{ "ButtonModel.isEnabled" },
                        /* 79 */{ "ButtonModel.fireStateChanged" },
                        /* 80 */{ "AbstractButton.setModel" },
                        /* 81 */{ "AbstractButton.getModel" },
                        /* 82 */{ "AbstractButton.createChangeListener" },
                        /* 83 */{ "AbstractButton.createActionListener" },
                        /* 84 */{ "AbstractButton.createItemListener" },
                        /* 85 */{ "ButtonModel.addChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 86 */{ "ButtonModel.addActionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 87 */{ "ButtonModel.addItemListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 88 */{ "ButtonModel.getMnemonic" },
                        /* 89 */{ "AbstractButton.getText" },
                        /* 90 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 91 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 92 */{ "JComponent.firePropertyChange", "model",
                                InstrumentedUILog.ANY_NON_NULL_VALUE,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 93 */{ "JComponent.revalidate" },
                        /* 94 */{ "awt.Component.getParent" },
                        /* 95 */{ "awt.Component.repaint" },
                        /* 96 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                //
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "awt.Component.isVisible" },
                        /* 2 */{ "awt.Component.setLocale",
                                JComponent.getDefaultLocale() },
                        /* 3 */{ "JComponent.firePropertyChange", "locale",
                                null, JComponent.getDefaultLocale() },
                        /* 4 */{ "AbstractButton.createChangeListener" },
                        /* 5 */{ "AbstractButton.createActionListener" },
                        /* 6 */{ "AbstractButton.createItemListener" },
                        /* 7 */{ "AbstractButton.setModel" },
                        /* 8 */{ "JComponent.firePropertyChange", "model",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 9 */{ "JComponent.updateUI" },
                        /* 10 */{ "JComponent.getUIClassID" },
                        /* 11 */{ "AbstractButton.setUI",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 12 */{ "AbstractButton.getUI" },
                        /* 13 */{ "JComponent.getBorder" },
                        /* 14 */{ "JComponent.setBorder", null },
                        /* 15 */{ "AbstractButton.getChangeListeners" },
                        /* 16 */{ "AbstractButton.getChangeListeners" },
                        /* 17 */{ "awt.Component.getForeground" },
                        /* 18 */{ "JComponent.setForeground",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 19 */{ "JComponent.firePropertyChange",
                                "foreground", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 20 */{ "awt.Component.repaint" },
                        /* 21 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 22 */{ "JComponent.getVisibleRect" },
                        /* 23 */{ "JComponent.getWidth" },
                        /* 24 */{ "JComponent.getHeight" },
                        /* 25 */{ "awt.Component.getParent" },
                        /* 26 */{ "awt.Component.getBackground" },
                        /* 27 */{ "JComponent.setBackground",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 28 */{ "JComponent.firePropertyChange",
                                "background", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 29 */{ "awt.Component.repaint" },
                        /* 30 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 31 */{ "JComponent.getVisibleRect" },
                        /* 32 */{ "JComponent.getWidth" },
                        /* 33 */{ "JComponent.getHeight" },
                        /* 34 */{ "awt.Component.getParent" },
                        /* 35 */{ "awt.Component.getFont" },
                        /* 36 */{ "JComponent.setFont",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 37 */{ "JComponent.firePropertyChange", "font",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 38 */{ "awt.Container.invalidate" },
                        /* 39 */{ "awt.Component.getParent" },
                        /* 40 */{ "awt.Component.isShowing" },
                        /* 41 */{ "awt.Component.isVisible" },
                        /* 42 */{ "awt.Component.isDisplayable" },
                        /* 43 */{ "JComponent.getBorder" },
                        /* 44 */{ "JComponent.setBorder",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 45 */{ "JComponent.firePropertyChange", "border",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 46 */{ "JComponent.revalidate" },
                        /* 47 */{ "awt.Container.invalidate" },
                        /* 48 */{ "awt.Component.getParent" },
                        /* 49 */{ "JComponent.isValidateRoot" },
                        /* 50 */{ "awt.Component.getParent" },
                        /* 51 */{ "awt.Component.isValid" },
                        /* 52 */{ "awt.Component.isShowing" },
                        /* 53 */{ "awt.Component.isVisible" },
                        /* 54 */{ "awt.Component.isDisplayable" },
                        /* 55 */{ "awt.Component.repaint" },
                        /* 56 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 57 */{ "JComponent.getVisibleRect" },
                        /* 58 */{ "JComponent.getWidth" },
                        /* 59 */{ "JComponent.getHeight" },
                        /* 60 */{ "awt.Component.getParent" },
                        /* 61 */{ "AbstractButton.setMargin",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 62 */{ "JComponent.firePropertyChange", "margin",
                                null, InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 63 */{ "JComponent.setAlignmentX", "0.0" },
                        /* 64 */{ "JComponent.addPropertyChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 65 */{ "AbstractButton.addChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 66 */{ "awt.Component.addMouseListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 67 */{ "awt.Component.addMouseMotionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 68 */{ "awt.Component.addFocusListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 69 */{ "AbstractButton.getChangeListeners" },
                        /* 70 */{ "AbstractButton.getUI" },
                        /* 71 */{ "JComponent.revalidate" },
                        /* 72 */{ "awt.Container.invalidate" },
                        /* 73 */{ "awt.Component.getParent" },
                        /* 74 */{ "JComponent.isValidateRoot" },
                        /* 75 */{ "awt.Component.getParent" },
                        /* 76 */{ "awt.Component.isValid" },
                        /* 77 */{ "awt.Component.isShowing" },
                        /* 78 */{ "awt.Component.isVisible" },
                        /* 79 */{ "awt.Component.isDisplayable" },
                        /* 80 */{ "awt.Component.repaint" },
                        /* 81 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 82 */{ "JComponent.getVisibleRect" },
                        /* 83 */{ "JComponent.getWidth" },
                        /* 84 */{ "JComponent.getHeight" },
                        /* 85 */{ "awt.Component.getParent" },
                        /* 86 */{ "JComponent.firePropertyChange", "UI", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 87 */{ "JComponent.revalidate" },
                        /* 88 */{ "awt.Container.invalidate" },
                        /* 89 */{ "awt.Component.getParent" },
                        /* 90 */{ "JComponent.isValidateRoot" },
                        /* 91 */{ "awt.Component.getParent" },
                        /* 92 */{ "awt.Component.isValid" },
                        /* 93 */{ "awt.Component.isShowing" },
                        /* 94 */{ "awt.Component.isVisible" },
                        /* 95 */{ "awt.Component.isDisplayable" },
                        /* 96 */{ "awt.Component.repaint" },
                        /* 97 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 98 */{ "JComponent.getVisibleRect" },
                        /* 99 */{ "JComponent.getWidth" },
                        /* 100 */{ "JComponent.getHeight" },
                        /* 101 */{ "awt.Component.getParent" },
                        /* 102 */{ "AbstractButton.setModel" },
                        /* 103 */{ "ButtonModel.addChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 104 */{ "ButtonModel.addItemListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 105 */{ "ButtonModel.addActionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 106 */{ "JComponent.firePropertyChange", "model",
                                InstrumentedUILog.ANY_NON_NULL_VALUE,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 107 */{ "ButtonModel.equals",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 108 */{ "JComponent.revalidate" },
                        /* 109 */{ "awt.Container.invalidate" },
                        /* 110 */{ "awt.Component.getParent" },
                        /* 111 */{ "JComponent.isValidateRoot" },
                        /* 112 */{ "awt.Component.getParent" },
                        /* 113 */{ "awt.Component.isValid" },
                        /* 114 */{ "awt.Component.isShowing" },
                        /* 115 */{ "awt.Component.isVisible" },
                        /* 116 */{ "awt.Component.isDisplayable" },
                        /* 117 */{ "awt.Component.repaint" },
                        /* 118 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 119 */{ "JComponent.getVisibleRect" },
                        /* 120 */{ "JComponent.getWidth" },
                        /* 121 */{ "JComponent.getHeight" },
                        /* 122 */{ "awt.Component.getParent" },
                        /* 123 */{ "ButtonModel.getMnemonic" }, })

        ) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected new JButton() to call another sequence of events");
        }

        return passed();
    }

    public Result testContentAreaFilled() {
        AbstractButton iab = getInstrumentedAbstractButton();
        InstrumentedUILog.clear();
        if (!iab.isContentAreaFilled()) {
            return failed("expected isContentAreaFilled() to return true by default");
        }

        Util.waitQueueEventsProcess();

        if (!InstrumentedUILog.equals(new Object[][] {
        /* 1 */{ "AbstractButton.isContentAreaFilled" }, })) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected AbstractButton.isContentAreaFilled not to call any additional methods");
        }

        InstrumentedUILog.clear();
        iab.setContentAreaFilled(false);
        Util.waitQueueEventsProcess();
        if (!InstrumentedUILog.equals(new Object[][] {
                /* 1 */{ "AbstractButton.setContentAreaFilled", "false" },
                /* 2 */{ "JComponent.firePropertyChangeBoolean",
                        "contentAreaFilled", "true", "false" },
                /* 3 */{ "AbstractButton.isContentAreaFilled" },
                /* 4 */{ "JComponent.setOpaque", "false" },
                /* 5 */{ "JComponent.firePropertyChangeBoolean", "opaque",
                        "true", "false" },
                /* 6 */{ "awt.Component.repaint" },
                /* 7 */{ "JComponent.repaint", "0 0 0 0 0" }, })

                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setContentAreaFilled",
                                "false" },
                        /* 2 */{ "JComponent.setOpaque", "false" },
                        /* 3 */{ "awt.Component.repaint" },
                        /* 4 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 5 */{ "JComponent.getVisibleRect" },
                        /* 6 */{ "JComponent.getWidth" },
                        /* 7 */{ "JComponent.getHeight" },
                        /* 8 */{ "awt.Component.getParent" },
                        /* 9 */{ "JComponent.firePropertyChangeBoolean",
                                "opaque", "true", "false" },
                        /* 10 */{ "JComponent.firePropertyChange", "opaque",
                                Boolean.TRUE, Boolean.FALSE },
                        /* 11 */{ "JComponent.revalidate" },
                        /* 12 */{ "awt.Container.invalidate" },
                        /* 13 */{ "awt.Component.getParent" },
                        /* 14 */{ "JComponent.isValidateRoot" },
                        /* 15 */{ "awt.Component.getParent" },
                        /* 16 */{ "awt.Component.isValid" },
                        /* 17 */{ "awt.Component.isShowing" },
                        /* 18 */{ "awt.Component.isVisible" },
                        /* 19 */{ "awt.Component.isDisplayable" },
                        /* 20 */{ "awt.Component.repaint" },
                        /* 21 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 22 */{ "JComponent.getVisibleRect" },
                        /* 23 */{ "JComponent.getWidth" },
                        /* 24 */{ "JComponent.getHeight" },
                        /* 25 */{ "awt.Component.getParent" },
                        /* 26 */{ "JComponent.firePropertyChangeBoolean",
                                "contentAreaFilled", "true", "false" },
                        /* 27 */{ "JComponent.firePropertyChange",
                                "contentAreaFilled", Boolean.TRUE,
                                Boolean.FALSE },
                        /* 28 */{ "JComponent.revalidate" },
                        /* 29 */{ "awt.Container.invalidate" },
                        /* 30 */{ "awt.Component.getParent" },
                        /* 31 */{ "JComponent.isValidateRoot" },
                        /* 32 */{ "awt.Component.getParent" },
                        /* 33 */{ "awt.Component.isValid" },
                        /* 34 */{ "awt.Component.isShowing" },
                        /* 35 */{ "awt.Component.isVisible" },
                        /* 36 */{ "awt.Component.isDisplayable" },
                        /* 37 */{ "awt.Component.repaint" },
                        /* 38 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 39 */{ "JComponent.getVisibleRect" },
                        /* 40 */{ "JComponent.getWidth" },
                        /* 41 */{ "JComponent.getHeight" },
                        /* 42 */{ "awt.Component.getParent" }, })

        ) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected AbstractButton.setContentAreaFilled(false) to call another sequence of events");
        }
        InstrumentedUILog.clear();
        iab.setContentAreaFilled(false);
        Util.waitQueueEventsProcess();
        if (!InstrumentedUILog.equals(new Object[][] {
                /* 1 */{ "AbstractButton.setContentAreaFilled", "false" },
                /* 2 */{ "JComponent.firePropertyChangeBoolean",
                        "contentAreaFilled", "false", "false" }, })
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setContentAreaFilled",
                                "false" },
                        /* 2 */{ "JComponent.setOpaque", "false" },
                        /* 3 */{ "JComponent.firePropertyChangeBoolean",
                                "contentAreaFilled", "false", "false" },
                        /* 4 */{ "JComponent.firePropertyChange",
                                "contentAreaFilled", Boolean.FALSE,
                                Boolean.FALSE },

                })) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected second AbstractButton.setContentAreaFilled(false) to call another sequence of events");
        }

        return passed();

    }

    public Result testCreateActionPropertyChangeListener() {
        return super.testCreateActionPropertyChangeListener();
    }

    public Result testCreateChangeListener() {
        return super.testCreateChangeListener();
    }

    public Result testDisplayedMnemonicIndex() {
        return super.testDisplayedMnemonicIndex();
    }

    public Result testEnabled() {
        return super.testEnabled();
    }

    public Result testFocusPainted() {
        return super.testFocusPainted();
    }

    public Result testHorizontalAlignment() {
        return super.testHorizontalAlignment();
    }

    public Result testHorizontalTextPosition() {
        return super.testHorizontalTextPosition();
    }

    public Result testIcon() {
        return super.testIcon();
    }

    public Result testIconTextGap() {
        return super.testIconTextGap();
    }

    public Result testMnemonic() {
        AbstractButton iab = getInstrumentedAbstractButton();
        InstrumentedUILog.clear();

        if (iab.getMnemonic() != 0) {
            return failed("extected getMnemonic() to return 0 by default");
        }

        if (!InstrumentedUILog
                .equals(new Object[][] { { "AbstractButton.getMnemonic" } })) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected getMnemonic() not to call any more methods");
        }

        InstrumentedUILog.clear();

        iab.setMnemonic(java.awt.event.KeyEvent.VK_F);

        Util.waitQueueEventsProcess();
        if (!InstrumentedUILog.equals(new Object[][] {
                /* 1 */{ "AbstractButton.setMnemonic",
                        "" + java.awt.event.KeyEvent.VK_F },
                /* 2 */{ "AbstractButton.getMnemonic" },
                /* 3 */{ "ButtonModel.setMnemonic",
                        "" + java.awt.event.KeyEvent.VK_F },
                /* 4 */{ "ButtonModel.fireStateChanged" },
                /* 5 */{ "ButtonModel.getMnemonic" },
                /* 6 */{ "JComponent.firePropertyChangeInt", "mnemonic", "0",
                        "" + java.awt.event.KeyEvent.VK_F },
                /* 7 */{ "AbstractButton.getMnemonic" },
                /* 8 */{ "awt.Component.getParent" },
                /* 9 */{ "JComponent.firePropertyChange",
                        "_WhenInFocusedWindow", null,
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 10 */{ "awt.Component.getParent" },
                /* 11 */{ "awt.Component.getParent" },
                /* 12 */{ "awt.Component.getParent" },
                /* 13 */{ "awt.Component.getParent" },
                /* 14 */{ "awt.Component.getParent" },
                /* 15 */{ "AbstractButton.getText" },
                /* 16 */{ "AbstractButton.setDisplayedMnemonicIndex", "-1" },
                /* 17 */{ "JComponent.firePropertyChangeInt",
                        "displayedMnemonicIndex", "-1", "-1" },
                /* 18 */{ "JComponent.revalidate" },
                /* 19 */{ "awt.Component.getParent" },
                /* 20 */{ "awt.Component.repaint" },
                /* 21 */{ "JComponent.repaint", "0 0 0 0 0" }, })

                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setMnemonic",
                                "" + java.awt.event.KeyEvent.VK_F },
                        /* 2 */{ "AbstractButton.getMnemonic" },
                        /* 3 */{ "ButtonModel.setMnemonic",
                                "" + java.awt.event.KeyEvent.VK_F },
                        /* 4 */{ "ButtonModel.fireStateChanged" },
                        /* 5 */{ "ButtonModel.getMnemonic" },
                        /* 6 */{ "JComponent.firePropertyChangeInt",
                                "mnemonic", "0",
                                "" + java.awt.event.KeyEvent.VK_F },
                        /* 7 */{ "AbstractButton.getMnemonic" },
                        /* 8 */{ "awt.Component.getParent" },
                        /* 9 */{ "JComponent.firePropertyChange",
                                "_WhenInFocusedWindow", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 10 */{ "awt.Component.getParent" },
                        /* 11 */{ "awt.Component.getParent" },
                        /* 12 */{ "awt.Component.getParent" },
                        /* 13 */{ "awt.Component.getParent" },
                        /* 14 */{ "awt.Component.getParent" },
                        /* 15 */{ "AbstractButton.getText" },
                        /* 16 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 17 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 18 */{ "JComponent.revalidate" },
                        /* 19 */{ "awt.Component.getParent" },
                        /* 20 */{ "awt.Component.repaint" },
                        /* 21 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 22 */{ "AbstractButton.fireStateChanged" },
                        /* 23 */{ "awt.Component.repaint" },
                        /* 24 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 25 */{ "awt.Component.repaint" },
                        /* 26 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 27 */{ "ButtonModel.getMnemonic" }, })
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setMnemonic",
                                "" + java.awt.event.KeyEvent.VK_F },
                        /* 2 */{ "ButtonModel.setMnemonic",
                                "" + java.awt.event.KeyEvent.VK_F },
                        /* 3 */{ "ButtonModel.fireStateChanged" },
                        /* 4 */{ "ButtonModel.getChangeListeners" },
                        /* 5 */{ "ButtonModel.getMnemonic" },
                        /* 6 */{ "JComponent.firePropertyChangeInt",
                                "mnemonic", "0",
                                "" + java.awt.event.KeyEvent.VK_F },
                        /* 7 */{ "JComponent.firePropertyChange", "mnemonic",
                                new Integer(0),
                                new Integer(java.awt.event.KeyEvent.VK_F) },
                        /* 8 */{ "JComponent.revalidate" },
                        /* 9 */{ "awt.Container.invalidate" },
                        /* 10 */{ "awt.Component.getParent" },
                        /* 11 */{ "JComponent.isValidateRoot" },
                        /* 12 */{ "awt.Component.getParent" },
                        /* 13 */{ "awt.Component.isValid" },
                        /* 14 */{ "awt.Component.isShowing" },
                        /* 15 */{ "awt.Component.isVisible" },
                        /* 16 */{ "awt.Component.isDisplayable" },
                        /* 17 */{ "awt.Component.repaint" },
                        /* 18 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 19 */{ "JComponent.getVisibleRect" },
                        /* 20 */{ "JComponent.getWidth" },
                        /* 21 */{ "JComponent.getHeight" },
                        /* 22 */{ "awt.Component.getParent" },
                        /* 23 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 24 */{ "AbstractButton.getText" },
                        /* 25 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 26 */{ "JComponent.firePropertyChange",
                                "displayedMnemonicIndex", new Integer(-1),
                                new Integer(-1) },
                        /* 27 */{ "AbstractButton.fireStateChanged" },
                        /* 28 */{ "AbstractButton.getChangeListeners" },
                        /* 29 */{ "JComponent.revalidate" },
                        /* 30 */{ "awt.Container.invalidate" },
                        /* 31 */{ "awt.Component.getParent" },
                        /* 32 */{ "JComponent.isValidateRoot" },
                        /* 33 */{ "awt.Component.getParent" },
                        /* 34 */{ "awt.Component.isValid" },
                        /* 35 */{ "awt.Component.isShowing" },
                        /* 36 */{ "awt.Component.isVisible" },
                        /* 37 */{ "awt.Component.isDisplayable" },
                        /* 38 */{ "awt.Component.repaint" },
                        /* 39 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 40 */{ "JComponent.getVisibleRect" },
                        /* 41 */{ "JComponent.getWidth" },
                        /* 42 */{ "JComponent.getHeight" },
                        /* 43 */{ "awt.Component.getParent" }, })

        ) {

            InstrumentedUILog.printLogAsArray();
            return failed("expected setMnemonic(java.awt.event.KeyEvent.VK_F) to call another sequence of methods");
        }

        InstrumentedUILog.clear();
        iab.setText("Open External File...");
        Util.waitQueueEventsProcess();
        if (!InstrumentedUILog.equals(new Object[][] {
                /* 1 */{ "AbstractButton.setText", "Open External File..." },
                /* 2 */{ "JComponent.firePropertyChange", "text", "",
                        "Open External File..." },
                /* 3 */{ "AbstractButton.getText" },
                /* 4 */{ "AbstractButton.getMnemonic" },
                /* 5 */{ "AbstractButton.setDisplayedMnemonicIndex", "14" },
                /* 6 */{ "AbstractButton.getText" },
                /* 7 */{ "JComponent.firePropertyChangeInt",
                        "displayedMnemonicIndex", "-1", "14" },
                /* 8 */{ "JComponent.revalidate" },
                /* 9 */{ "awt.Component.getParent" },
                /* 10 */{ "awt.Component.repaint" },
                /* 11 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 12 */{ "JComponent.revalidate" },
                /* 13 */{ "awt.Component.getParent" },
                /* 14 */{ "awt.Component.repaint" },
                /* 15 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setText",
                                "Open External File..." },
                        /* 2 */{ "JComponent.firePropertyChange", "text", "",
                                "Open External File..." },
                        /* 3 */{ "JComponent.revalidate" },
                        /* 4 */{ "awt.Container.invalidate" },
                        /* 5 */{ "awt.Component.getParent" },
                        /* 6 */{ "JComponent.isValidateRoot" },
                        /* 7 */{ "awt.Component.getParent" },
                        /* 8 */{ "awt.Component.isValid" },
                        /* 9 */{ "awt.Component.isShowing" },
                        /* 10 */{ "awt.Component.isVisible" },
                        /* 11 */{ "awt.Component.isDisplayable" },
                        /* 12 */{ "awt.Component.repaint" },
                        /* 13 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 14 */{ "JComponent.getVisibleRect" },
                        /* 15 */{ "JComponent.getWidth" },
                        /* 16 */{ "JComponent.getHeight" },
                        /* 17 */{ "awt.Component.getParent" },
                        /* 18 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "14" },
                        /* 19 */{ "AbstractButton.getText" },
                        /* 20 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "14" },
                        /* 21 */{ "JComponent.firePropertyChange",
                                "displayedMnemonicIndex", new Integer(-1),
                                new Integer(14) },
                        /* 22 */{ "JComponent.revalidate" },
                        /* 23 */{ "awt.Container.invalidate" },
                        /* 24 */{ "awt.Component.getParent" },
                        /* 25 */{ "JComponent.isValidateRoot" },
                        /* 26 */{ "awt.Component.getParent" },
                        /* 27 */{ "awt.Component.isValid" },
                        /* 28 */{ "awt.Component.isShowing" },
                        /* 29 */{ "awt.Component.isVisible" },
                        /* 30 */{ "awt.Component.isDisplayable" },
                        /* 31 */{ "awt.Component.repaint" },
                        /* 32 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 33 */{ "JComponent.getVisibleRect" },
                        /* 34 */{ "JComponent.getWidth" },
                        /* 35 */{ "JComponent.getHeight" },
                        /* 36 */{ "awt.Component.getParent" }, })) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected setText(<string>) with string that contains mnemonic key "
                    + "to fire another sequence of events");
        }
        InstrumentedUILog.clear();

        iab.setMnemonic(java.awt.event.KeyEvent.VK_E);
        Util.waitQueueEventsProcess();
        if (!InstrumentedUILog.equals(new Object[][] {
                /* 1 */{ "AbstractButton.setMnemonic",
                        "" + java.awt.event.KeyEvent.VK_E },
                /* 2 */{ "AbstractButton.getMnemonic" },
                /* 3 */{ "ButtonModel.setMnemonic",
                        "" + java.awt.event.KeyEvent.VK_E },
                /* 4 */{ "ButtonModel.fireStateChanged" },
                /* 5 */{ "ButtonModel.getMnemonic" },
                /* 6 */{ "JComponent.firePropertyChangeInt", "mnemonic",
                        "" + java.awt.event.KeyEvent.VK_F,
                        "" + java.awt.event.KeyEvent.VK_E },
                /* 7 */{ "AbstractButton.getMnemonic" },
                /* 8 */{ "JComponent.firePropertyChange",
                        "_WhenInFocusedWindow",
                        InstrumentedUILog.ANY_NON_NULL_VALUE, null },
                /* 9 */{ "awt.Component.getParent" },
                /* 10 */{ "JComponent.firePropertyChange",
                        "_WhenInFocusedWindow", null,
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 11 */{ "awt.Component.getParent" },
                /* 12 */{ "awt.Component.getParent" },
                /* 13 */{ "awt.Component.getParent" },
                /* 14 */{ "awt.Component.getParent" },
                /* 15 */{ "awt.Component.getParent" },
                /* 16 */{ "AbstractButton.getText" },
                /* 17 */{ "AbstractButton.setDisplayedMnemonicIndex", "2" },
                /* 18 */{ "AbstractButton.getText" },
                /* 19 */{ "JComponent.firePropertyChangeInt",
                        "displayedMnemonicIndex", "14", "2" },
                /* 20 */{ "JComponent.revalidate" },
                /* 21 */{ "awt.Component.getParent" },
                /* 22 */{ "awt.Component.repaint" },
                /* 23 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 24 */{ "JComponent.revalidate" },
                /* 25 */{ "awt.Component.getParent" },
                /* 26 */{ "awt.Component.repaint" },
                /* 27 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setMnemonic",
                                "" + java.awt.event.KeyEvent.VK_E },
                        /* 2 */{ "AbstractButton.getMnemonic" },
                        /* 3 */{ "ButtonModel.setMnemonic",
                                "" + java.awt.event.KeyEvent.VK_E },
                        /* 4 */{ "ButtonModel.fireStateChanged" },
                        /* 5 */{ "ButtonModel.getMnemonic" },
                        /* 6 */{ "JComponent.firePropertyChangeInt",
                                "mnemonic", "" + java.awt.event.KeyEvent.VK_F,
                                "" + java.awt.event.KeyEvent.VK_E },
                        /* 7 */{ "AbstractButton.getMnemonic" },
                        /* 8 */{ "JComponent.firePropertyChange",
                                "_WhenInFocusedWindow",
                                InstrumentedUILog.ANY_NON_NULL_VALUE, null },
                        /* 9 */{ "awt.Component.getParent" },
                        /* 10 */{ "JComponent.firePropertyChange",
                                "_WhenInFocusedWindow", null,
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 11 */{ "awt.Component.getParent" },
                        /* 12 */{ "awt.Component.getParent" },
                        /* 13 */{ "awt.Component.getParent" },
                        /* 14 */{ "awt.Component.getParent" },
                        /* 15 */{ "awt.Component.getParent" },
                        /* 16 */{ "AbstractButton.getText" },
                        /* 17 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "2" },
                        /* 18 */{ "AbstractButton.getText" },
                        /* 19 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "14", "2" },
                        /* 20 */{ "JComponent.revalidate" },
                        /* 21 */{ "awt.Component.getParent" },
                        /* 22 */{ "awt.Component.repaint" },
                        /* 23 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 24 */{ "JComponent.revalidate" },
                        /* 25 */{ "awt.Component.getParent" },
                        /* 26 */{ "awt.Component.repaint" },
                        /* 27 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 28 */{ "AbstractButton.fireStateChanged" },
                        /* 29 */{ "awt.Component.repaint" },
                        /* 30 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 31 */{ "awt.Component.repaint" },
                        /* 32 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 33 */{ "ButtonModel.getMnemonic" }, })
                //
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setMnemonic",
                                "" + java.awt.event.KeyEvent.VK_E },
                        /* 2 */{ "ButtonModel.setMnemonic",
                                "" + java.awt.event.KeyEvent.VK_E },
                        /* 3 */{ "ButtonModel.fireStateChanged" },
                        /* 4 */{ "ButtonModel.getChangeListeners" },
                        /* 5 */{ "ButtonModel.getMnemonic" },
                        /* 6 */{ "JComponent.firePropertyChangeInt",
                                "mnemonic", "" + java.awt.event.KeyEvent.VK_F,
                                "" + java.awt.event.KeyEvent.VK_E },
                        /* 7 */{ "JComponent.firePropertyChange", "mnemonic",
                                new Integer(java.awt.event.KeyEvent.VK_F),
                                new Integer(java.awt.event.KeyEvent.VK_E) },
                        /* 8 */{ "JComponent.revalidate" },
                        /* 9 */{ "awt.Container.invalidate" },
                        /* 10 */{ "awt.Component.getParent" },
                        /* 11 */{ "JComponent.isValidateRoot" },
                        /* 12 */{ "awt.Component.getParent" },
                        /* 13 */{ "awt.Component.isValid" },
                        /* 14 */{ "awt.Component.isShowing" },
                        /* 15 */{ "awt.Component.isVisible" },
                        /* 16 */{ "awt.Component.isDisplayable" },
                        /* 17 */{ "awt.Component.repaint" },
                        /* 18 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 19 */{ "JComponent.getVisibleRect" },
                        /* 20 */{ "JComponent.getWidth" },
                        /* 21 */{ "JComponent.getHeight" },
                        /* 22 */{ "awt.Component.getParent" },
                        /* 23 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "2" },
                        /* 24 */{ "AbstractButton.getText" },
                        /* 25 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "14", "2" },
                        /* 26 */{ "JComponent.firePropertyChange",
                                "displayedMnemonicIndex", new Integer(14),
                                new Integer(2) },
                        /* 27 */{ "JComponent.revalidate" },
                        /* 28 */{ "awt.Container.invalidate" },
                        /* 29 */{ "awt.Component.getParent" },
                        /* 30 */{ "JComponent.isValidateRoot" },
                        /* 31 */{ "awt.Component.getParent" },
                        /* 32 */{ "awt.Component.isValid" },
                        /* 33 */{ "awt.Component.isShowing" },
                        /* 34 */{ "awt.Component.isVisible" },
                        /* 35 */{ "awt.Component.isDisplayable" },
                        /* 36 */{ "awt.Component.repaint" },
                        /* 37 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 38 */{ "JComponent.getVisibleRect" },
                        /* 39 */{ "JComponent.getWidth" },
                        /* 40 */{ "JComponent.getHeight" },
                        /* 41 */{ "awt.Component.getParent" },
                        /* 42 */{ "AbstractButton.fireStateChanged" },
                        /* 43 */{ "AbstractButton.getChangeListeners" },
                        /* 44 */{ "JComponent.revalidate" },
                        /* 45 */{ "awt.Container.invalidate" },
                        /* 46 */{ "awt.Component.getParent" },
                        /* 47 */{ "JComponent.isValidateRoot" },
                        /* 48 */{ "awt.Component.getParent" },
                        /* 49 */{ "awt.Component.isValid" },
                        /* 50 */{ "awt.Component.isShowing" },
                        /* 51 */{ "awt.Component.isVisible" },
                        /* 52 */{ "awt.Component.isDisplayable" },
                        /* 53 */{ "awt.Component.repaint" },
                        /* 54 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 55 */{ "JComponent.getVisibleRect" },
                        /* 56 */{ "JComponent.getWidth" },
                        /* 57 */{ "JComponent.getHeight" },
                        /* 58 */{ "awt.Component.getParent" },

                })) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected setMnemonic(int) with char that exists in button text"
                    + " to fire another sequence of events");
        }

        if (iab.getMnemonic() != java.awt.event.KeyEvent.VK_E) {
            return failed("expected getMnemonic to return what was set by setMnemonic()");
        }
        return passed();
    }

    public Result testModel() {
        AbstractButton ab = getInstrumentedAbstractButton();
        InstrumentedUILog.clear();

        ButtonModel bm1 = ab.getModel();

        Util.waitQueueEventsProcess();

        if (!InstrumentedUILog
                .equals(new Object[][] { { "AbstractButton.getModel" } })) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected getModel() not to call any additional methods");
        }

        ButtonModel bm2 = new InstrumentedButtonModel();
        InstrumentedUILog.clear();

        ab.setModel(bm2);
        Util.waitQueueEventsProcess();

        if (!InstrumentedUILog
                .equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setModel" },
                        /* 2 */{ "AbstractButton.getModel" },
                        /* 3 */{ "ButtonModel.removeChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 4 */{ "ButtonModel.removeActionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 5 */{ "AbstractButton.createChangeListener" },
                        /* 6 */{ "AbstractButton.createActionListener" },
                        /* 7 */{ "AbstractButton.createItemListener" },
                        /* 8 */{ "ButtonModel.addChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 9 */{ "ButtonModel.addActionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 10 */{ "ButtonModel.addItemListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 11 */{ "ButtonModel.getMnemonic" },
                        /* 12 */{ "AbstractButton.getText" },
                        /* 13 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 14 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 15 */{ "JComponent.firePropertyChange", "model",
                                bm1, bm2 },
                        /* 16 */{ "ButtonModel.equals", bm2 },
                        /* 17 */{ "JComponent.revalidate" },
                        /* 18 */{ "awt.Component.getParent" },
                        /* 19 */{ "awt.Component.repaint" },
                        /* 20 */{ "JComponent.repaint", "0 0 0 0 0" }, })

                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setModel" },
                        /* 2 */{ "AbstractButton.getModel" },
                        { "ButtonModel.removeActionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        { "ButtonModel.removeItemListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        { "ButtonModel.removeChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 8 */{ "ButtonModel.addChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        { "ButtonModel.addItemListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 9 */{ "ButtonModel.addActionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        { "JComponent.firePropertyChange", "model", bm1, bm2 },
                        /* 16 */{ "ButtonModel.equals", bm2 },
                        { "awt.Container.invalidate" },
                        /* 18 */{ "awt.Component.getParent" },
                        /* 19 */{ "awt.Component.repaint" },

                        { "JComponent.repaint", "0 0 0 0 0" },
                        { "JComponent.repaint", "0 0 0 0 0" },

                        /* 11 */{ "ButtonModel.getMnemonic" },
                        /* 17 */

                        /* 12 */{ "AbstractButton.getText" },
                        /* 13 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 14 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 15 */
                        /* 16 */{ "ButtonModel.equals", bm2 },
                        /* 16 */{ "ButtonModel.equals", bm2 },
                /* 20 */})
                //Linux 1.5
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setModel" },
                        /* 2 */{ "AbstractButton.getModel" },
                        /* 3 */{ "ButtonModel.removeChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 4 */{ "ButtonModel.removeActionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 5 */{ "ButtonModel.removeItemListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 6 */{ "AbstractButton.createChangeListener" },
                        /* 7 */{ "AbstractButton.createActionListener" },
                        /* 8 */{ "AbstractButton.createItemListener" },
                        /* 9 */{ "ButtonModel.addChangeListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 10 */{ "ButtonModel.addActionListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 11 */{ "ButtonModel.addItemListener",
                                InstrumentedUILog.ANY_NON_NULL_VALUE },
                        /* 12 */{ "ButtonModel.getMnemonic" },
                        /* 13 */{ "AbstractButton.getText" },
                        /* 14 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 15 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 16 */{ "JComponent.firePropertyChange", "model",
                                bm1, bm2 },
                        /* 17 */{ "ButtonModel.equals", bm2 },
                        /* 18 */{ "ButtonModel.equals", bm2 },
                        /* 19 */{ "ButtonModel.equals", bm2 },
                        /* 20 */{ "JComponent.revalidate" },
                        /* 21 */{ "awt.Component.getParent" },
                        /* 22 */{ "awt.Component.repaint" },
                        /* 23 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                && !InstrumentedUILog
                //
                        .equals(new Object[][] {
                                /* 1 */{ "AbstractButton.setModel" },
                                { "ButtonModel.removeActionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                { "ButtonModel.removeItemListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                { "ButtonModel.removeChangeListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },

                                { "ButtonModel.addChangeListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                { "ButtonModel.addItemListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                { "ButtonModel.addActionListener",
                                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                                { "JComponent.firePropertyChange", "model",
                                        bm1, bm2 },
                                { "ButtonModel.equals", bm1 },
                                { "JComponent.revalidate" },
                                { "awt.Container.invalidate" },
                                { "awt.Component.getParent" },
                                { "JComponent.isValidateRoot" },
                                { "awt.Component.getParent" },
                                { "awt.Component.isValid" },
                                { "awt.Component.isShowing" },
                                { "awt.Component.isVisible" },
                                { "awt.Component.isDisplayable" },
                                { "awt.Component.repaint" },
                                { "JComponent.repaint", "0 0 0 0 0" },
                                { "JComponent.getVisibleRect" },
                                { "JComponent.getWidth" },
                                { "JComponent.getHeight" },
                                { "awt.Component.getParent" },
                                { "ButtonModel.getMnemonic" }, })

        ) {

            InstrumentedUILog.printLogAsArray();
            return failed("expected setModel() to call another sequence of events");
        }

        if (ab.getModel() != bm2) {
            return failed("expected getModel() to return what was set by setModel(...)");
        }

        return passed();
    }

    public Result testMultiClickThreshhold() {
        return super.testMultiClickThreshhold();
    }

    public Result testPressedIcon() {
        return super.testPressedIcon();
    }

    public Result testRolloverEnabled() {
        return super.testRolloverEnabled();
    }

    public Result testText() {
        AbstractButton iab = getInstrumentedAbstractButton();
        InstrumentedUILog.clear();

        if (!"".equals(iab.getText())) {
            return failed("expected getText() to return '' by default, got '"
                    + iab.getText() + "'");
        }

        if (!InstrumentedUILog.equals(new Object[][] {
        /* 1 */{ "AbstractButton.getText" } })) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected getText() not to call any more methods");
        }

        InstrumentedUILog.clear();

        iab.setText("foobar");
        Util.waitQueueEventsProcess();
        if (!InstrumentedUILog
                .equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setText", "foobar" },
                        /* 2 */{ "JComponent.firePropertyChange", "text", "",
                                "foobar" },
                        /* 3 */{ "AbstractButton.getText" },
                        /* 4 */{ "AbstractButton.getMnemonic" },
                        /* 5 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 6 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 7 */{ "JComponent.revalidate" },
                        /* 8 */{ "awt.Component.getParent" },
                        /* 9 */{ "awt.Component.repaint" },
                        /* 10 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                && !InstrumentedUILog.equals(new Object[][] {/* 1 */
                        { "AbstractButton.setText", "foobar" },
                        /* 2 */{ "JComponent.firePropertyChange", "text", "",
                                "foobar" },
                        /* 3 */{ "awt.Container.invalidate" },
                        /* 4 */{ "awt.Component.getParent" },
                        /* 5 */{ "awt.Component.repaint" },
                        /* 6 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 7 */{ "JComponent.getVisibleRect" },
                        /* 8 */{ "JComponent.getWidth" },
                        /* 9 */{ "JComponent.getHeight" },
                        /* 10 */{ "awt.Component.getParent" },
                        /* 11 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 12 */{ "AbstractButton.getText" },
                        /* 13 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 14 */{ "JComponent.firePropertyChange",
                                "displayedMnemonicIndex", "-1", "-1" }, })
                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setText", "foobar" },
                        /* 2 */{ "JComponent.firePropertyChange", "text", "",
                                "foobar" },
                        /* 3 */{ "JComponent.revalidate" },
                        /* 4 */{ "awt.Container.invalidate" },
                        /* 5 */{ "awt.Component.getParent" },
                        /* 6 */{ "JComponent.isValidateRoot" },
                        /* 7 */{ "awt.Component.getParent" },
                        /* 8 */{ "awt.Component.isValid" },
                        /* 9 */{ "awt.Component.isShowing" },
                        /* 10 */{ "awt.Component.isVisible" },
                        /* 11 */{ "awt.Component.isDisplayable" },
                        /* 12 */{ "awt.Component.repaint" },
                        /* 13 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 14 */{ "JComponent.getVisibleRect" },
                        /* 15 */{ "JComponent.getWidth" },
                        /* 16 */{ "JComponent.getHeight" },
                        /* 17 */{ "awt.Component.getParent" },
                        /* 18 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 19 */{ "AbstractButton.getText" },
                        /* 20 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "-1" },
                        /* 21 */{ "JComponent.firePropertyChange",
                                "displayedMnemonicIndex", new Integer(-1),
                                new Integer(-1) },

                }))

        {
            InstrumentedUILog.printLogAsArray();
            return failed("expected setText(String) to call another sequence of events");
        }

        if (!"foobar".equals(iab.getText())) {
            return failed("getText() to return what was set by setText()");
        }
        InstrumentedUILog.clear();

        iab.setText("foobar");
        Util.waitQueueEventsProcess();
        if (!InstrumentedUILog.equals(new Object[][] {
                /* 1 */{ "AbstractButton.setText", "foobar" },
                /* 2 */{ "JComponent.firePropertyChange", "text", "foobar",
                        "foobar" },
                /* 3 */{ "AbstractButton.getMnemonic" },
                /* 4 */{ "AbstractButton.setDisplayedMnemonicIndex", "-1" },
                /* 5 */{ "JComponent.firePropertyChangeInt",
                        "displayedMnemonicIndex", "-1", "-1" }, })
                && !InstrumentedUILog.equals(new Object[][] {
                /* 1 */{ "AbstractButton.setText", "foobar" }, })) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected setText(<current text>) to call another sequence of events");
        }
        iab.setMnemonic(java.awt.event.KeyEvent.VK_Z);
        InstrumentedUILog.clear();
        iab.setText("foobaz");
        Util.waitQueueEventsProcess();

        if (!InstrumentedUILog.equals(new Object[][] {
                /* 1 */{ "AbstractButton.setText", "foobaz" },
                /* 2 */{ "JComponent.firePropertyChange", "text", "foobar",
                        "foobaz" },
                /* 3 */{ "AbstractButton.getText" },
                /* 4 */{ "AbstractButton.getMnemonic" },
                /* 5 */{ "AbstractButton.setDisplayedMnemonicIndex", "5" },
                /* 6 */{ "AbstractButton.getText" },
                /* 7 */{ "JComponent.firePropertyChangeInt",
                        "displayedMnemonicIndex", "-1", "5" },
                /* 8 */{ "JComponent.revalidate" },
                /* 9 */{ "awt.Component.getParent" },
                /* 10 */{ "awt.Component.repaint" },
                /* 11 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 12 */{ "JComponent.revalidate" },
                /* 13 */{ "awt.Component.getParent" },
                /* 14 */{ "awt.Component.repaint" },
                /* 15 */{ "JComponent.repaint", "0 0 0 0 0" }, })

                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setText", "foobaz" },
                        /* 2 */{ "JComponent.firePropertyChange", "text",
                                "foobar", "foobaz" },
                        /* 3 */{ "JComponent.revalidate" },
                        /* 4 */{ "awt.Container.invalidate" },
                        /* 5 */{ "awt.Component.getParent" },
                        /* 6 */{ "JComponent.isValidateRoot" },
                        /* 7 */{ "awt.Component.getParent" },
                        /* 8 */{ "awt.Component.isValid" },
                        /* 9 */{ "awt.Component.isShowing" },
                        /* 10 */{ "awt.Component.isVisible" },
                        /* 11 */{ "awt.Component.isDisplayable" },
                        /* 12 */{ "awt.Component.repaint" },
                        /* 13 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 14 */{ "JComponent.getVisibleRect" },
                        /* 15 */{ "JComponent.getWidth" },
                        /* 16 */{ "JComponent.getHeight" },
                        /* 17 */{ "awt.Component.getParent" },
                        /* 18 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "5" },
                        /* 19 */{ "AbstractButton.getText" },
                        /* 20 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "-1", "5" },
                        /* 21 */{ "JComponent.firePropertyChange",
                                "displayedMnemonicIndex", new Integer(-1),
                                new Integer(5) },
                        /* 22 */{ "JComponent.revalidate" },
                        /* 23 */{ "awt.Container.invalidate" },
                        /* 24 */{ "awt.Component.getParent" },
                        /* 25 */{ "JComponent.isValidateRoot" },
                        /* 26 */{ "awt.Component.getParent" },
                        /* 27 */{ "awt.Component.isValid" },
                        /* 28 */{ "awt.Component.isShowing" },
                        /* 29 */{ "awt.Component.isVisible" },
                        /* 30 */{ "awt.Component.isDisplayable" },
                        /* 31 */{ "awt.Component.repaint" },
                        /* 32 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 33 */{ "JComponent.getVisibleRect" },
                        /* 34 */{ "JComponent.getWidth" },
                        /* 35 */{ "JComponent.getHeight" },
                        /* 36 */{ "awt.Component.getParent" }, })

        ) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected setText(text) to call another sequence of events if text contains "
                    + " mnemonic key");
        }

        InstrumentedUILog.clear();
        iab.setText("foobar");
        Util.waitQueueEventsProcess();

        if (!InstrumentedUILog.equals(new Object[][] {
                /* 1 */{ "AbstractButton.setText", "foobar" },
                /* 2 */{ "JComponent.firePropertyChange", "text", "foobaz",
                        "foobar" },
                /* 3 */{ "AbstractButton.getText" },
                /* 4 */{ "AbstractButton.getMnemonic" },
                /* 5 */{ "AbstractButton.setDisplayedMnemonicIndex", "-1" },
                /* 6 */{ "JComponent.firePropertyChangeInt",
                        "displayedMnemonicIndex", "5", "-1" },
                /* 7 */{ "JComponent.revalidate" },
                /* 8 */{ "awt.Component.getParent" },
                /* 9 */{ "awt.Component.repaint" },
                /* 10 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 11 */{ "JComponent.revalidate" },
                /* 12 */{ "awt.Component.getParent" },
                /* 13 */{ "awt.Component.repaint" },
                /* 14 */{ "JComponent.repaint", "0 0 0 0 0" }, })

                && !InstrumentedUILog.equals(new Object[][] {
                        /* 1 */{ "AbstractButton.setText", "foobar" },
                        /* 2 */{ "JComponent.firePropertyChange", "text",
                                "foobaz", "foobar" },
                        /* 3 */{ "JComponent.revalidate" },
                        /* 4 */{ "awt.Container.invalidate" },
                        /* 5 */{ "awt.Component.getParent" },
                        /* 6 */{ "JComponent.isValidateRoot" },
                        /* 7 */{ "awt.Component.getParent" },
                        /* 8 */{ "awt.Component.isValid" },
                        /* 9 */{ "awt.Component.isShowing" },
                        /* 10 */{ "awt.Component.isVisible" },
                        /* 11 */{ "awt.Component.isDisplayable" },
                        /* 12 */{ "awt.Component.repaint" },
                        /* 13 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 14 */{ "JComponent.getVisibleRect" },
                        /* 15 */{ "JComponent.getWidth" },
                        /* 16 */{ "JComponent.getHeight" },
                        /* 17 */{ "awt.Component.getParent" },
                        /* 18 */{ "AbstractButton.setDisplayedMnemonicIndex",
                                "-1" },
                        /* 19 */{ "AbstractButton.getText" },
                        /* 20 */{ "JComponent.firePropertyChangeInt",
                                "displayedMnemonicIndex", "5", "-1" },
                        /* 21 */{ "JComponent.firePropertyChange",
                                "displayedMnemonicIndex", new Integer(5),
                                new Integer(-1) },
                        /* 22 */{ "JComponent.revalidate" },
                        /* 23 */{ "awt.Container.invalidate" },
                        /* 24 */{ "awt.Component.getParent" },
                        /* 25 */{ "JComponent.isValidateRoot" },
                        /* 26 */{ "awt.Component.getParent" },
                        /* 27 */{ "awt.Component.isValid" },
                        /* 28 */{ "awt.Component.isShowing" },
                        /* 29 */{ "awt.Component.isVisible" },
                        /* 30 */{ "awt.Component.isDisplayable" },
                        /* 31 */{ "awt.Component.repaint" },
                        /* 32 */{ "JComponent.repaint", "0 0 0 0 0" },
                        /* 33 */{ "JComponent.getVisibleRect" },
                        /* 34 */{ "JComponent.getWidth" },
                        /* 35 */{ "JComponent.getHeight" },
                        /* 36 */{ "awt.Component.getParent" }, })) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected setText(text) to call another sequence of events if text doesn't contain "
                    + " mnemonic key");
        }

        return passed();
    }

    public Result testUI() {
        AbstractButton ab = new JButton();

        if (ab.getUI() == null) {
            return failed("expected default JButton UI to be not null");
        }

        ab = getInstrumentedAbstractButton();
        InstrumentedUILog.clear();
        ab.getUI();
        if (!InstrumentedUILog.equals(new Object[][] {
        /* 1 */{ "AbstractButton.getUI" }, })) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected getUI() not to call any more methods");
        }

        ButtonUI bui = new InstrumentedButtonUI();
        InstrumentedUILog.clear();
        ab.setUI(bui);
        Util.waitQueueEventsProcess();
        if (!InstrumentedUILog.contains(new Object[][] {
                /* 1 */{ "AbstractButton.setUI", bui },
                /* 2 */{ "JComponent.firePropertyChange",
                        InstrumentedUILog.ANY_NON_NULL_VALUE,
                        InstrumentedUILog.ANY_NON_NULL_VALUE, null },
                /* 3 */{ "awt.Component.removeMouseListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 4 */{ "awt.Component.removeMouseListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 5 */{ "awt.Component.removeMouseMotionListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 6 */{ "awt.Component.removeFocusListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 7 */{ "removeChangeListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 8 */{ "JComponent.removePropertyChangeListener",
                        InstrumentedUILog.ANY_NON_NULL_VALUE },
                /* 9 */{ "JComponent.getBorder" },
                /* 10 */{ "JComponent.setBorder", null },
                /* 11 */{ "JComponent.firePropertyChange", "border",
                        InstrumentedUILog.ANY_NON_NULL_VALUE, null },
                /* 12 */{ "JComponent.revalidate" },
                /* 13 */{ "awt.Component.getParent" },
                /* 14 */{ "awt.Component.repaint" },
                /* 15 */{ "JComponent.repaint", "0 0 0 0 0" },
                /* 16 */{ "ButtonUI.installUI", ab },
                /* 17 */{ "JComponent.firePropertyChange", "UI",
                        InstrumentedUILog.ANY_NON_NULL_VALUE, bui },
                /* 18 */{ "JComponent.revalidate" },
                /* 19 */{ "awt.Component.getParent" },
                /* 20 */{ "awt.Component.repaint" },
                /* 21 */{ "JComponent.repaint", "0 0 0 0 0" }, })) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected setUI(UI) on a jbutton with default ui to call another sequence of events");
        }

        if (ab.getUI() != bui) {
            return failed("expected getUI() to return what was set by setUI()");
        }

        InstrumentedUILog.clear();
        ab.setUI(bui);
        Util.waitQueueEventsProcess();
        if (!InstrumentedUILog.equals(new Object[][] {
        /* 1 */{ "AbstractButton.setUI", bui },
        /* 2 */{ "ButtonUI.uninstallUI", ab },
        /* 3 */{ "ButtonUI.installUI", ab },
        /* 4 */{ "JComponent.firePropertyChange", "UI", bui, bui },
        /* 5 */{ "ButtonUI.equals", bui },
        /* 6 */{ "JComponent.revalidate" },
        /* 7 */{ "awt.Component.getParent" },
        /* 8 */{ "awt.Component.repaint" },
        /* 9 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                && !InstrumentedUILog.equals(new Object[][] {
                /* 1 */{ "AbstractButton.setUI", bui },
                /* 2 */{ "ButtonUI.uninstallUI", ab },
                /* 3 */{ "ButtonUI.installUI", ab }, })) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected setUI(getUI()) on a button to call another sequence of events");
        }

        InstrumentedUILog.clear();
        ab.setUI(null);
        Util.waitQueueEventsProcess();

        if (!InstrumentedUILog.equals(new Object[][] {
        /* 1 */{ "AbstractButton.setUI", null },
        /* 2 */{ "ButtonUI.uninstallUI", ab },
        /* 3 */{ "JComponent.firePropertyChange", "UI", bui, null },
        /* 4 */{ "JComponent.revalidate" },
        /* 5 */{ "awt.Component.getParent" },
        /* 6 */{ "awt.Component.repaint" },
        /* 7 */{ "JComponent.repaint", "0 0 0 0 0" }, })
                && !InstrumentedUILog
                        .equals(new Object[][] {
                                /* 1 */{ "AbstractButton.setUI", null },
                                /* 2 */{ "ButtonUI.uninstallUI", ab },
                                /* 3 */{ "JComponent.revalidate" },
                                /* 4 */{ "awt.Container.invalidate" },
                                /* 5 */{ "awt.Component.getParent" },
                                /* 6 */{ "JComponent.isValidateRoot" },
                                /* 7 */{ "awt.Component.getParent" },
                                /* 8 */{ "awt.Component.isValid" },
                                /* 9 */{ "awt.Component.isShowing" },
                                /* 10 */{ "awt.Component.isVisible" },
                                /* 11 */{ "awt.Component.isDisplayable" },
                                /* 12 */{ "awt.Component.repaint" },
                                /* 13 */{ "JComponent.repaint", "0 0 0 0 0" },
                                /* 14 */{ "JComponent.getVisibleRect" },
                                /* 15 */{ "JComponent.getWidth" },
                                /* 16 */{ "JComponent.getHeight" },
                                /* 17 */{ "awt.Component.getParent" },
                                /* 18 */{ "JComponent.firePropertyChange",
                                        "UI", bui, null }, })

        ) {
            InstrumentedUILog.printLogAsArray();
            return failed("expected setUI(null) on a button with non-null ui to call another sequence of events");
        }

        return passed();
    }

    public Result testVerticalAlignment() {
        return super.testVerticalAlignment();
    }

    public Result testVerticalTextPosition() {
        return super.testVerticalTextPosition();
    }
}