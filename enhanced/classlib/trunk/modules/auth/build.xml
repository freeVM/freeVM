<?xml version="1.0" encoding="UTF-8"?>

<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<project name="AUTH Build" default="build" basedir=".">
    <description>Build for AUTH component</description>

    <!-- import common properties -->
    <property name="hy.hdk" location="${basedir}/../../deploy" />
    <property name="hy.jdk" location="${hy.hdk}/jdk" />
    <property name="hy.jre" location="${hy.jdk}/jre" />
    <import file="${hy.hdk}/build/ant/properties.xml" />

    <property name="tests.output" location="../../build/test_report" />

    <!-- set global properties for this build. -->

    <property name="hy.auth.src.main.java.platform"
              value="src/main/java/common/../${hy.os.family}" />

    <property name="hy.auth.src.test.java.platform"
              value="src/test/java/common/../${hy.os.family}" />

    <fileset id="classes" dir="../../build/classes">
        <or>
            <present targetdir="src/main/java/common" />
            <present targetdir="src/main/java/common">
                <mapper type="regexp"
                        from="^(.*?)(\$$[^/\\\.]*)?\.class$$"
                        to="\1.java"/>
            </present>
            <present targetdir="${hy.auth.src.main.java.platform}" />
            <present targetdir="${hy.auth.src.main.java.platform}">
                <mapper type="regexp"
                        from="^(.*?)(\$$[^/\\\.]*)?\.class$$"
                        to="\1.java"/>
            </present>
        </or>
    </fileset>

    <property file="../../make/depends.properties" />

    <property name="tests.hdk.dir" value="${hy.hdk}/build/test/auth" />
    <property name="auth.exclude.file"
              location="${tests.hdk.dir}/test.exclude" />

    <target name="build" depends="compile-java, copy-resources, build-jar" />

    <target name="test" depends="-test-module">
        <fail message="Some tests failed">
            <condition>
                <or>
                    <isset property="test.failures" />
                    <isset property="test.errors" />
                </or>
            </condition>
        </fail>
    </target>

    <!-- internal target for local and global test run sequence -->
    <target name="-test-module" depends="build, compile-tests, prepare-exclude, run-tests" />
    
    <!-- Build native code -->
    <target name="build-native" depends="build-native-all" />
    <target name="build-native-all" >
        <make dir="src/main/native/auth/${hy.os.family}" />

        <!-- Copy the built shared libs over to the jre/bin dir -->
        <copy todir="${hy.jdk}/jre/bin" overwrite="yes">
            <fileset dir="src/main/native/auth">
                <include name="*${shlib.suffix}*"/>
                <include name="*${progdb.suffix}*" if="is.windows" />
                <exclude name="*${manifest.suffix}"/>
            </fileset>
        </copy>
        <!-- Copy link exports file on z/OS -->
        <copy todir="${hy.hdk}/lib" overwrite="yes">
            <fileset dir="src/main/native/auth/${hy.os.family}">
                <include name="*${linklib.suffix}" if="is.zos" />
            </fileset>
        </copy>
    </target>
    
    <!-- Clean natives -->
    <target name="clean-native">
    <make dir="src/main/native/auth/${hy.os.family}" target="clean" />
    </target>

    <target name="clean">
        <delete file="${hy.jdk}/jre/lib/boot/auth.jar" />
        <delete file="${hy.jdk}/jre/lib/boot/auth-src.jar" />
        <delete failonerror="false">
            <fileset refid="classes" />
        </delete>
        <delete failonerror="false" dir="bin"/>
    </target>

    <target name="compile-java">
        <echo message="Compiling AUTH classes" />

        <mkdir dir="../../build/classes" />

        <javac sourcepath=""
               destdir="../../build/classes"
               compiler="${hy.javac.compiler}"
               memoryMaximumSize="${hy.javac.maxmem}"
               source="${hy.javac.source}" 
               target="${hy.javac.target}"
               debug="${hy.javac.debug}">

            <src>
                <pathelement location="src/main/java/common"/>
                <pathelement location="${hy.auth.src.main.java.platform}" />
            </src>

            <bootclasspath>
                <fileset dir="${hy.jdk}/jre/lib/boot">
                    <include name="**/*.jar" />
                </fileset>
            </bootclasspath>
        </javac>
    </target>

    <target name="copy-resources">
        <mkdir dir="../../build/classes" />
        <copy todir="../../build/classes" includeemptydirs="false">
            <fileset dir="src/main/java/common">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>

    <target name="build-jar" depends="svn-info">
        <jar destfile="${hy.jdk}/jre/lib/boot/auth.jar"
             manifest="./META-INF/MANIFEST.MF"
             compress="${hy.jar.compress}">
            <fileset refid="classes" />
            <manifest>
                <attribute name="Implementation-Version" value="${svn.info}"/> 
            </manifest>

            <metainf refid="hy.required.metainf-files"/>
        </jar>

        <jar destfile="${hy.jdk}/jre/lib/boot/auth-src.jar">
            <fileset dir="src/main/java/common" />
            <fileset dir="${hy.auth.src.main.java.platform}" />
            <manifest>
                <attribute name="Implementation-Version" value="${svn.info}"/> 
            </manifest>

            <metainf refid="hy.required.metainf-files"/>
        </jar>
    </target>

    <target name="compile-tests">
        <compile-tests description="auth api tests"
                       destdir="bin/test">
            <javac-elements>
                <src>
                    <pathelement location="src/test/java/common"/>
                    <pathelement location="${hy.auth.src.test.java.platform}"/>
                </src>
            </javac-elements>
        </compile-tests>
    </target>

    <target name="prepare-exclude">
       <prepare-exclude-list moduleName="auth" dir="./make"
                             result="${auth.exclude.file}"/>
    </target>

    <target name="run-tests">

        <mkdir dir="${tests.output}" />

        <property name="test.jre.home" value="${hy.jdk}/jre" />

        <junit fork="yes"
               forkmode="${hy.test.forkmode}"
               timeout="${hy.test.timeout}"
               printsummary="withOutAndErr"
               errorproperty="test.errors"
               failureproperty="test.failures"
               showoutput="on"
               dir="${basedir}"
               jvm="${test.jre.home}/bin/java">

            <assertions enableSystemAssertions="true">
                <enable />
            </assertions>

            <jvmarg line="${hy.test.vmargs}" />
            <!-- Used by Support_Exec.execJava() -->
            <jvmarg value="-Dhy.test.vmargs=${hy.test.vmargs}" />


            <!-- to pick up junit.jar -->
            <jvmarg value="-Xbootclasspath/a:bin/test${path.separator}../../${junit.jar}${path.separator}${hy.hdk}/build/test/support.jar"/>

            <classpath>
                <pathelement path="src/test/resources"/>
                <pathelement path="bin/test"/>
            </classpath>

            <formatter type="xml" />

            <batchtest todir="${tests.output}" haltonfailure="no" >

                <fileset dir="${hy.auth.src.test.java.platform}">
                    <!-- if ${test.case}     -->
                    <include name="${converted.tc}" if="test.case" />
                    <!-- unless ${test.case} -->
                    <include name="**/*Test.java" unless="test.case" />
                    <excludesfile name="${auth.exclude.file}" unless="test.case" />
                </fileset>
                <fileset dir="src/test/java/common">
                    <!-- if ${test.case}     -->
                    <include name="${converted.tc}" if="test.case" />
                    <!-- unless ${test.case} -->
                    <include name="**/*Test.java" unless="test.case" />
                    <excludesfile name="${auth.exclude.file}" unless="test.case" />

                    <!-- Not a test -->
                    <exclude name="org/apache/harmony/auth/internal/SecurityTest.java"/>
                </fileset>
            </batchtest>
        </junit>
        <antcall target="touch-failures-file" />
        <antcall target="touch-errors-file" />
    </target>

    <target name="touch-failures-file" if="test.failures">
        <echo file="${tests.output}/test.failures"
            append="true">auth${line.separator}</echo>
    </target>

    <target name="touch-errors-file" if="test.errors">
        <echo file="${tests.output}/test.errors"
            append="true">auth${line.separator}</echo>
    </target>

</project>
