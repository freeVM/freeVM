<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<project name="RMI Build" default="build" basedir=".">
    <description>Build for RMI component</description>

    <!-- import common properties -->
    <property name="hy.hdk" location="${basedir}/../../deploy" />
    <property name="hy.jdk" location="${hy.hdk}/jdk" />
    <property name="hy.jre" location="${hy.jdk}/jre" />
    <import file="${hy.hdk}/build/ant/properties.xml" />

    <property name="tests.output" location="../../build/test_report" />

    <!-- set global properties for this build. -->

    <fileset id="classes" dir="../../build/classes">
        <or>
            <present targetdir="src/main/java" />
            <present targetdir="src/main/java">
                <mapper type="regexp"
                        from="^(.*?)(\$$[^/\\\.]*)?\.class$$"
                        to="\1.java"/>
            </present>
        </or>
    </fileset>

    <property file="../../make/depends.properties" />

    <property name="tests.hdk.dir" value="${hy.hdk}/build/test/rmi" />
    <property name="rmi.exclude.file"
              location="${tests.hdk.dir}/test.exclude" />

    <target name="build" depends="compile-java, copy-resources, build-jar" />

    <target name="test" depends="-test-module">
        <fail message="Some tests failed">
            <condition>
                <or>
                    <isset property="test.failures" />
                    <isset property="test.errors" />
                </or>
            </condition>
        </fail>
    </target>

    <!-- internal target for local and global test run sequence -->
    <target name="-test-module" depends="build, compile-tests, prepare-exclude, run-tests" />

    <target name="clean">
        <delete file="${hy.jdk}/jre/lib/boot/rmi.jar" />
        <delete file="${hy.jdk}/jre/lib/boot/rmi-src.jar" />
        <delete failonerror="false">
            <fileset refid="classes" />
        </delete>
        <delete failonerror="false" dir="bin"/>
    </target>

    <target name="compile-java">
        <echo message="Compiling RMI classes" />

        <mkdir dir="../../build/classes" />

        <javac sourcepath=""
               srcdir="src/main/java"
               destdir="../../build/classes"
               compiler="${hy.javac.compiler}"
               memoryMaximumSize="${hy.javac.maxmem}"
               source="${hy.javac.source}" 
               target="${hy.javac.target}"
               debug="${hy.javac.debug}">

            <compilerarg line="${build.compilerarg}" />

            <bootclasspath>
                <fileset dir="${hy.jdk}/jre/lib/boot">
                    <include name="**/*.jar" />
                </fileset>
            </bootclasspath>
        </javac>
    </target>

    <target name="copy-resources">
        <mkdir dir="../../build/classes" />
        <copy todir="../../build/classes" includeemptydirs="false">
            <fileset dir="src/main/java">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>

    <target name="build-jar" depends="svn-info">
        <jar destfile="${hy.jdk}/jre/lib/boot/rmi.jar"
             manifest="./META-INF/MANIFEST.MF"
             compress="${hy.jar.compress}">
            <fileset refid="classes" />
            <manifest>
                <attribute name="Implementation-Version" value="${svn.info}"/> 
            </manifest>

            <metainf refid="hy.required.metainf-files"/>
        </jar>

        <jar destfile="${hy.jdk}/jre/lib/boot/rmi-src.jar">
            <fileset dir="src/main/java" />
            <manifest>
                <attribute name="Implementation-Version" value="${svn.info}"/> 
            </manifest>

            <metainf refid="hy.required.metainf-files"/>
        </jar>
    </target>

    <target name="compile-tests">

        <compile-tests description="rmi api tests" destdir="bin/test/api">
            <javac-elements>
                <src>
                    <pathelement location="src/test/api/java"/>
                </src>

                <include name="**/*Test.java"/>
            </javac-elements>
        </compile-tests>

    </target>

    <target name="prepare-exclude">
       <prepare-exclude-list moduleName="rmi" dir="./make"
                             result="${rmi.exclude.file}"/>
    </target>

    <target name="run-tests" depends="run-tests-api" />

    <target name="run-tests-api">

        <run-tests description="api tests">
            <junit-elements>

                <classpath>
                    <pathelement path="bin/test/api"/>
                    <pathelement path="../../build/tests"/>
                </classpath>

                <batchtest todir="${tests.output}" haltonfailure="no" >
                    <fileset dir="src/test/api/java">
                        <!-- if ${test.case}     -->
                        <include name="${converted.tc}" if="test.case" />
                        <!-- unless ${test.case} -->
                        <include name="**/*Test.java" unless="test.case" />
                        <excludesfile name="${rmi.exclude.file}" unless="test.case"  />
                    </fileset>
                </batchtest>

            </junit-elements>
        </run-tests>

        <antcall target="touch-failures-file" />
        <antcall target="touch-errors-file" />
    </target>

    <target name="touch-failures-file" if="test.failures">
        <echo file="${tests.output}/test.failures"
            append="true">rmi${line.separator}</echo>
    </target>

    <target name="touch-errors-file" if="test.errors">
        <echo file="${tests.output}/test.errors"
            append="true">rmi${line.separator}</echo>
    </target>

    <macrodef name="run-tests">
        <attribute name="description" default="" />
        <element name="junit-elements" />
        <sequential>
            <echo message="Running RMI @{description}" />

            <mkdir dir="${tests.output}" />

            <property name="test.jre.home" value="${hy.jdk}/jre" />

            <junit fork="yes"
                   forkmode="${hy.test.forkmode}"
                   timeout="${hy.test.timeout}"
                   printsummary="withOutAndErr"
                   errorproperty="test.errors"
                   failureproperty="test.failures"
                   showoutput="on"
                   dir="${basedir}"
                   jvm="${test.jre.home}/bin/java">

                <assertions enableSystemAssertions="true">
                    <enable />
                </assertions>

                <jvmarg line="${hy.test.vmargs}" />
                   
                <jvmarg value="-Djava.security.policy=make/all.policy"/>

                <junit-elements />

                <classpath>
                    <pathelement path="src/test/resources"/>
                    <pathelement location="${hy.hdk}/build/test/support.jar"/>
                </classpath>

                <formatter type="xml" />
            </junit>
        </sequential>
    </macrodef>

</project>
