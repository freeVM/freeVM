/* 
 *  Licensed to the Apache Software Foundation (ASF) under one or more 
 *  contributor license agreements.  See the NOTICE file distributed with 
 *  this work for additional information regarding copyright ownership. 
 *  The ASF licenses this file to You under the Apache License, Version 2.0 
 *  (the "License"); you may not use this file except in compliance with 
 *  the License.  You may obtain a copy of the License at 
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0 
 * 
 *  Unless required by applicable law or agreed to in writing, software 
 *  distributed under the License is distributed on an "AS IS" BASIS, 
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 *  See the License for the specific language governing permissions and 
 *  limitations under the License. 
 */
/* Generated By:JavaCC: Do not edit this line. FilterParserConstants.java */
package org.apache.harmony.jndi.provider.ldap.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface FilterParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COLON_DN = 1;
  /** RegularExpression Id. */
  int HEX_CHAR = 2;
  /** RegularExpression Id. */
  int NOHEX_CHAR = 3;
  /** RegularExpression Id. */
  int LPARENT = 4;
  /** RegularExpression Id. */
  int RPARENT = 5;
  /** RegularExpression Id. */
  int LBRACE = 6;
  /** RegularExpression Id. */
  int RBRACE = 7;
  /** RegularExpression Id. */
  int AND = 8;
  /** RegularExpression Id. */
  int OR = 9;
  /** RegularExpression Id. */
  int NOT = 10;
  /** RegularExpression Id. */
  int ZERO = 11;
  /** RegularExpression Id. */
  int COLON = 12;
  /** RegularExpression Id. */
  int EQUAL = 13;
  /** RegularExpression Id. */
  int LESS = 14;
  /** RegularExpression Id. */
  int GREATER = 15;
  /** RegularExpression Id. */
  int APPROX = 16;
  /** RegularExpression Id. */
  int ASTERISK = 17;
  /** RegularExpression Id. */
  int DIGIT = 18;
  /** RegularExpression Id. */
  int HYPHEN = 19;
  /** RegularExpression Id. */
  int PERIOD = 20;
  /** RegularExpression Id. */
  int BACKSLASH = 21;
  /** RegularExpression Id. */
  int SEMI = 22;
  /** RegularExpression Id. */
  int CHAR = 23;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\":dn\"",
    "<HEX_CHAR>",
    "<NOHEX_CHAR>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "\"0\"",
    "\":\"",
    "\"=\"",
    "\"<\"",
    "\">\"",
    "\"~\"",
    "\"*\"",
    "<DIGIT>",
    "\"-\"",
    "\".\"",
    "\"\\\\\"",
    "\";\"",
    "<CHAR>",
    "\"\\n\"",
    "\"\\u0085\"",
  };

}
