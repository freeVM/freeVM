<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
Author:  Alexei Y. Zakharov
Version: $Revision: 1.122.2.10 $
-->
<!--
    Copyright 2005 The Apache Software Foundation or its licensors, as applicable.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<project name="classes" basedir="." default="jar">

    <!-- determines the OS -->
    <condition property="platform.name" value="win32">
        <os family="Windows"/>
    </condition>
    <condition property="platform.name" value="linux">
        <and>
            <os name="linux"/>
            <os family="unix"/>
        </and>
    </condition>

    <!-- Needed by pathConvert tag -->
    <condition property="os.family" value="windows">
        <os family="Windows"/>
    </condition>
    <condition property="os.family" value="unix">
        <os family="unix"/>
    </condition>

    <property environment="env"/>
    <property file="external_tools.properties"/>

    <!-- common properties -->
    <property name="src.dir" value="../src/common/javasrc"/>

    <!-- root dir for all build files -->
    <property name="build.path" value="../build"/>

    <!-- build compiler -->
    <!--
         In order to use Eclipse compiler you will need to add
         the compiler's jars to the CLASSPATH and path to jni.h
         to INCLUDE environment variables before build start.
         For example:

         set CLASSPATH=%ECLIPSE_HOME%/plugins/org.eclipse.jdt.core_3.0.1/jdtCompilerAdapter.jar; \
                 %ECLIPSE_HOME%/plugins/org.eclipse.jdt.core_3.0.1/jdtcore.jar;%CLASSPATH%

         set INCLUDE=%MY_JVM%/include
     -->
    <!--property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/-->
    <property name="build.compiler" value="modern"/>

    <property name="classes.dir" value="${build.path}/classes"/>
    <property name="jar.dir" value="${build.path}/deploy/jre/lib/boot"/>
    <property name="jar.name" value="classes.jar"/>
    <path id="compile.classpath">
        <pathelement path="${classes.dir}"/>
    </path>

    <property name="tst.src.dir" value="../test/common/unit"/>
    <property name="tst.classes.dir" value="${build.path}/tests"/>
    <property name="tst.jar.dir" value="${build.path}/jars"/>
    <property name="tst.reports.dir" value="${build.path}/test-reports"/>
    <path id="tst.classpath">
        <!--pathelement location="${xerces.path}"/-->
        <pathelement path="${classes.dir}"/>
        <pathelement path="${tst.classes.dir}"/>
        <pathelement location="${junit.path}"/>
    </path>

    <import file="build-beans.xml"/>
    <import file="build-regex.xml"/>
    <import file="build-math.xml"/>

    <patternset id="src.list">
        <patternset refid="src.list.beans"/>
        <patternset refid="src.list.regex"/>
        <patternset refid="src.list.math"/>
    </patternset>

    <patternset id="tst.src.list">
        <patternset refid="tst.src.list.beans"/>
        <patternset refid="tst.src.list.regex"/>
        <patternset refid="tst.src.list.math"/>
    </patternset>

    <target name="taglet1" description="Build taglet1">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${jar.dir}"/>
        <javac srcdir="${taglet1.src}"
               sourcepath=""
               destdir="${classes.dir}"
               source="1.4"
               deprecation="on"
               classpathref="compile.classpath"
               debug="off">
        </javac>

        <jar destfile="${taglet1.jar}">
             <fileset dir="${classes.dir}">
                <patternset>
                    <include name="com/intel/drl/tools/*"/>
                </patternset>
             </fileset>
        </jar>
    </target>


    <!-- common targets -->

    <target name="compile.common" description="Compile sources">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}"
               sourcepath=""
               destdir="${classes.dir}"
               source="1.4"
               deprecation="on"
               classpathref="compile.classpath"
               debug="on">
               <patternset refid="src.list"/>
        </javac>
    </target>

    <target name="tst.compile.common" description="Compile tests">
        <mkdir dir="${tst.classes.dir}"/>
        <javac srcdir="${tst.src.dir}"
               sourcepath=""
               destdir="${tst.classes.dir}"
               source="1.4"
               deprecation="on"
               bootclasspath="${classes.dir};${env.JAVA_HOME}/jre/lib/rt.jar"
               classpathref="tst.classpath"
               debug="on">
               <patternset refid="tst.src.list"/>

        </javac>
    </target>

    <target name="jar.common" description="Build JAR archive">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${jar.name}">
             <fileset dir="${classes.dir}">
                <patternset refid="classes.list"/>
             </fileset>
        </jar>
    </target>

    <target name="tst.jar.common" description="Build JAR with tests">
        <mkdir dir="${tst.jar.dir}"/>
        <jar destfile="${tst.jar.dir}/${tst.jar.name}">
             <fileset dir="${tst.classes.dir}">
                <patternset refid="tst.classes.list"/>
             </fileset>
        </jar>
    </target>


    <!-- global targets -->

    <target name="clean" description="Delete all generated files">
        <delete dir="${classes.dir}" failonerror="false"/>
        <delete dir="${jar.dir}" failonerror="false"/>
        <delete dir="${build.path}/lib" failonerror="false"/>
        <delete dir="${tst.classes.dir}" failonerror="false"/>
        <delete dir="${tst.jar.dir}" failonerror="false"/>
        <delete dir="${tst.reports.dir}" failonerror="false"/>
        <delete file="${taglet1.jar}" failonerror="false"/>
        <delete failonerror="false">
            <fileset dir="${build.path}" includes="TEST*.*"/>
        </delete>
    </target>

    <target name="compile" description="Compile sources">
        <antcall target="compile.beans"/>
        <antcall target="compile.regex"/>
        <antcall target="compile.math"/>
    </target>

    <target name="tst.compile" description="Compile tests">
        <antcall target="tst.compile.beans"/>
        <antcall target="tst.compile.regex"/>
        <antcall target="tst.compile.math"/>
    </target>

    <target name="jar" description="Build JAR archive">
        <antcall target="jar.beans"/>
        <antcall target="jar.math"/>
        <antcall target="jar.regex"/>
    </target>

    <target name="tst.jar" description="Build JAR with tests">
        <antcall target="tst.jar.beans"/>
        <antcall target="tst.jar.math"/>
        <antcall target="tst.jar.regex"/>
    </target>

    <target name="tests.run" description="run all tests">
        <antcall target="test.beans"/>
        <antcall target="test.regex"/>
        <antcall target="test.math"/>
    </target>

</project>
