/*
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/*
 * THE FILE HAS BEEN AUTOGENERATED BY IJH TOOL.
 * Please be aware that all changes made to this file manually
 * will be overwritten by the tool if it runs again.
 */

#include <jni.h>


/* Header for class org.apache.harmony.misc.accessors.MemoryAccessor */

#ifndef _ORG_APACHE_HARMONY_MISC_ACCESSORS_MEMORYACCESSOR_H
#define _ORG_APACHE_HARMONY_MISC_ACCESSORS_MEMORYACCESSOR_H

#ifdef __cplusplus
extern "C" {
#endif


/* Static final fields */

#undef org_apache_harmony_misc_accessors_MemoryAccessor_BIG_ENDIAN
#define org_apache_harmony_misc_accessors_MemoryAccessor_BIG_ENDIAN 0L

#undef org_apache_harmony_misc_accessors_MemoryAccessor_LITTLE_ENDIAN
#define org_apache_harmony_misc_accessors_MemoryAccessor_LITTLE_ENDIAN 1L


/* Native methods */

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getBoolean(J)Z
 */
JNIEXPORT jboolean JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getBoolean(JNIEnv *, jobject, 
    jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getByte(J)B
 */
JNIEXPORT jbyte JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getByte(JNIEnv *, jobject, 
    jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getShort(J)S
 */
JNIEXPORT jshort JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getShort(JNIEnv *, jobject, 
    jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getInt(J)I
 */
JNIEXPORT jint JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getInt(JNIEnv *, jobject, 
    jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getLong(J)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getLong(JNIEnv *, jobject, 
    jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getFloat(J)F
 */
JNIEXPORT jfloat JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getFloat(JNIEnv *, jobject, 
    jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getDouble(J)D
 */
JNIEXPORT jdouble JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getDouble(JNIEnv *, jobject, 
    jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getArray(JLjava/lang/Object;JJ)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getArray(JNIEnv *, jobject, 
    jlong, jobject, jlong, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setBoolean(JZ)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setBoolean(JNIEnv *, jobject, 
    jlong, jboolean);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setByte(JB)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setByte(JNIEnv *, jobject, 
    jlong, jbyte);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setDouble(JD)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setDouble(JNIEnv *, jobject, 
    jlong, jdouble);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setFloat(JF)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setFloat(JNIEnv *, jobject, 
    jlong, jfloat);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setInt(JI)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setInt(JNIEnv *, jobject, 
    jlong, jint);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setLong(JJ)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setLong(JNIEnv *, jobject, 
    jlong, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setShort(JS)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setShort(JNIEnv *, jobject, 
    jlong, jshort);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getNativeByteOrder0()I
 */
JNIEXPORT jint JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getNativeByteOrder0(JNIEnv *, jobject);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.findFirstDiff(JJJ)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_findFirstDiff(JNIEnv *, jobject, 
    jlong, jlong, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.findFirstDiffReorder16(JJJ)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_findFirstDiffReorder16(JNIEnv *, jobject, 
    jlong, jlong, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.findFirstDiffReorder32(JJJ)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_findFirstDiffReorder32(JNIEnv *, jobject, 
    jlong, jlong, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.findFirstDiffReorder64(JJJ)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_findFirstDiffReorder64(JNIEnv *, jobject, 
    jlong, jlong, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getArrayReorder16(JLjava/lang/Object;JJ)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getArrayReorder16(JNIEnv *, jobject, 
    jlong, jobject, jlong, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getArrayReorder32(JLjava/lang/Object;JJ)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getArrayReorder32(JNIEnv *, jobject, 
    jlong, jobject, jlong, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getArrayReorder64(JLjava/lang/Object;JJ)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getArrayReorder64(JNIEnv *, jobject, 
    jlong, jobject, jlong, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getShortReorder(J)S
 */
JNIEXPORT jshort JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getShortReorder(JNIEnv *, jobject, 
    jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getDoubleReorder(J)D
 */
JNIEXPORT jdouble JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getDoubleReorder(JNIEnv *, jobject, 
    jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getFloatReorder(J)F
 */
JNIEXPORT jfloat JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getFloatReorder(JNIEnv *, jobject, 
    jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getHashCode(JJ)I
 */
JNIEXPORT jint JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getHashCode(JNIEnv *, jobject, 
    jlong, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getIntReorder(J)I
 */
JNIEXPORT jint JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getIntReorder(JNIEnv *, jobject, 
    jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getLongReorder(J)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getLongReorder(JNIEnv *, jobject, 
    jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setArray(JLjava/lang/Object;JJ)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setArray(JNIEnv *, jobject, 
    jlong, jobject, jlong, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setArrayReorder16(JLjava/lang/Object;JJ)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setArrayReorder16(JNIEnv *, jobject, 
    jlong, jobject, jlong, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setArrayReorder32(JLjava/lang/Object;JJ)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setArrayReorder32(JNIEnv *, jobject, 
    jlong, jobject, jlong, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setArrayReorder64(JLjava/lang/Object;JJ)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setArrayReorder64(JNIEnv *, jobject, 
    jlong, jobject, jlong, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setShortReorder(JS)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setShortReorder(JNIEnv *, jobject, 
    jlong, jshort);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setDoubleReorder(JD)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setDoubleReorder(JNIEnv *, jobject, 
    jlong, jdouble);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setFloatReorder(JF)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setFloatReorder(JNIEnv *, jobject, 
    jlong, jfloat);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setIntReorder(JI)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setIntReorder(JNIEnv *, jobject, 
    jlong, jint);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setLongReorder(JJ)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setLongReorder(JNIEnv *, jobject, 
    jlong, jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.getPointer(J)J
 */
JNIEXPORT jlong JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_getPointer(JNIEnv *, jobject, 
    jlong);

/*
 * Method: org.apache.harmony.misc.accessors.MemoryAccessor.setPointer(JJ)V
 */
JNIEXPORT void JNICALL
Java_org_apache_harmony_misc_accessors_MemoryAccessor_setPointer(JNIEnv *, jobject, 
    jlong, jlong);


#ifdef __cplusplus
}
#endif

#endif /* _ORG_APACHE_HARMONY_MISC_ACCESSORS_MEMORYACCESSOR_H */

