# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ECHO messages
# =============

ECHO001=EM: Can't read configuration from '{0}'
ECHO002=EM: Not a JIT shared lib: '{0}'
ECHO003=EM: No 'chains' property found in configuration
ECHO004=EM: No JIT library specified for JIT :'{0}'
ECHO005=EM: JIT library loading error:'{0}'
ECHO006=EM: Invalid filter :'{0}'
ECHO007=EM: Unsupported profiler type
ECHO008=EM: unsupported profiler mode
ECHO009=EM: illegal '{0}' value
ECHO010=EM: unsupported value profiler algotype
ECHO011=EM: profile configuration failed: {0}
ECHO012=EM: profile generation is not supported: {0}
ECHO013=EM: profile not found: {0}
ECHO014=EM: illegal use of profile: {0}
ECHO015=EM: profile usage is not supported: {0}
ECHO016=WARNING: final heap size is too large, reduced to {0} Mb
ECHO017=WARNING: initial heap size reduced to {0} Mb
ECHO018=WARNING: Incorrect {0} gc size specified, using default
ECHO019=WARNING: max heap size is too large, reduced to {0} Mb
ECHO020=WARNING: min heap size reduced to {0} Mb
ECHO021=Usage: {0} [-options] class [args...]\n        (to execute a method main() of the class)\n    or {0} [-options] -jar jarfile [args...]\n        (to execute the jar file)\n\nwhere options include:\n    -classpath <class search path of directories and zip/jar files>\n    -cp        <class search path of directories and zip/jar files>\n                  A '{1}' separated list of directories, jar archives,\n                  and zip archives to search for class file\n    -client       select the 'client' VM (same as -Xem:client)\n    -server       select the 'server' VM (same as -Xem:server)\n    -D<name>=<value>\n                  set a system property\n    -showversion  print product version and continue\n    -version      print product version and exit\n    -verbose[:class|:gc|:jni]\n                  enable verbose output\n    -agentlib:<library name>[=<agent options>]\n                  load JVMTI agent library, library name is platform independent\n    -agentpath:<library name>[=<agent options]\n                  load JVMTI agent library, library name is platform dependent\n    -verify\n                  do full bytecode verification\n    -noverify\n                  do no bytecode verification\n    -enableassertions[:<package>...|:<class>]\n    -ea[:<package>...|:<class>]\n                  enable assertions\n    -disableassertions[:<package>...|:<class>]\n    -da[:<package>...|:<class>]\n                  disable assertions\n    -esa | -enablesystemassertions\n                  enable system assertions\n    -dsa | -disablesystemassertions\n                  disable system assertions\n    -? -help -h   print this help message\n    -X            print help on non-standard options
ECHO022=\    -Xbootclasspath:<PATH>\n              Set bootclasspath to the specified value\n    -Xbootclasspath/a:<PATH>\n              Append specified directories and files to bootclasspath\n    -Xbootclasspath/p:<PATH>\n              Prepend specified directories and files to bootclasspath\n    -Xms<size>\n              Set Java heap size\n    -Xmx<size>\n              Set maximum Java heap size\n    -Xss<size>\n              Set initial stack size\n    -Xdebug\n              Does nothing, this is a compatibility option\n    -Xnoagent\n              Does nothing, this is a compatibility option\n    -Xrun\n              Specify debugger agent library\n    -Xverbose:<category>\n              Switch logging on for a specified category\n              (multiple categories specified via subsequent options)\n    -Xnoverbose:<category>\n              Switch logging off for a specified category\n    -Xwarn\n              Switch warnings on\n    -Xverboselog:<file>\n              Log verbose output to a file\n    -Xverify[:none|all]\n              Do full bytecode verification\n    -Xinvisible\n              Retain invisible annotations at runtime\n    -Xfileline\n              Add source information to logging messages\n    -Xthread\n              Add thread id to logging messages\n    -Xcategory\n              Add category name to logging messages\n    -Xtimestamp\n              Add timestamp to logging messages\n    -Xfunction\n              Add function signature to logging messages
ECHO023=\    -Xtrace:<category>\n              Switch trace logging on for a specified category\n              (multiple categories specified via subsequent options)\n    -Xnotrace:<category>\n              Switch trace logging off for a specified category
ECHO024=\    -Xstats:<mask>\n              Generates different statistics
ECHO025=\    -Xint\n              Use interpreter to execute the program\n    -Xgc:<gc options>\n              Specify gc specific options\n    -Xem:<em options>\n              Specify em specific options\n    -Xdumpstubs\n              Writes stubs generated by LIL to disk\n    -Xparallel_jit\n              Launch compilation in parallel (default)\n    -Xno_parallel_jit\n              Do not launch compilation in parallel\n    -Xdumpfile:<file>\n              Specifies a file name for the dump\n    -XX:<name>=<value>\n              set an internal system property\n              Boolean options may be turned on with -XX:+<option>\n              and turned off with -XX:-<option>\n              Also one of {on,true,1,off,false,0} can be used.\n              Numeric options are set with -XX:<option>=<number>.\n              Numbers can include suffix 'm' or 'M' for megabytes\n              'k' or 'K' for kilobytes, and 'g' or 'G' for gigabytes\n\n              Please refer to http://harmony.apache.org/cmd_options.html\n              for available properties description
ECHO026=
ECHO027=
ECHO028=Wrong option format {0}
ECHO029=Use {0} -help to get help on command line options
ECHO030=Unknown option {0}
ECHO031=Unknown argument {0} of -Xhelp: option
ECHO032=java version "1.5.0" \npre-alpha : not complete or compatible\nsvn = r{0}, ({1}), {2}/{3}/{4}, {5} build\nhttp://harmony.apache.org
ECHO033=Apache Harmony HEAD
ECHO034=Negative or invalid heap size. Default value will be used!
ECHO035={0}can't find starter class: java.lang.VMStart.
ECHO036={0}can't find java.lang.VMStart.initialize() method.
ECHO037={0}java.lang.VMStart.initialize() method completed with an exception.
ECHO038={0}can't find java.lang.System class.
ECHO039={0}can't find java.lang.System.execShutdownSequence() method.
ECHO040={0}java.lang.System.execShutdownSequence() method completed with an exception.
ECHO041=Verifier: {0}: out of memory
ECHO042=Verifier: {0}: null pointer for free

# DIE messages
# ============

LDIE001=no handling for pin overflow
LDIE002=Can't create heap_L
LDIE003=not enough reserved space for roots
LDIE004=ldc instruction: unexpected type ({0}) of constant pool entry [{1}]
LDIE005=non-constant type is requested from constant pool : {0}
LDIE006=Class {0} has no 'Object referent' field
LDIE007=Fatal GC error: compressed references are not supported.
LDIE008=Fatal GC error: managed pointers are not supported.
LDIE009=Cannot initialize properties pool
LDIE010=Cannot initialize properties table mutex
LDIE011=Cannot lock properties table
LDIE012=Cannot unlock properties table
LDIE013=Failed to find executable location
LDIE014=Failed to determine executable parent directory
LDIE015=Failed to determine java home directory
LDIE016=Failed to get user name from the system. Error code {0}
LDIE017=Failed to get user home from the system. Error code {0}
LDIE018=class constructor has thrown an exception
LDIE019=Fatal: an access to findLoadedClass method of java.lang.Class is not provided
LDIE020=Error initializing java machine
LDIE021=Can't find method {0} {1}
LDIE022=Unknown agent loading option {0}
LDIE023={0} try to release unknown interface
LDIE024={0} cannot attach current thread
LDIE025=SingleStepLocation: not implemented ret instruction
LDIE026=Invalid enum field descriptor: {0}
LDIE027=Cannot allocate pool storage: {0} bytes of virtual memory for code or data.\nError code = {1}
LDIE028=Error: VTable pool overflow, resize is not allowed. Please, extand VTable pool size.\n
LDIE029={0} apr_palloc failed
LDIE030=This functionality is not currently supported
LDIE031=INTERNAL ERROR: Unexpected type of the argument: {0}
LDIE032=INTERNAL ERROR: Unexpected return type: {0}
LDIE033=Return type {0} is not implemented
LDIE034=This runtime support function is not implemented: f={0}, {1}
LDIE035=Cannot find Java thread using signal context
LDIE036=Unexpected exception code
LDIE037=Verifier: vf_parse_description: incorrect structure of constant pool
LDIE038=Verifier: vf_check_entry_refs: unknown check in switch
LDIE039=Verifier: CompareTypes: unknown check type in switch
LDIE040=Verifier: vf_is_valid: invalid check type
LDIE041=Verifier: vf_set_error: unknown check type
LDIE042={0} Verifier: abort!
LDIE043=ERROR: Can't determine vm module location. Please specify {0} property.
LDIE044=Not Supported
LDIE045=Not supported on this platform
LDIE046=Not supported on IA32 currently
LDIE047=Not supported on EM64T currently
LDIE048=Unexpected value of 'mode' input parameter
LDIE049=The last called function should not return
LDIE050=Unexpected helper id {0}
LDIE051=Not implemented
LDIE052=Unexpected data type
LDIE053=Unexpected java type
LDIE054=Lock table not initialized!
LDIE055=Fat monitor table is exceeded!
LDIE056=shouldn't get here
LDIE057=Unexpected stack state
LDIE058=Unknown type descriptor
LDIE059=It's impossible internal error in exception handling.
LDIE060=There is no exception.
LDIE061=Lazy exceptions are not supported on this platform
LDIE062=Unexpected type specifier
LDIE063=Exception raised while initializing helper class {0}
LDIE064=Can't add new JIT
LDIE065=Should never be called unless p_class is an array
LDIE066=Unexpected array element size: {0}
LDIE067=Alignment is supposed to be appropriate
LDIE068=Annotation parsing internal error
LDIE069=Unknown vm data type
LDIE070=Wrong index
LDIE071=Unknown property table: {0}
LDIE072=FAILED on unloading classloader: \n{0} live j.l.Class of unloaded class is de    tected: {1}
LDIE073=Unexpected kind
LDIE074=Unexpected register
LDIE075=GC: The speficied major collection algorithm doesn't exist!
LDIE076=Property value {0} is not set!
LDIE077=Please define USE_UNIQUE_MARK_SWEEP_GC macro.
LDIE078=GC: Run out GC metadata, please give it more segments!
LDIE079=Max heap size is smaller than min heap size. Please choose other values.
LDIE080=Max heap size: can't be reserved. The max size can be reserved is {0}MB
LDIE081=Out of Memory while collecting!
LDIE082=gc.base: Warning: Static NOS mapping: Can't reserve memory at address {0} for size {1} for NOS.
LDIE083=gc.base: Please not use static NOS mapping by undefining STATIC_NOS_MAPPING, or adjusting NOS_BOUNDARY value.
LDIE084=gc.base: Static NOS mapping: Can't reserve memory at address {0} for specified size {1}.
LDIE085=Outdated Code

# WARN messages
# =============

WARN001=large pages allocation failed, use -verbose:gc.lp for more info
WARN002=cp_check_class: illegal const pool class index {0}
WARN003=Attention: EnclosingMethod attribute does not imply InnerClasses presence for class {0}
WARN004=Failed to load bootstrap class {0}
WARN005=**Java exception occured during resolution under compilation
WARN006=Couldn't load GC dll {0}: missing entry point {1}
WARN007=Failure to open GC dll {0}
WARN008=Loading error {0}
WARN009=The GC did not provide {0}
WARN010=The GC did not provide live object iterator
WARN011=The GC did not provide heap iteration
WARN012=The GC did not provide finalization on exit
WARN013=Cannot load EM component from {0}
WARN014=Cannot instantiate EM
WARN015=Cannot get EM_VM interface
WARN016=GC library cannot be loaded: {0}
WARN017=VM component mismatch: the VM compresses references but the GC doesn't.
WARN018=VM component mismatch: the VM compresses references but a JIT doesn't
WARN019=VM component mismatch: the VM doesn't compress references but the GC does.
WARN020=VM component mismatch: the VM doesn't compress references but a JIT does
WARN021=Failed to initialize JNI NIO support: {0}
WARN022=Failed to import JNI NIO functions.
WARN023=Faild to initialize a "Component Manager".
WARN024=Failed to initialize JVMTI.
WARN025=Failed to resolve class {0}
WARN026=Couldn't startup Winsock 2.0 dll
WARN027=Failed to initialize system class loader.
WARN028=Failure to open JIT dll {0} {1}
WARN029=Couldn't load dll {0}: missing entry point {1}
WARN030=GetEnv requested unsupported {0} environment!! Only JVMTI is supported by VM.
WARN031=GetEnv called with unsupported interface version 0x{0}
WARN032=Failed to open agent library {0} : {1}
WARN033=No agent entry function found in library {0} : {1}
WARN034=Agent library {0} initialization function returned {1}
WARN035=Failed to open agent library {0}
WARN036=Failed to unload agent library {0} : {1}
WARN037=Zero interrupted method encountered
WARN038=JIT {0} {1} returned error {2} for exception method {3} location {4}
WARN039=JIT {0} {1} returned error {2} for catch method {3} location {4}
WARN040=ATTENTION! Could not get cause exception from lazy machinery
WARN041=Execution stack follows, consider using addr2line\n{0}
WARN042=Fatal error
WARN043=Fatal exception, terminating
WARN044={0} internal property is undefined
WARN045=ERROR: Heap size is too large for precompiled compressed mode.
WARN046=GC use large pages.
WARN047=GC use small pages.
WARN048=GC algorithm setting incorrect. Will use default value.
WARN049=GC large_page: No required number of large pages found. Please reboot.....
WARN050=GC large_page: Check that you have permissions:\nGC large_page: Control Panel->Administrative Tools->Local Security Settings->->User Rights Assignment->Lock pages in memory.\nGC large_page: Start VM as soon after reboot as possible, because large pages become fragmented and unusable after a while.\nGC large_page: Heap size should be multiple of large page size.
WARN051=GC large_page: Can't open /proc/meminfo
WARN052=GC large_page: Large pages are not supported by kernel.\nGC large_page: CONFIG_HUGETLB_PAGE and CONFIG_HUGETLBFS needs to be enabled.
WARN053=GC large_page: No large pages reserved,  Use following command: echo num> /proc/sys/vm/nr_hugepages.\nGC large_page: Do it just after kernel boot before huge pages become fragmented.
WARN054=GC large_page: Not enough free large pages, some of reserved space is already busy.
WARN055=GC large_page: Large pages can be only allocated.
WARN056=GC large_page: Can't open Mount hugetlbfs with: mount none /mnt/huge -t hugetlbfs.\nGC large_page: Check you have appropriate permissions to /mnt/huge.\nGC large_page: Use command line switch -Dgc.lp=/mnt/huge.
WARN057=GC large_page: Map failed.
WARN058=GC large_page: Large pages allocation failed.
WARN058=GC: collector[{0}]: MOS is overflowed, have to reduce NOS size.
WARN060=Generational options cannot be set with unique_algo, ignored.
WARN061=Max heap size you set is too small, reset to {0}MB
WARN062=Max heap size you set equals to zero, reset to {0}MB
WARN063=Min heap size you set is too small, reset to {0}MB
WARN064=Prefetch distance set with Prefetch disabled!
WARN065=Prefetch stride set  with Prefetch disabled!
WARN066=GC Init: TOSPACE_SIZE is too big, set it to be {0}MB
