VMCORE_0.1 {
  global :
    advance_arg_iterator;
    allocation_handle_get_class;
    array_copy_jni;
    array_first_element_offset_unboxed;
    class_alloc_via_classloader;
    class_element_size;
    class_find_class_from_loader;
    class_find_loaded;
    class_get_alignment;
    class_get_alignment_unboxed;
    class_get_allocation_handle;
    class_get_array_element_class;
    class_get_array_element_size;
    class_get_array_of_class;
    class_get_array_of_unboxed;
    class_get_boxed_data_size;
    class_get_class_loader;
    class_get_class_of_primitive_type;
    class_get_const_addr;
    class_get_const_string;
    class_get_const_string_intern_addr;
    class_get_const_type;
    class_get_cp_entry_signature;
    class_get_cp_field_type;
    class_get_declaring_class;
    class_get_depth;
    class_get_element_type_info;
    class_get_fast_instanceof_flag;
    class_get_field;
    class_get_field_by_name;
    class_get_flags;
    class_get_implements;
    class_get_inner_class;
    class_get_instance_field;
    class_get_instance_field_recursive;
    class_get_method;
    class_get_method_by_name;
    class_get_name;
    class_get_num_array_dimensions;
    class_get_number_methods;
    class_get_package_name;
    class_get_primitive_type_of_class;
    class_get_referent_offset;
    class_get_source_file_name;
    class_get_super_class;
    class_get_super_offset;
    class_get_vtable;
    class_has_non_default_finalizer;
    class_hint_is_exceptiontype;
    class_is_array;
    class_is_before_field_init;
    class_is_cp_entry_resolved;
    class_is_enum;
    class_is_finalizable;
    class_is_initialized;
    class_is_inner_class_public;
    class_is_instanceof;
    class_is_non_ref_array;
    class_is_pinned;
    class_is_primitive;
    class_is_reference;
    class_is_valuetype;
    class_iterator_advance;
    class_iterator_get_current;
    class_iterator_initialize;
    class_load_class_by_descriptor;
    class_load_class_by_name;
    class_lookup_class_by_name_using_bootstrap_class_loader;
    class_loader_load_native_lib;
    class_loader_lookup;
    class_lookup_method_recursively;
    class_needs_initialization;
    class_number_fields;
    class_number_implements;
    class_number_inner_classes;
    class_num_instance_fields;
    class_num_instance_fields_recursive;
    class_property_is_abstract;
    class_property_is_final;
    class_property_is_interface2;
    compiled_method_load;
    compress_reference;
    const_pool_get_class_name;
    const_pool_get_field_class_name;
    const_pool_get_field_descriptor;
    const_pool_get_field_name;
    const_pool_get_interface_method_class_name;
    const_pool_get_interface_method_descriptor;
    const_pool_get_interface_method_name;
    const_pool_get_method_class_name;
    const_pool_get_method_descriptor;
    const_pool_get_method_name;
    core_free;
    curr_arg;
    destroy_properties_keys;
    destroy_property_value;
    field_get_address;
    field_get_class;
    field_get_class_of_field_value;
    field_get_descriptor;
    field_get_flags;
    field_get_name;
    field_get_offset;
    field_get_track_access_flag;
    field_get_track_modification_flag;
    field_get_type;
    field_get_type_info_of_field_value;
    field_is_enumerable_reference;
    field_is_final;
    field_is_injected;
    field_is_literal;
    field_is_magic;
    field_is_private;
    field_is_public;
    field_is_reference;
    field_is_static;
    field_is_unmanaged_static;
    field_is_volatile;
    free_string_buffer;
    gc_force_gc;
    gc_free_memory;
    gc_heap_base_address;
    gc_heap_ceiling_address;
    gc_max_memory;
    gc_time_since_last_gc;
    gc_total_memory;
    get_boolean_property;
    get_curr_arg_class;
    get_file_and_line;
    get_int_property;
    get_jvalue_arg_array;
    get_method_entry_flag_address;
    get_method_exit_flag_address;
    get_numerical_property;
    get_properties_keys;
    get_properties_keys_staring_with;
    get_property;
    get_size_property;
    get_system_class_class;
    get_system_object_class;
    get_system_string_class;
    get_thread_ptr;
    get_vm_interface;
    initialize_arg_list_iterator;
    init_log_system;
    is_enabled;
    is_info_enabled;
    is_it_finalize_thread;
    is_log_enabled;
    is_property_set;
    is_trace_enabled;
    is_warn_enabled;
    Java_java_lang_ClassLoader_defineClass0;
    Java_java_lang_ClassLoader_findLoadedClass;
    Java_java_lang_ClassLoader_registerInitiatedClass;
    Java_java_lang_EMThreadSupport_getTimeout;
    Java_java_lang_EMThreadSupport_needProfilerThreadSupport;
    Java_java_lang_EMThreadSupport_onTimeout;
    Java_java_lang_FinalizerThread_doFinalization;
    Java_java_lang_FinalizerThread_fillFinalizationQueueOnExit;
    Java_java_lang_FinalizerThread_finalizerShutDown;
    Java_java_lang_FinalizerThread_getFinalizersQuantity;
    Java_java_lang_FinalizerThread_getNativeFinalizerThreadFlagFromVM;
    Java_java_lang_FinalizerThread_getProcessorsQuantity;
    Java_java_lang_FinalizerThread_isNativePartEnabled;
    Java_java_lang_FinalizerThread_runFinalizationInNativeFinalizerThreads;
    Java_java_lang_reflect_VMField_getBoolean;
    Java_java_lang_reflect_VMField_getByte;
    Java_java_lang_reflect_VMField_getChar;
    Java_java_lang_reflect_VMField_getDouble;
    Java_java_lang_reflect_VMField_getFloat;
    Java_java_lang_reflect_VMField_getInt;
    Java_java_lang_reflect_VMField_getLong;
    Java_java_lang_reflect_VMField_getObject;
    Java_java_lang_reflect_VMField_getShort;
    Java_java_lang_reflect_VMField_setBoolean;
    Java_java_lang_reflect_VMField_setByte;
    Java_java_lang_reflect_VMField_setChar;
    Java_java_lang_reflect_VMField_setDouble;
    Java_java_lang_reflect_VMField_setFloat;
    Java_java_lang_reflect_VMField_setInt;
    Java_java_lang_reflect_VMField_setLong;
    Java_java_lang_reflect_VMField_setObject;
    Java_java_lang_reflect_VMField_setShort;
    Java_java_lang_reflect_VMReflection_getExceptionTypes;
    Java_java_lang_reflect_VMReflection_getFieldType;
    Java_java_lang_reflect_VMReflection_getMethodReturnType;
    Java_java_lang_reflect_VMReflection_getParameterTypes;
    Java_java_lang_reflect_VMReflection_invokeMethod;
    Java_java_lang_reflect_VMReflection_newArrayInstance;
    Java_java_lang_reflect_VMReflection_newClassInstance;
    Java_java_lang_Runtime_00024SubProcess_00024SubInputStream_available0;
    Java_java_lang_Runtime_00024SubProcess_00024SubInputStream_close0;
    Java_java_lang_Runtime_00024SubProcess_00024SubInputStream_readInputByte0;
    Java_java_lang_Runtime_00024SubProcess_00024SubOutputStream_close0;
    Java_java_lang_Runtime_00024SubProcess_00024SubOutputStream_flush0;
    Java_java_lang_Runtime_00024SubProcess_00024SubOutputStream_writeOutputByte0;
    Java_java_lang_Runtime_00024SubProcess_00024SubOutputStream_writeOutputBytes0;
    Java_java_lang_Runtime_00024SubProcess_close0;
    Java_java_lang_Runtime_00024SubProcess_createProcess0;
    Java_java_lang_Runtime_00024SubProcess_destroy0;
    Java_java_lang_Runtime_00024SubProcess_getState0;
    Java_java_lang_System_rethrow;
    Java_java_lang_System_setErrUnsecure;
    Java_java_lang_System_setInUnsecure;
    Java_java_lang_System_setOutUnsecure;
    Java_java_lang_VMClassRegistry_getClassNative;
    Java_java_lang_VMClassRegistry_getClassLoader0;
    Java_java_lang_VMClassRegistry_getComponentType;
    Java_java_lang_VMClassRegistry_getDeclaredClasses;
    Java_java_lang_VMClassRegistry_getDeclaredConstructors;
    Java_java_lang_VMClassRegistry_getDeclaredFields;
    Java_java_lang_VMClassRegistry_getDeclaredMethods;
    Java_java_lang_VMClassRegistry_getDeclaringClass;
    Java_java_lang_VMClassRegistry_getEnclosingClass;
    Java_java_lang_VMClassRegistry_getEnclosingMember;
    Java_java_lang_VMClassRegistry_getInterfaces;
    Java_java_lang_VMClassRegistry_getModifiers;
    Java_java_lang_VMClassRegistry_getName;
    Java_java_lang_VMClassRegistry_getSimpleName;
    Java_java_lang_VMClassRegistry_getSuperclass;
    Java_java_lang_VMClassRegistry_getSystemPackages;
    Java_java_lang_VMClassRegistry_initializeClass;
    Java_java_lang_VMClassRegistry_isArray;
    Java_java_lang_VMClassRegistry_isAssignableFrom;
    Java_java_lang_VMClassRegistry_isInstance;
    Java_java_lang_VMClassRegistry_isPrimitive;
    Java_java_lang_VMClassRegistry_linkClass;
    Java_java_lang_VMClassRegistry_loadArray;
    Java_java_lang_VMClassRegistry_loadBootstrapClass;
    Java_java_lang_VMClassRegistry_loadLibrary;
    Java_java_lang_VMExecutionEngine_currentTimeMillis;
    Java_java_lang_VMExecutionEngine_exit;
    Java_java_lang_VMExecutionEngine_getAssertionStatus;
    Java_java_lang_VMExecutionEngine_getAvailableProcessors;
    Java_java_lang_VMExecutionEngine_getProperties;
    Java_java_lang_VMExecutionEngine_mapLibraryName;
    Java_java_lang_VMExecutionEngine_nanoTime;
    Java_java_lang_VMExecutionEngine_traceInstructions;
    Java_java_lang_VMExecutionEngine_traceMethodCalls;
    Java_java_lang_VMMemoryManager_arrayCopy;
    Java_java_lang_VMMemoryManager_clone;
    Java_java_lang_VMMemoryManager_getFreeMemory;
    Java_java_lang_VMMemoryManager_getIdentityHashCode;
    Java_java_lang_VMMemoryManager_getMaxMemory;
    Java_java_lang_VMMemoryManager_getTotalMemory;
    Java_java_lang_VMMemoryManager_runGC;
    Java_java_lang_VMThreadManager_currentThreadNative;
    Java_java_lang_VMThreadManager_getState;
    Java_java_lang_VMThreadManager_holdsLock;
    Java_java_lang_VMThreadManager_init;
    Java_java_lang_VMThreadManager_interrupt;
    Java_java_lang_VMThreadManager_isAlive;
    Java_java_lang_VMThreadManager_isInterrupted__;
    Java_java_lang_VMThreadManager_isInterrupted__Ljava_lang_Thread_2;
    Java_java_lang_VMThreadManager_join;
    Java_java_lang_VMThreadManager_notify;
    Java_java_lang_VMThreadManager_notifyAll;
    Java_java_lang_VMThreadManager_resume;
    Java_java_lang_VMThreadManager_setPriority;
    Java_java_lang_VMThreadManager_sleep;
    Java_java_lang_VMThreadManager_start;
    Java_java_lang_VMThreadManager_stop;
    Java_java_lang_VMThreadManager_suspend;
    Java_java_lang_VMThreadManager_wait;
    Java_java_lang_VMThreadManager_yield;
    Java_java_security_AccessController_getStackDomains;
    Java_java_util_concurrent_atomic_AtomicLong_VMSupportsCS8;
    Java_java_util_concurrent_locks_LockSupport_park;
    Java_java_util_concurrent_locks_LockSupport_parkNanos;
    Java_java_util_concurrent_locks_LockSupport_parkUntil;
    Java_java_util_concurrent_locks_LockSupport_unpark;
    Java_org_apache_harmony_drlvm_thread_ThreadHelper_getThreadIdOffset;
    Java_org_apache_harmony_drlvm_thread_ThreadHelper_getLockWordOffset;
    Java_org_apache_harmony_drlvm_thread_ThreadHelper_getThreadJavaObjectOffset;
    Java_org_apache_harmony_drlvm_VMHelperFastPath_getVtableIntfTableOffset;
    Java_org_apache_harmony_drlvm_VMHelperFastPath_getVtableIntfTypeOffset;
    Java_org_apache_harmony_drlvm_VMHelperFastPath_getVtableSuperclassesOffset;
    Java_org_apache_harmony_drlvm_VMHelper_getCompressedModeObjectBaseOffset;
    Java_org_apache_harmony_drlvm_VMHelper_getCompressedModeVTableBaseOffset;
    Java_org_apache_harmony_drlvm_VMHelper_getPointerTypeSize;
    Java_org_apache_harmony_drlvm_VMHelper_isCompressedRefsMode;
    Java_org_apache_harmony_drlvm_VMHelper_isCompressedVTableMode;
    Java_org_apache_harmony_drlvm_VMHelper_getObjectVtableOffset;
    Java_org_apache_harmony_drlvm_VMHelper_getVtableClassOffset;
    Java_org_apache_harmony_drlvm_VMHelper_getClassJLCHanldeOffset;
    Java_org_apache_harmony_kernel_vm_VM_getClassLoader;
    Java_org_apache_harmony_lang_management_ClassLoadingMXBeanImpl_getLoadedClassCountImpl;
    Java_org_apache_harmony_lang_management_ClassLoadingMXBeanImpl_getTotalLoadedClassCountImpl;
    Java_org_apache_harmony_lang_management_ClassLoadingMXBeanImpl_getUnloadedClassCountImpl;
    Java_org_apache_harmony_lang_management_ClassLoadingMXBeanImpl_isVerboseImpl;
    Java_org_apache_harmony_lang_management_ClassLoadingMXBeanImpl_setVerboseImpl;
    Java_org_apache_harmony_lang_management_CompilationMXBeanImpl_getTotalCompilationTimeImpl;
    Java_org_apache_harmony_lang_management_CompilationMXBeanImpl_isCompilationTimeMonitoringSupportedImpl;
    Java_org_apache_harmony_lang_management_CompilationMXBeanImpl_isJITEnabled;
    Java_org_apache_harmony_lang_management_GarbageCollectorMXBeanImpl_getCollectionCountImpl;
    Java_org_apache_harmony_lang_management_GarbageCollectorMXBeanImpl_getCollectionTimeImpl;
    Java_org_apache_harmony_lang_management_MemoryManagerMXBeanImpl_createMemoryPools;
    Java_org_apache_harmony_lang_management_MemoryManagerMXBeanImpl_isValidImpl;
    Java_org_apache_harmony_lang_management_MemoryMXBeanImpl_createMemoryManagers;
    Java_org_apache_harmony_lang_management_MemoryMXBeanImpl_getHeapMemoryUsageImpl;
    Java_org_apache_harmony_lang_management_MemoryMXBeanImpl_getNonHeapMemoryUsageImpl;
    Java_org_apache_harmony_lang_management_MemoryMXBeanImpl_getObjectPendingFinalizationCountImpl;
    Java_org_apache_harmony_lang_management_MemoryMXBeanImpl_isVerboseImpl;
    Java_org_apache_harmony_lang_management_MemoryMXBeanImpl_setVerboseImpl;
    Java_org_apache_harmony_lang_management_MemoryNotificationThread_processNotificationLoop;
    Java_org_apache_harmony_lang_management_MemoryNotificationThreadShutdown_sendShutdownNotification;
    Java_org_apache_harmony_lang_management_MemoryPoolMXBeanImpl_getCollectionUsageImpl;
    Java_org_apache_harmony_lang_management_MemoryPoolMXBeanImpl_getCollectionUsageThresholdCountImpl;
    Java_org_apache_harmony_lang_management_MemoryPoolMXBeanImpl_getCollectionUsageThresholdImpl;
    Java_org_apache_harmony_lang_management_MemoryPoolMXBeanImpl_getPeakUsageImpl;
    Java_org_apache_harmony_lang_management_MemoryPoolMXBeanImpl_getUsageImpl;
    Java_org_apache_harmony_lang_management_MemoryPoolMXBeanImpl_getUsageThresholdCountImpl;
    Java_org_apache_harmony_lang_management_MemoryPoolMXBeanImpl_getUsageThresholdImpl;
    Java_org_apache_harmony_lang_management_MemoryPoolMXBeanImpl_isCollectionUsageThresholdExceededImpl;
    Java_org_apache_harmony_lang_management_MemoryPoolMXBeanImpl_isCollectionUsageThresholdSupportedImpl;
    Java_org_apache_harmony_lang_management_MemoryPoolMXBeanImpl_isUsageThresholdExceededImpl;
    Java_org_apache_harmony_lang_management_MemoryPoolMXBeanImpl_isUsageThresholdSupportedImpl;
    Java_org_apache_harmony_lang_management_MemoryPoolMXBeanImpl_isValidImpl;
    Java_org_apache_harmony_lang_management_MemoryPoolMXBeanImpl_resetPeakUsageImpl;
    Java_org_apache_harmony_lang_management_MemoryPoolMXBeanImpl_setCollectionUsageThresholdImpl;
    Java_org_apache_harmony_lang_management_MemoryPoolMXBeanImpl_setUsageThresholdImpl;
    Java_org_apache_harmony_lang_management_RuntimeMXBeanImpl_getNameImpl;
    Java_org_apache_harmony_lang_management_RuntimeMXBeanImpl_getStartTimeImpl;
    Java_org_apache_harmony_lang_management_RuntimeMXBeanImpl_getUptimeImpl;
    Java_org_apache_harmony_lang_management_RuntimeMXBeanImpl_isBootClassPathSupportedImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_createThreadInfoImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_findMonitorDeadlockedThreadsImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_getAllThreadIdsImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_getDaemonThreadCountImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_getObjectThreadIsBlockedOnImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_getPeakThreadCountImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_getThreadBlockedCountImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_getThreadBlockedTimeImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_getThreadByIdImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_getThreadCountImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_getThreadCpuTimeImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_getThreadOwningObjectImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_getThreadUserTimeImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_getThreadWaitedCountImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_getThreadWaitedTimeImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_getTotalStartedThreadCountImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_isCurrentThreadCpuTimeSupportedImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_isSuspendedImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_isThreadContentionMonitoringEnabledImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_isThreadContentionMonitoringSupportedImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_isThreadCpuTimeEnabledImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_isThreadCpuTimeSupportedImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_resetPeakThreadCountImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_setThreadContentionMonitoringEnabledImpl;
    Java_org_apache_harmony_lang_management_ThreadMXBeanImpl_setThreadCpuTimeEnabledImpl;
    Java_org_apache_harmony_util_concurrent_Atomics_arrayBaseOffset;
    Java_org_apache_harmony_util_concurrent_Atomics_arrayIndexScale;
    Java_org_apache_harmony_util_concurrent_Atomics_compareAndSetBoolean___3ZIZZ;
    Java_org_apache_harmony_util_concurrent_Atomics_compareAndSetBoolean__Ljava_lang_Object_2JZZ;
    Java_org_apache_harmony_util_concurrent_Atomics_compareAndSetInt___3IIII;
    Java_org_apache_harmony_util_concurrent_Atomics_compareAndSetInt__Ljava_lang_Object_2JII;
    Java_org_apache_harmony_util_concurrent_Atomics_compareAndSetLong___3JIJJ;
    Java_org_apache_harmony_util_concurrent_Atomics_compareAndSetLong__Ljava_lang_Object_2JJJ;
    Java_org_apache_harmony_util_concurrent_Atomics_compareAndSetObject___3Ljava_lang_Object_2ILjava_lang_Object_2Ljava_lang_Object_2;
    Java_org_apache_harmony_util_concurrent_Atomics_compareAndSetObject__Ljava_lang_Object_2JLjava_lang_Object_2Ljava_lang_Object_2;
    Java_org_apache_harmony_util_concurrent_Atomics_getFieldOffset;
    Java_org_apache_harmony_util_concurrent_Atomics_getIntVolatile__Ljava_lang_Object_2J;
    Java_org_apache_harmony_util_concurrent_Atomics_getLongVolatile__Ljava_lang_Object_2J;
    Java_org_apache_harmony_util_concurrent_Atomics_getObjectVolatile__Ljava_lang_Object_2J;
    Java_org_apache_harmony_util_concurrent_Atomics_setIntVolatile__Ljava_lang_Object_2JI;
    Java_org_apache_harmony_util_concurrent_Atomics_setLongVolatile__Ljava_lang_Object_2JJ;
    Java_org_apache_harmony_util_concurrent_Atomics_setObjectVolatile__Ljava_lang_Object_2JLjava_lang_Object_2;
    Java_org_apache_harmony_vm_VMDebug_print;
    Java_org_apache_harmony_vm_VMGenericsAndAnnotations_getDeclaredAnnotations__J;
    Java_org_apache_harmony_vm_VMGenericsAndAnnotations_getDeclaredAnnotations__Ljava_lang_Class_2;
    Java_org_apache_harmony_vm_VMGenericsAndAnnotations_getDefaultValue;
    Java_org_apache_harmony_vm_VMGenericsAndAnnotations_getParameterAnnotations;
    Java_org_apache_harmony_vm_VMGenericsAndAnnotations_getSignature__J;
    Java_org_apache_harmony_vm_VMGenericsAndAnnotations_getSignature__Ljava_lang_Class_2;
    Java_org_apache_harmony_vm_VMStack_getCallerClass;
    Java_org_apache_harmony_vm_VMStack_getClasses;
    Java_org_apache_harmony_vm_VMStack_getStackClasses;
    Java_org_apache_harmony_vm_VMStack_getStackState;
    Java_org_apache_harmony_vm_VMStack_getStackTrace;
    Java_org_apache_harmony_vm_VMStack_getThreadStackTrace;
    JIT_execute_method_default;
    jit_get_comp_handle;
    jit_may_inline_object_synchronization;
    jni_class_from_handle;
    jni_class_loader_from_handle;
    JNI_CreateJavaVM;
    jni_get_class_handle;
    JNI_GetCreatedJavaVMs;
    JNI_GetDefaultJavaVMInitArgs;
    jthread_attach;
    jthread_cancel_all;
    jthread_clear_interrupted;
    jthread_create;
    jthread_create_with_function;
    jthread_detach;
    jthread_exception_stop;
    jthread_get_all_threads;
    jthread_get_blocked_count;
    jthread_get_contended_monitor;
    jthread_get_deadlocked_threads;
    jthread_get_id;
    jthread_get_java_thread;
    jthread_get_JNI_env;
    jthread_get_jvmti_local_storage;
    jthread_get_jvmti_state;
    jthread_get_lock_owner;
    jthread_get_lock_recursion;
    jthread_get_native_thread;
    jthread_get_owned_monitors;
    jthread_get_peak_thread_count;
    jthread_get_priority;
    jthread_get_thread;
    jthread_get_thread_blocked_time;
    jthread_get_thread_blocked_times_count;
    jthread_get_thread_count;
    jthread_get_thread_cpu_time;
    jthread_get_thread_cpu_timer_info;
    jthread_get_thread_user_cpu_time;
    jthread_get_thread_waited_time;
    jthread_get_thread_waited_times_count;
    jthread_get_tm_data;
    jthread_get_total_started_thread_count;
    jthread_get_vm_thread_ptr_safe;
    jthread_get_waited_count;
    jthread_get_wait_monitor;
    jthread_holds_lock;
    jthread_interrupt;
    jthread_is_current_thread_cpu_time_supported;
    jthread_is_interrupted;
    jthread_is_thread_contention_monitoring_enabled;
    jthread_is_thread_contention_monitoring_supported;
    jthread_is_thread_cpu_time_enabled;
    jthread_is_thread_cpu_time_supported;
    jthread_iterator_create;
    jthread_iterator_next;
    jthread_iterator_release;
    jthread_iterator_reset;
    jthread_iterator_size;
    jthread_java_detach;
    jthread_monitor_enter;
    jthread_monitor_exit;
    jthread_monitor_init;
    jthread_monitor_notify;
    jthread_monitor_notify_all;
    jthread_monitor_timed_wait;
    jthread_monitor_try_enter;
    jthread_monitor_wait;
    jthread_park;
    jthread_park_until;
    jthread_raw_monitor_create;
    jthread_raw_monitor_destroy;
    jthread_raw_monitor_enter;
    jthread_raw_monitor_exit;
    jthread_raw_monitor_notify;
    jthread_raw_monitor_notify_all;
    jthread_raw_monitor_try_enter;
    jthread_raw_monitor_wait;
    jthread_reset_peak_thread_count;
    jthread_resume;
    jthread_resume_all;
    jthread_self;
    jthread_set_priority;
    jthread_set_thread_contention_monitoring_enabled;
    jthread_set_thread_cpu_time_enabled;
    jthread_set_tm_data;
    jthread_sleep;
    jthread_stop;
    jthread_suspend;
    jthread_suspend_all;
    jthread_thread_init;
    jthread_timed_park;
    jthread_unpark;
    jthread_vm_detach;
    jthread_wait_for_all_nondaemon_threads;
    jthread_yield;
    jvmti_process_native_method_bind_event;
    jvmti_send_contended_enter_or_entered_monitor_event;
    jvmti_send_thread_start_end_event;
    jvmti_send_waited_monitor_event;
    jvmti_send_wait_monitor_event;
    log4cxx_from_c;
    method_allocate_code_block;
    method_allocate_data_block;
    method_allocate_info_block;
    method_allocate_jit_data_block;
    method_args_get_number;
    method_args_get_type_info;
    method_args_has_this;
    method_args_is_managed_pointer;
    method_find_overridden_method;
    method_get_argument_list;
    method_get_byte_code_addr;
    method_get_byte_code_size;
    method_get_class;
    method_get_code_block_addr_jit;
    method_get_code_block_addr_jit_new;
    method_get_code_block_size_jit;
    method_get_code_block_size_jit_new;
    method_get_descriptor;
    method_get_first_method_jit;
    method_get_flags;
    method_get_handler_info;
    method_get_indirect_address;
    method_get_info_block_jit;
    method_get_info_block_size_jit;
    method_get_JIT_id;
    method_get_max_locals;
    method_get_max_stack;
    method_get_method_jit;
    method_get_name;
    method_get_native_func_addr;
    method_get_next_method_jit;
    method_get_num_handlers;
    method_get_offset;
    method_get_return_type;
    method_get_return_type_class;
    method_get_side_effects;
    method_get_signature;
    method_get_throws;
    method_has_annotation;
    method_is_abstract;
    method_is_fake;
    method_is_final;
    method_is_java;
    method_is_native;
    method_is_no_inlining;
    method_is_overridden;
    method_is_private;
    method_is_public;
    method_is_require_security_object;
    method_is_static;
    method_is_strict;
    method_is_synchronized;
    method_iterator_advance;
    method_iterator_get_current;
    method_iterator_initialize;
    method_lock;
    method_number_throws;
    method_ret_type_get_type_info;
    method_ret_type_is_managed_pointer;
    method_set_inline_assumption;
    method_set_num_target_handlers;
    method_set_relocatable;
    method_set_side_effects;
    method_set_target_handler_info;
    method_unlock;
    method_uses_fastcall;
    method_vars_get_number;
    method_vars_get_type_info;
    method_vars_is_managed_pointer;
    method_vars_is_pinned;
    object_get_vtable_offset;
    port_atomic_cas64;
    port_vmem_page_sizes;
    port_CPUs_number;
    resolve_class;
    resolve_class_new;
    resolve_field;
    resolve_interface_method;
    resolve_method;
    resolve_nonstatic_field;
    resolve_special_method;
    resolve_static_field;
    resolve_static_method;
    resolve_virtual_method;
    set_header_format;
    set_logging_level_from_file;
    set_native_finalizer_thread_flag;
    set_native_ref_enqueue_thread_flag;
    set_out;
    set_property;
    set_thread_specific_out;
    set_threshold;
    shutdown_log_system;
    st_alloc_frames;
    type_info_create_from_java_descriptor;
    type_info_get_class;
    type_info_get_class_no_exn;
    type_info_get_method_sig;
    type_info_get_num_array_dimensions;
    type_info_get_type;
    type_info_get_type_info;
    type_info_get_type_name;
    type_info_is_general_array;
    type_info_is_method_pointer;
    type_info_is_primitive;
    type_info_is_reference;
    type_info_is_resolved;
    type_info_is_unboxed;
    type_info_is_unmanaged_pointer;
    type_info_is_vector;
    type_info_is_void;
    uncompress_compressed_reference;
    unset_property;
    vector_first_element_offset;
    vector_first_element_offset_class_handle;
    vector_first_element_offset_unboxed;
    vector_first_element_offset_vtable_handle;
    vector_get_element_address_ref;
    vector_get_length;
    vector_length_offset;
    verify_object_header;
    vm_attach;
    vm_check_if_monitor;
    vm_compile_method;
    vm_create_helper_for_function;
    vm_detach;
    vm_enqueue_reference;
    vm_enumerate_compressed_root_reference;
    vm_enumerate_root_interior_pointer;
    vm_enumerate_root_reference;
    vm_enumerate_root_set_all_threads;
    vm_enumerate_weak_root_reference;
    vm_finalize_object;
    vm_gc_lock_enum;
    vm_gc_lock_init;
    vm_gc_unlock_enum;
    vm_get_gc_thread_local;
    vm_get_rt_support_addr;
    vm_get_rt_support_addr_optimized;
    vm_get_rt_support_stub;
    vm_get_vtable_base;
    vm_get_vtable_ptr_size;
    vm_heap_base_address;
    vm_heap_ceiling_address;
    vm_heavy_finalizer_block_mutator;
    vm_helper_get_by_name;
    vm_helper_get_calling_convention;
    vm_helper_get_interruptibility_kind;
    vm_helper_get_magic_helper;
    vm_helper_get_name;
    vm_helper_get_numargs;
    vm_helper_register_magic_helper;
    vm_hint_finalize;
    vm_instanceof_class;
    vm_iterate_object;
    vm_load_jit;
    vm_managed_calling_convention;
    vm_max_fast_instanceof_depth;
    vm_notify_obj_alive;
    vm_number_of_gc_bytes_in_thread_local;
    vm_number_of_gc_bytes_in_vtable;
    vm_objects_are_equal;
    vm_patch_code_block;
    vm_reclaim_native_objs;
    vm_recompile_method;
    vm_references_are_compressed;
    vm_register_jit_extended_class_callback;
    vm_register_jit_overridden_method_callback;
    vm_register_jit_recompiled_method_callback;
    vm_resolve_class;
    vm_resolve_class_new;
    vm_resume_threads_after;
    vm_vector_size;
    vm_vtable_pointers_are_compressed;
    vtable_get_class;
    vtable_get_super_array_offset;

# Workaround for LogParams::release C++ function used by EM
    *LogParams*;
# Workaround for EncoderBase used by JIT
    *EncoderBase*;
# Workaround for encoder API used by JIT
    *getOpndKindString*;
    *getOpndSize*;
    *getRegName*;
    *getOpndKind*;
# Workaround for VM_Global_State used by GC_GEN
    *VM_Global_State*;
# Workaround for apr API used by GC_GEN
    apr_atomic_dec32;
    apr_atomic_inc32;
    apr_atomic_cas32;
    apr_time_now;
    apr_atomic_casptr;
# Workaround for API used by GC_CC
    apr_atomic_xchg32;
    *MemoryPool*;
# Workaround for ManagedObject::_tag_pointer used in interpreter
    *ManagedObject*;
# Workaround for C++ functions unspecified in interface used by interpreter
    *class_alloc_new_object*;
    *oh_allocate_local_handle*;
    *vm_instantiate_cp_string_resolved*;
    *vm_new_vector_primitive*;
    *vm_new_vector*;
    *m2n_get_last_frame*;
    *get_current_thread_exception*;
    *class_name_get_java_name*;
    *exn_create*;
    *exn_raised*;
    *vm_instanceof*;
    *vm_new_vector*;
    *class_initialize*;
    *exn_raise_object*;
    *m2n_set_last_frame*;
    *get_jni_native_intf*;
    *oh_enumerate_handles*;
    *m2n_get_local_handles*;
    *m2n_set_local_handles*;
    *m2n_get_previous_frame*;
    *classloader_find_native*;
    *class_name_get_java_name*;
    *get_available_stack_size*;
    *free_local_object_handles*;
    *vm_ti_enumerate_stack_root*;
    *class_lookup_method_recursive*;
    *jvmti_process_frame_pop_event*;
    *check_current_thread_exception*;
    *clear_current_thread_exception*;
    *jvmti_process_method_exit_event*;
    *jvmti_process_single_step_event*;
    *jvmti_process_method_entry_event*;
    *jvmti_process_field_modification_event*;
    *class_throw_linking_error_for_interpreter*;
    *jvmti_process_interpreter_breakpoint_event*;
    *jvmti_interpreter_exception_event_callback_call*;
    *vm_enumerate_root_set_single_thread_not_on_stack*;
    *jvmti_interpreter_exception_catch_event_callback_call*;
    *NativeObjectHandles*;
    *interpreter_table*;
    _tag_pointer;
  local : *;
};
