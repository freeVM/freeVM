HYTHR_0.1 {
    global :
get_tls_helper;
hythread_detach;
hythread_tls_alloc;
hythread_sleep_interruptable;
hythread_cancel;
hythread_monitor_enter;
hythread_monitor_notify_all;
hythread_attach;
hythread_attach_ex;
hythread_monitor_destroy;
hythread_monitor_num_waiting;
hythread_interrupted;
hythread_park;
hythread_monitor_init_with_name;
hythread_monitor_try_enter;
hythread_self;
hythread_tls_free;
hythread_yield;
hythread_suspend;
hythread_interrupt;
hythread_tls_set;
hythread_create;
hythread_monitor_wait;
hythread_monitor_wait_interruptable;
hythread_monitor_exit;
hythread_set_priority;
hythread_unpark;
hythread_sleep;
hythread_global;
hythread_tls_alloc_with_finalizer;
hythread_monitor_wait_timed;
hythread_resume;
hythread_monitor_notify;
hythread_get_priority;
hythread_tls_get;
hythread_tls_get_request_offset;
hythread_tls_get_offset;
hythread_global_lock;
hythread_global_unlock;
hythread_attach_to_group;
hythread_create_with_group;
hythread_clear_interrupted_other;
hythread_join;
hythread_join_timed;
hythread_join_interruptable;
hythread_get_self_id;
hythread_get_id;
hythread_get_thread;
hythread_get_thread_times;
hythread_struct_init;
hythread_cancel_all;
hythread_group_create;
hythread_group_release;
hythread_group_get_list;
hythread_get_private_data;
hythread_set_private_data;
hythread_is_suspend_enabled;
hythread_suspend_enable;
hythread_suspend_disable;
hythread_exception_safe_point;
hythread_safe_point;
hythread_suspend_other;
hythread_set_safepoint_callback;
hythread_suspend_all;
hythread_resume_all;
hythread_iterator_create;
hythread_iterator_release;
hythread_iterator_reset;
hythread_iterator_reset;
hythread_iterator_next;
hythread_iterator_has_next;
hythread_iterator_size;
hythread_thin_monitor_create;
hythread_thin_monitor_enter;
hythread_thin_monitor_try_enter;
hythread_thin_monitor_exit;
hythread_thin_monitor_wait;
hythread_thin_monitor_wait_timed;
hythread_thin_monitor_wait_interruptable;
hythread_thin_monitor_notify;
hythread_thin_monitor_notify_all;
hythread_thin_monitor_destroy;
hythread_thin_monitor_get_owner;
hythread_add_task;
hythread_get_function_pointer;
hythread_get_data_pointer;
hythread_get_next_task;
hythread_destroy_task_iterator;
hythread_create_task_iterator;
hythread_init_task_manager;
hythread_destroy_task_manager;
hythread_join_all_task;
hythread_shutdown_after_execute_all_task;
hythread_get_thread_count;
hythread_get_task_count;
hysem_post;
hysem_wait;
hysem_destroy;
hycond_create;
hycond_wait;
hycond_wait_timed;
hycond_wait_timed_raw;
hycond_wait_interruptable;
hycond_notify;
hycond_notify_all;
hycond_destroy;
hylatch_create;
hylatch_wait;
hylatch_wait_timed;
hylatch_wait_interruptable;
hylatch_set;
hylatch_count_down;
hylatch_get_count;
hylatch_destroy;
hysem_create;
hysem_wait_timed;
hysem_wait_interruptable;
hysem_getvalue;
hysem_set;
hymutex_create;
hymutex_lock;
hymutex_trylock;
hymutex_unlock;
hymutex_destroy;
hythread_exit;

hythread_is_alive;
hythread_init;
hythread_shutdown;
hythread_lib_create;
hythread_lib_destroy;
hythread_lib_lock;
hythread_lib_unlock;
set_safepoint_callback;

release_start_lock;
acquire_start_lock;
inflate_lock;
is_fat_lock;
owns_thin_lock;
unreserve_lock;
set_suspend_disable;
reset_suspend_disable;
hythread_is_blocked_on_monitor_enter;
hythread_is_waiting;
hythread_is_in_native;
hythread_is_suspended;
hythread_is_parked;
hythread_is_in_monitor_wait;
hythread_is_sleeping;
hythread_is_waiting_with_timeout;
hythread_is_waiting_indefinitely;
hythread_is_runnable;
hythread_is_terminated;
hythread_thin_monitor_get_recursion;
array_add;
array_create;
array_delete;
array_get;
get_java_thread_group;

Java_org_apache_harmony_drlvm_thread_ThreadHelper_getThreadIdOffset;

local: *;
};
