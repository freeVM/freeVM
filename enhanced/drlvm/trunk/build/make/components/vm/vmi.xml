<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!--
Author: Marina V. Goldburt, Dmitry B. Yershov
Version: $Revision: 1.4.2.4 $
-->
<!--
    This is build descriptor for the component "vm.vmi".

    Please refer to make/components/README.txt for details about the component
    build descriptor structure.
  -->

<project name="vm.vmi">
    <target name="init" depends="common_vm">
        <property name="build.depends" value="extra.apr,
                                              vm.vmcore" />
        <property name="outtype" value="shared" />
        <property name="libname" value="vmi" />
        <property name="src" location="${build.vm.home}/vmi/src" />

        <compiler id="cpp.compiler" extends="common.cpp.compiler">
            <includepath>
                <pathelement location="${extra.apr.includes}" />
                <dirset dir="${build.vm.home}">
                    <include name="vmcore/include" />
                    <include name="vmcore/src/util/win/include" if="is.windows"/>
                    <include name="vmcore/src/util/linux/include" if="is.unix"/>
                </dirset>
                <pathelement location="${external.dep.CLASSLIB.includes}" />
            </includepath>

            <fileset dir="${src}">
                <include name="*.cpp" />
            </fileset>

            <!--select os="win" arch="ia32">
                <defineset define="_STATIC_CPPLIB" />
            </select-->
        </compiler>

        <linker id="linker" extends="common.linker">
            <linkerarg value="/export:VMI_GetVMIFromJavaVM" if="is.windows"/>
            <linkerarg value="/export:VMI_GetVMIFromJNIEnv" if="is.windows"/>
            <libset libs="${vm.vmcore.lib}" dir="${vm.vmcore.libdir}" if="is.windows"/>

            <linkerarg value="--version-script,${src}/vmi.exp" if="is.unix"/>

            <linkerarg value="/NODEFAULTLIB:libcmtd.lib" if="is.windows" unless="is.cfg.release"/>
            <syslibset libs="msvcrtd" if="is.windows" unless="is.cfg.release"/>

            <linkerarg value="/NODEFAULTLIB:libcmt.lib" if="is.windows" unless="is.cfg.debug"/>
            <syslibset libs="msvcrt" if="is.windows" unless="is.cfg.debug"/>

            <libset libs="hyzip, hypool, hyprt"
                        dir="${external.dep.CLASSLIB.libdir}" if="is.windows"/>
            <libset libs="hyzip, hypool"
                        dir="${external.dep.CLASSLIB.libdir}" if="is.unix"/>
            <libset libs="hyprt"
                        dir="${external.dep.CLASSLIB.dlldir}" if="is.unix"/>
        </linker>
    </target>
</project>
