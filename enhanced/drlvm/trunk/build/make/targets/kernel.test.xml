<!--
     Licensed to the Apache Software Foundation (ASF) under one or more
     contributor license agreements.  See the NOTICE file distributed with
     this work for additional information regarding copyright ownership.
     The ASF licenses this file to You under the Apache License, Version 2.0
     (the "License"); you may not use this file except in compliance with
     the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<project name="KERNEL TESTS">

    <property name="kernel.test.javasrc" location="${build.VM.home}/tests/kernel" />
    <property name="kernel.test.dir" location="${build.semi.dir}/kernel.tests"/>
    <property name="test.resource.path" location="${kernel.test.dir}/resources"/>
    <property name="test.class.path" location="${kernel.test.dir}/classes"/>
    
    <property name="test.jvm.exe" value="${build.deploy.dir}/jdk/jre/bin/java"/>
    <property file="test.properties"/>

    <target name="kernel.test" 
        depends="compile-kernel-test, run-kernel-test, report-kernel-test, check-kernel-test"/>
    
    <target name="run-kernel-test" depends="-prepare-kernel-test">
        <condition property="kernel.test.continue" value="true" else="false">
            <isfalse value="${kernel.test.failfast}"/>
        </condition>
        <for list="${test.mode}" param="mode"
            trim="true" keepgoing="${kernel.test.continue}">
            <sequential>
                <antcall target="-run-kernel-test-batch"> 
                    <param name="kernel.mode" value="@{mode}" />
                </antcall>
            </sequential>
        </for>
    </target>
   
    <target name="report-kernel-test">
        <for list="${test.mode}" param="mode"
            trim="true" keepgoing="true">
            <sequential>
                <junitreport todir="${kernel.test.dir}/reports/@{mode}.mode">
                    <fileset dir="${kernel.test.dir}/reports/@{mode}.mode">
                        <include name="*.xml" />
                    </fileset>
                    <report format="frames" 
                        todir="${kernel.test.dir}/reports/@{mode}.mode/html" />
                </junitreport>
            </sequential>
        </for>
    </target>

    <target name="check-kernel-test">
        <loadfile property="kernel.test.summary" 
            srcFile="${kernel.test.dir}/reports/summary"/>
        <echo message="  ***************************${line.separator}"/>
        <echo message="  *** Kernel tests status ***${line.separator}"/>
        <echo message="  ***************************${line.separator}"/>
        <echo message="${line.separator}"/>
        <echo message="${kernel.test.summary}"/>
        <echo message="${line.separator}"/>
        <echo>Please find detailed results under ${kernel.test.dir}/reports directory.</echo>
        
        <condition property="test.failed">
            <contains string="${kernel.test.summary}" substring="FAILED" />
        </condition>
        <fail unless="run.all.tests" if="test.failed" message="There were test failures."/>
    </target>
       
    <target name="compile-kernel-test">
        <mkdir dir="${test.resource.path}" />
        <javac srcdir="${kernel.test.javasrc}/../kernel_resources" 
            destdir="${test.resource.path}" 
            source="1.5" target="1.5" debug="true">
        </javac>
        <mkdir dir="${test.class.path}" />
        <javac srcdir="${kernel.test.javasrc}" 
            destdir="${test.class.path}" 
            source="1.5" target="1.5" debug="true">
        </javac>
        <delete quiet="true" dir="${test.class.path}/notfound" />
    </target>
    
    <target name="-prepare-kernel-test">
        <delete quiet="true" dir="${kernel.test.dir}/reports" />
        <mkdir dir="${kernel.test.dir}/reports" />       

        <condition property="junit.jar" value="${junit.home}/junit.jar">
            <isset property="junit.home" />
        </condition>
        <property name="junit.jar" 
            location="${external.dep.CLASSLIB}/depends/jars/junit_3.8.2/junit.jar"/>
        <available file="${junit.jar}" property="junit.found"/>
        <fail unless="junit.found">
                ==============================================
                Please set the classpath of junit as follows:
                build.bat -Djunit.jar=%JUNIT_HOME% test
                ==============================================
        </fail>
    </target>
    
    <target name="-run-kernel-test-batch">
        <propertycopy property="kernel.mode.name" from="${kernel.mode}.name" override="on"/>       
        <propertycopy property="kernel.mode.switch" from="${kernel.mode}.switch" override="on"/>
        <echo>
        ==================================
        Run kernel tests using ${kernel.mode.name}
        ==================================
        </echo>
        <property name="exclude.file" location="./excludes/exclude.drlvm_kernel.${hy.platform}.${kernel.mode}" />
        <if>
            <available file="${exclude.file}" />
            <then>
                  <property name="kernel.exclude.file.${kernel.mode}.present" value="true" />
                  <loadfile property="foo" srcFile="${exclude.file}"/>
                  <echo>
Using exclude file = ${exclude.file}   
        
${foo}
                  </echo>
            </then>
        </if>
        
        <property name="report.dir"
            location="${kernel.test.dir}/reports/${kernel.mode}.mode"/>
        <mkdir dir="${report.dir}" />
        
        <junit fork="yes" failureproperty="kernel.failed"
            filtertrace="no" printsummary="on" showoutput="off"
            haltonfailure="${kernel.test.failfast}"
            forkmode="${kernel.test.forkmode}" 
            timeout="${test.timeout}"
            jvm="${test.jvm.exe}">

            <jvmarg value="-XX:-vm.assert_dialog" />
            <jvmarg value="-Dtest.resource.path=${test.resource.path}"/>
            <jvmarg value="${kernel.mode.switch}" />
            <jvmarg value="-Xbootclasspath/a:${junit.jar}${path.separator}${test.class.path}" />
            <formatter type="xml"/>
            <batchtest todir="${report.dir}" unless="test.case">
                <fileset dir="${kernel.test.javasrc}"> 
                   <!-- <patternset refid="kernel.test.java.pattern"/> -->
                    <include name="org/apache/harmony/**/*Test.java" />
                    <include name="java/lang/**/*Test*.java" />
                    <excludesfile name="${exclude.file}" if="kernel.exclude.file.${kernel.mode}.present" />
                    
                </fileset>
            </batchtest>
            <test name="${test.case}" todir="${report.dir}" if="test.case" />
        </junit>
        
        <condition property="kernel.status" value="FAILED" else="PASSED">
            <isset property="kernel.failed" />
        </condition>

        <concat append="on" destfile="${kernel.test.dir}/reports/summary" 
            >      ${kernel.mode.name} ${kernel.status}${line.separator}</concat>
    </target>
</project>
