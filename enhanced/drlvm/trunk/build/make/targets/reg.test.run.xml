<?xml version="1.0" encoding="utf-8" ?>
<!--
     Licensed to the Apache Software Foundation (ASF) under one or more
     contributor license agreements.  See the NOTICE file distributed with
     this work for additional information regarding copyright ownership.
     The ASF licenses this file to You under the Apache License, Version 2.0
     (the "License"); you may not use this file except in compliance with
     the License.  You may obtain a copy of the License at
     
         http://www.apache.org/licenses/LICENSE-2.0
     
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License. -->

<project name="REGRESSION TESTS RUN">
    <property name="reg.test.timeout" value="180000" />
    <!-- property name="jvm.under.test" value="C:/ws/JRockit-1.5.0/bin/java.exe"/--> 
    <property name="jvm.under.test" value="${build.deploy.dir}/bin/java"/>

    <target name="run-reg-tests">
        <echo>
==================================
     Run regression tests
==================================
        </echo>
    
        <!-- Execution of a test in JUnit format -->
        <run-junit-test test="org.apache.harmony.drlvm.tests.regression.h1800.ExecTest"/>

        <!-- Execution of a test in JUnit format -->
        <run-junit-test test="org.apache.harmony.drlvm.tests.regression.h788.Test"/>

        <!-- Execution of a java test with main function and expected result code -->
        <run-pjava-test test="org.apache.harmony.drlvm.tests.regression.h1694.H1694" expected-code="104"/>
        
        <!-- Launch the tests with a custom launchers placed near the tests -->
        <run-custom-launcher launcher="${reg.test.src}/H2151/run.test.xml"/>
        <run-custom-launcher launcher="${reg.test.src}/H0000/run.test.xml"/>

    </target>

    <!-- Macrodefinition launching the custom launcher -->
    <macrodef name="run-custom-launcher">
        <attribute name="launcher"/>
        <sequential>
            <ant antfile="@{launcher}" target="run-test" inheritAll="true" inheritRefs="true"/>
        </sequential>
    </macrodef>

    <!-- Macrodefinition launching JUnit test -->
    <macrodef name="run-junit-test">
        <attribute name="test"/>
        <attribute name="vmarg" default=""/>
        <element name="junit-element" optional="true"/>
        <sequential>
            <junit jvm="${jvm.under.test}"
                   fork="yes"
                   haltonfailure="true"
                   haltonerror="true"
                   printsummary="withOutAndErr"
                   dir="${basedir}"
                   failureproperty="@{test}.failed"
                   timeout="${reg.test.timeout}">
                <test name="@{test}" todir="${reg.test.dir}/reports"/>
                <classpath>
                    <pathelement path="${reg.test.class.path}"/>
                </classpath>
                <junit-element/>
                <formatter type="brief"/>
            </junit>
        </sequential>
    </macrodef>

    <!-- Macrodefinition launching JVMTI JUnit test -->
    <macrodef name="run-jvmti-test">
        <attribute name="test"/>
        <attribute name="vmarg" default=""/>
        <attribute name="agent"/>
        <sequential>
            <run-junit-test test="@{test}" vmarg="@{vmarg}">
                <junit-element>
                    <jvmarg value="-Dvm.assert_dialog=0" />
                    <select os="win">
                        <jvmarg
                        value="-agentpath:${reg.test.native.path}/@{agent}.dll"
                        />
                    </select>
                    <select os="lnx">
                        <jvmarg
                        value="-agentpath:${reg.test.native.path}/lib@{agent}.so"
                        />
                    </select>
                </junit-element>
            </run-junit-test>
        </sequential>
    </macrodef>

    <!-- Macrodefinition launching Plain Java test -->
    <macrodef name="run-pjava-test">
        <attribute name="test"/>
        <attribute name="classpath" default=""/>
        <attribute name="expected-code" default="0"/>
        <attribute name="vmarg" default=""/>
        <attribute name="args" default=""/>
        <element name="java-element" optional="true"/>
        <sequential>
            <echo message="Running regression test: @{test}"/>
            <java jvm="${jvm.under.test}"
                  classname="@{test}"
                  resultproperty="@{test}.res.code"
                  output="${reg.test.dir}/reports/@{test}.txt"
                  fork="yes"
                  timeout="${reg.test.timeout}">
                <java-element/>
                <jvmarg line="@{vmarg}" />
                <arg line="@{args}" />
                <classpath>
                    <pathelement path="${reg.test.class.path}"/>
                    <pathelement path="@{classpath}"/>
                </classpath>
            </java>
            <fail>
test failure: 
Test '@{test}' FAILED! (${@{test}.res.code} exit code)
See ${reg.test.dir}/reports/@{test}.txt file for details.
                <condition>
                    <not>
                        <equals arg1="${@{test}.res.code}" arg2="@{expected-code}"/>
                    </not>
                </condition>
            </fail>
        </sequential>
    </macrodef>

</project>
