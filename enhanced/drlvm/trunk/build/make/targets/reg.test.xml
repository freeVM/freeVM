<?xml version="1.0" encoding="utf-8" ?>
<!--
     Licensed to the Apache Software Foundation (ASF) under one or more
     contributor license agreements.  See the NOTICE file distributed with
     this work for additional information regarding copyright ownership.
     The ASF licenses this file to You under the Apache License, Version 2.0
     (the "License"); you may not use this file except in compliance with
     the License.  You may obtain a copy of the License at
     
         http://www.apache.org/licenses/LICENSE-2.0
     
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License. -->

<project name="REGRESSION TESTS">
    <property name="reg.test.src" location="${basedir}/../../src/test/regression"/>
    <property name="reg.test.dir" location="${build.semi.dir}/reg.tests"/>
    <property name="reg.test.class.path" location="${reg.test.dir}/classes"/>
    <property name="reg.test.native.path" location="${reg.test.dir}/native"/>
    <!-- TODO: check the existence of jasmin.jar -->
    <property name="jasmin.jar" location="./tmp/jasmin.jar"/>
    <property name="reg.test.package" value="org/apache/harmony/drlvm/tests/regression"/>

    <target name="compile-reg-tests-prepare" depends="init_component">
        <mkdir dir="${reg.test.class.path}" />
        <mkdir dir="${reg.test.native.path}" />

        <dirset id="reg.test.src.dirs.set"
                dir="${reg.test.src}"
                includes="*"/>

        <pathconvert pathsep=","
                     property="reg.test.src.dirs.list"
                     refid="reg.test.src.dirs.set" />

        <fileset id="reg.test.src.native.set" dir="${reg.test.src}">
            <include name="**/*.c"/>
            <include name="**/*.cpp"/>
        </fileset>
    </target>

    <target name="compile-reg-tests-j"
            depends="compile-reg-tests-prepare">
        <fileset id="reg.test.src.jasmin.set" 
                 dir="${reg.test.src}"
                 includes="**/*.j">
            <depend targetdir="${reg.test.class.path}">
                <mapper>
                    <chainedmapper>
                        <filtermapper>
                            <replacestring from="\" to="/"/>
                        </filtermapper>
                        <regexpmapper from="^(?:.*/)?H(\d\d*)/([^/].*).j$$" 
                                      to="h\1/\2.class"/>
                        <globmapper from="*" to="${reg.test.package}/*"/>
                    </chainedmapper>
                </mapper>
            </depend>
        </fileset>
        
        <pathconvert pathsep=" "
                     property="reg.test.src.jasmin.list"
                     refid="reg.test.src.jasmin.set"/>
       
        <java jar="${jasmin.jar}" fork="true">
            <arg line="-d ${reg.test.class.path}"/>
            <arg line="${reg.test.src.jasmin.list}"/>
        </java>
    </target>

    <target name="compile-reg-tests-java"
            depends="compile-reg-tests-prepare, compile-reg-tests-j">
        <javac srcdir="${reg.test.src}"
               includes="**/*.java"
               destdir="${reg.test.class.path}"
               source="1.5" target="1.5" listfiles="true"
               debug="true"
               verbose="yes">
            <depend targetdir="${reg.test.class.path}">
                <mapper>
                    <chainedmapper>
                        <filtermapper>
                            <replacestring from="\" to="/"/>
                        </filtermapper>
                        <regexpmapper 
                            from="^(?:.*/)?H(\d\d*)/([^/].*).java$$"
                            to="h\1/\2.class"/>
                        <globmapper from="*" to="${reg.test.package}/*"/>
                    </chainedmapper>
                </mapper>
            </depend>
        </javac>
    </target>

    <target name="compile-reg-tests-native"
        depends="compile-reg-tests-prepare, init_component">

        <pathconvert property="reg.test.src.native.list"
                     refid="reg.test.src.native.set"
                     pathsep=","/>
        <mkdir dir="${reg.test.native.path}/_obj"/>

        <for list="${reg.test.src.native.list}" param="csource"
             delimiter=",">
            <sequential>
                <var name="outname" unset="true" />
                <!-- basename property="outname" file="@{csource}" suffix=".cpp"/ -->
                <pathconvert property="outname">
                    <path path="@{csource}"/>
                    <chainedmapper>
                        <flattenmapper/>
                        <regexpmapper from="^(..*)\.c.?.?$$" to="\1"/>
                    </chainedmapper>
                </pathconvert>

                <echo message="## Compiling reg native ${outname} in: ${reg.test.native.path}" />
                <cc name="${build.cxx}"
                    debug="true"
                    runtime="dynamic"
                    multithreaded="true"
                    link="shared"
                    outfile="${reg.test.native.path}/${outname}"
                    objdir="${reg.test.native.path}/_obj">
                    <includepath path="${build.deploy.dir}jdk/jre/include" />
                    <select os="lnx">
                        <linkerarg value="-lstdc++" />
                    </select>
                    <fileset file="@{csource}"/>
                </cc>
            </sequential>
        </for>
    </target>

    <target name="pre-reg-test" depends="compile-reg-tests-java, compile-reg-tests-native">
    <!--target name="pre-reg-test" depends="compile-reg-tests-native"-->
    <!-- target name="pre-reg-test" depends="init_component"-->
        <condition property="junit.jar" value="${junit.home}/junit.jar">
            <isset property="junit.home" />
        </condition>
        <property name="junit.jar"
                  location="${external.dep.CLASSLIB}/depends/jars/junit_3.8.2/junit.jar" />
        <if>
            <not>
                <available file="${junit.jar}"/>
            </not>
            <then>
                <echo>
                ==============================================
                Please set the classpath of junit as follows:
                build.bat -Djunit.jar=%JUNIT_HOME% test
                ==============================================
                </echo>
                <fail message="reg tests misconfigured" />
            </then>
        </if>
        <sequential>
            <delete quiet="true" dir="${reg.test.dir}/reports" />
            <delete quiet="true" dir="${reg.test.dir}/ref-reports" />
            <mkdir dir="${reg.test.dir}/reports" />
            <mkdir dir="${reg.test.dir}/ref-reports" />
        </sequential>
    </target>

    <target name="reg.test" depends="pre-reg-test" >
        <ant antfile="${ant.file.REGRESSION TESTS RUN}" target="run-reg-tests" inheritAll="true" inheritRefs="true"/>
    </target>
</project>
