<?xml version="1.0" encoding="UTF-8"?>

<!-- Copyright 2005 The Apache Software Foundation or its licensors, as applicable

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<project name="classlib-test" default="test-all" basedir="..">

    <description> Tests for classlib package</description>

    <!-- set global properties for this build. -->

    <property name="build.compiler" value="modern"/>

    <property name="tests.output" location="build/test_report" />
    <property name="target.output" location="deploy" />

    <property name="tests.build.output" location="build/tests" />
    <property name="support.dir" location="support"/>
    <property name="tests.depends.jars" location="deploy/jre/lib/boot" />
    <property name="junit.jar" location="${support.dir}/src/test/resources/libs/junit_3.8.1/junit.jar" />
    <property name="xalan.jar" location="${support.dir}/src/test/resources/libs/xalan-j_2.6.0/xalan.jar" />
    <property name="xerces.resolver.jar" location="${support.dir}/src/test/resources/libs/xerces_2.6.2/resolver.jar" />
    <property name="xerces.impl.jar" location="${support.dir}/src/test/resources/libs/xerces_2.6.2/xercesImpl.jar" />
    <property name="xml.apis.jar" location="${support.dir}/src/test/resources/libs/xerces_2.6.2/xml-apis.jar" />
    <path id="xerces.id">
        <fileset dir="${support.dir}/src/test/resources/libs/xerces_2.6.2">
            <include name="*.jar" />
        </fileset>
    </path>
    <path id="xalan.id">
        <fileset dir="${support.dir}/src/test/resources/libs/xalan-j_2.6.0">
            <include name="*.jar" />
        </fileset>
    </path>

	<!-- this list of components to test will grow to eventually be all modules -->
	<target name="test-all"
		depends="clean, compile-support, test-luni, test-archive, test-text, test-nio, test-xnet, test-nio_char, test-jndi, test-sql, test-prefs, gen-report">
	</target>

	<target name="clean">
		<delete dir="${tests.output}" />
	</target>

	<target name="test-luni">
        <echo message="=================================="/>
        <echo message="Running tests for module luni"/>
        <echo message="=================================="/>

        <ant antfile="make/build.xml" dir="modules/luni" target="test"/>
	</target>

	<target name="test-archive">
        <echo message="=================================="/>
        <echo message="Running tests for module archive"/>
        <echo message="=================================="/>

        <ant antfile="make/build.xml" dir="modules/archive" target="test" />

	</target>

	<target name="test-xnet">
        <echo message="=================================="/>
        <echo message="Running tests for module x-net"/>
        <echo message="=================================="/>

        <ant antfile="make/build.xml" dir="modules/x-net" target="test" />

	</target>

	<target name="test-text">
        <echo message="=================================="/>
        <echo message="Running tests for module text"/>
        <echo message="=================================="/>

        <ant antfile="make/build.xml" dir="modules/text" target="test" />

	</target>

	<target name="test-nio">
        <echo message="=================================="/>
        <echo message="Running tests for module nio"/>
        <echo message="=================================="/>

        <ant antfile="make/build.xml" dir="modules/nio" target="test" />

	</target>

	<target name="test-nio_char">
        <echo message="=================================="/>
        <echo message="Running tests for module nio_char"/>
        <echo message="=================================="/>

        <ant antfile="make/build.xml" dir="modules/nio_char" target="test" />

	</target>

	<target name="test-jndi">
            <echo message="=================================="/>
            <echo message="Running tests for module jndi"/>
            <echo message="=================================="/>
            <ant antfile="make/build.xml" dir="modules/jndi" target="test" />
	</target>

	<target name="test-logging">
            <fail>LogManager depends on java.beans</fail>
            <echo message="=================================="/>
            <echo message="Running tests for module logging"/>
            <echo message="=================================="/>
            <ant antfile="make/build.xml" dir="modules/logging" target="test" />
	</target>

	<target name="test-prefs">
            <echo message="=================================="/>
            <echo message="Running tests for module prefs"/>
            <echo message="=================================="/>
            <ant antfile="make/build.xml" dir="modules/prefs" target="test" />
	</target>

	<target name="test-sql">
            <echo message="=================================="/>
            <echo message="Running tests for module sql"/>
            <echo message="=================================="/>
            <ant antfile="make/build.xml" dir="modules/sql" target="test" />
	</target>
		
	<target name="test-security">
	
        <echo message="=================================="/>
        <echo message="Running tests for module security"/>
        <echo message="=================================="/>

        <ant antfile="make/build.xml" dir="modules/security" target="test.classlib"/>
	</target>

	<target name="gen-report">
		<junitreport todir="${tests.output}">
		  <fileset dir="${tests.output}">
		    <include name="TEST*-*.xml"/>
		  </fileset>
		  <report format="frames" todir="${tests.output}/html"/>
		</junitreport>

		<!-- use this property just to get the slashes to display right in the echo -->
		<property name="display-location" location="${tests.output}/html/index.html"/>
		<echo message="The test report is in ${display-location}"/>
    </target>

    <target name="compile-support" depends="copy-test-resources, get-test-support-jars"
    	description="Compile the unit test source">
    	<mkdir dir="${tests.build.output}" />
        <javac destdir="${tests.build.output}" source="1.4" target="1.4" debug="on">
            <src path="${support.dir}/src/test/java" />
            <src path="modules/archive/src/test/java" />
            <src path="modules/luni/src/test/java" />
            <src path="modules/nio_char/src/test/java" />
            <src path="modules/text/src/test/java" />
       	    <classpath refid="xerces.id" />
            <classpath refid="xalan.id" />
            <classpath location="${junit.jar}" />
            <classpath location="${tests.build.output}" />
            <classpath>
                <fileset dir="${tests.depends.jars}">
                    <include name="*.jar" />
                </fileset>
            </classpath>
        </javac>
    	
    </target>
	
    <!-- ================================= 
          target: copy-test-resources              
         ================================= -->
    <target name="copy-test-resources"
       description="Copy non-Java files from unit test trees to the bin output">
        <mkdir dir="${tests.build.output}" />

        <copy todir="${tests.build.output}" includeemptydirs="false">
            <fileset dir="${support.dir}/src/test/java">
                <exclude name="**/*.java" />
            </fileset>
            <fileset dir="modules/archive/src/test/java">
                <exclude name="**/*.java" />
            </fileset>
            <fileset dir="modules/luni/src/test/java">
                <exclude name="**/*.java" />
            </fileset>
            <fileset dir="modules/nio_char/src/test/java">
                <exclude name="**/*.java" />
            </fileset>
            <fileset dir="modules/text/src/test/java">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>

    <target name="get-test-support-jars"
    	    description="Download jars required to compile and run unit tests">
        <!-- JUnit 3.8.1 support -->
    	<mkdir dir="${support.dir}/src/test/resources/libs/junit_3.8.1"/>
    	<get src="http://www.ibiblio.org/maven/junit/jars/junit-3.8.1.jar"
    	     dest="${junit.jar}" usetimestamp="true" verbose="true" />
    	
    	<!-- Xalan 2.6.0 support -->
    	<mkdir dir="${support.dir}/src/test/resources/libs/xalan-j_2.6.0"/>
    	<get src="http://www.ibiblio.org/maven/xalan/jars/xalan-2.6.0.jar"
    	     dest="${xalan.jar}" usetimestamp="true" verbose="true" />
    	
    	<!-- Xerces 2.6.2 support -->
    	<mkdir dir="${support.dir}/src/test/resources/libs/xerces_2.6.2" />
    	<get src="http://www.ibiblio.org/maven/xml-resolver/jars/xml-resolver-1.1.jar"
    	     dest="${xerces.resolver.jar}" usetimestamp="true" verbose="true" />
    	<get src="http://www.ibiblio.org/pub/packages/maven2/xerces/xercesImpl/2.6.2/xercesImpl-2.6.2.jar"
    	     dest="${xerces.impl.jar}" usetimestamp="true" verbose="true" />
    	<get src="http://www.ibiblio.org/maven/xml-apis/jars/xml-apis-1.0.b2.jar"
    	     dest="${xml.apis.jar}" usetimestamp="true" verbose="true" />
    </target>

    <target name="run-tests" description="Run JUnit tests">
    	<!-- The location of the Harmony launcher can be overridden by 
    	     the "harmony.vm.exe" property. Default value of property
    	     is set assuming it is under the deploy tree -->
    	<property name="harmony.vm.exe" location="${target.output}/jre/bin/java"/>
    	
        <!-- Delete "junitCompleted" - an empty file that can be used to
             check that the junit test VM does not exit prematurely -->
        <delete file="${user.home}/junitCompleted" failonerror="false" />

        <path id="classpath.id" location="${tests.build.output}" />
    	
    	<java classname="tests.main.AllTests"
    		fork="true"
    		jvm="${harmony.vm.exe}">
    		
            <jvmarg value="-showversion" />

            <!-- Required by various tests that set security manager etc -->
            <jvmarg value="-Djava.security.policy=${support.dir}/src/test/resources/config/testing.policy" />

            <!-- Required for running the java.net unit tests -->
            <jvmarg value="-Dtest.ini.file=${support.dir}/src/test/resources/config/localhosttest.ini" />

            <!-- Required if using the test excluder decorator -->
            <jvmarg value="-Dexcludes.file.uri=file:///${support.dir}/src/test/resources/config/jcltest-excludes.xml" />
        	
            <classpath>
                <path refid="classpath.id" />
            	<path refid="xerces.id" />
            	<path refid="xalan.id" />
                <pathelement location="${junit.jar}" />
            </classpath>
   		</java>
    </target>

	
    <!-- ================================= 
          target: run-tests-with-junit-task
         ================================= -->
    <target name="run-tests-with-junit-task" description="Run JUnit tests">
    	<!-- The location of the Harmony launcher can be overridden by 
    	     the "harmony.vm.exe" property. Default value of property
    	     is set assuming it is under the deploy tree -->
    	<property name="harmony.vm.exe" location="${target.output}/jre/bin/java"/>

        <!-- Delete "junitCompleted" - an empty file that can be used to
             check that the junit test VM does not exit prematurely -->
        <delete file="${user.home}/junitCompleted" failonerror="false" />

        <path id="classpath.id" location="${tests.build.output}" />
    	
        <junit fork="true"
               forkmode="once"
               jvm="${harmony.vm.exe}"
               errorproperty="tests.failed"
               failureproperty="tests.failed">
            <env key="JAVA_HOME" value="${target.output}/jre" />
            <env key="LD_LIBRARY_PATH" value="" />
            <!-- required to be unset on Linux -->
            
            <jvmarg value="-showversion" />

            <!-- Required by various tests that set security manager etc -->
            <jvmarg value="-Djava.security.policy=${support.dir}/src/test/resources/config/testing.policy" />

            <!-- Required for running the java.net unit tests -->
            <jvmarg value="-Dtest.ini.file=${support.dir}/src/test/resources/config/localhosttest.ini" />

            <!-- Required if using the test excluder decorator -->
            <jvmarg value="-Dexcludes.file.uri=file:///${support.dir}/src/test/resources/config/jcltest-excludes.xml" />
        	
            <classpath>
                <path refid="classpath.id" />
            	<path refid="xerces.id" />
            	<path refid="xalan.id" />
                <pathelement location="${junit.jar}" />
            </classpath>
        	
            <formatter type="plain" usefile="false" />
            <formatter type="xml" />
        	
        	<test todir="${tests.results.dir}" name="tests.main.AllTests" />
        </junit>

        <fail if="tests.failed" message="Some Tests Failed !" />

        <!-- if the junit test process completed as expected, this file
             should now exist -->
        <fail message="JUnit task ended prematurely - Hint: This may have been caused by the test VM terminating unexpectedly during the test run">
            <condition>
                <not>
                    <available file="${user.home}/junitCompleted" />
                </not>
            </condition>
        </fail>
        <!-- Clean up after ourselves -->
        <delete file="${user.home}/junitCompleted" />
    </target>

</project>
