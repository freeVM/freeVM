<?xml version="1.0" encoding="UTF-8"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
-->
<!DOCTYPE Test SYSTEM "test.dtd">
<Test
	ID="FragmentationBadFinalizeTest2"
        date-of-creation="2006-01-31"
        timeout="2"
        >
        <!--
        Author:  Alexander Esin
        Version: $Revision: 1.5 $
        -->
    	<Copyright value="apache"/>
        <Author value="Alexander Esin"/>
		<APITestDescription>
			<TestedClass name="java.lang.Object"/>
			<TestedMethod name="protected void finalize()"/>
        	<Description>
                   Creates many objects of different sizes (10 bytes : 32MB), delete some of them (every 2d, 3d etc, this step is varied in a loop). Each object has defined finalize() method, which uses reference to variable defined in the main program in which it is assigned to null. Make sure that total allocated objects size does not reach initial size of heap. Check if OutOfMemoryError not thrown. Check if finalize() methods are invoked.
        	</Description>
		</APITestDescription>
        
        <Keyword name="stress"/>
        <Source name="../share/FragmentationBadFinalizeTest2.java"/>
        <Modification date="2006-01-31" author="Alexander Esin"/>

        <Runner ID="Runtime">
                <Option name="-Xmx64m"/>
               	<Option value="-Dorg.apache.harmony.test.share.stress.ReliabilityRunner.params=
					org.apache.harmony.test.stress.gc.frag.share.FragmentationBadFinalizeTest2 {}"/>
				<Option value="-Dorg.apache.harmony.test.stress.gc.frag.share.FragmentationAbstractTest.MAX_MEM=40000000"/>
			<Param name="toRun" value="org.apache.harmony.test.share.stress.ReliabilityRunner">
			</Param>
		</Runner>
	<Restriction name="OtherVMOnly"/>
</Test>