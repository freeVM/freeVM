<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type='text/xsl' href='../../../../../../../../../../../test.xsl'?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<!DOCTYPE Test SYSTEM '../../../../../../../../../../../test.dtd'>
<!--
-->
<Test
    ID="OffsetTest"
        date-of-creation="2006-03-14"
        timeout="2">
        
        
    <APITestDescription>
    
        <TestedClass name="javax.management.monitor.CounterMonitor"/>
        <TestedMethod name="public void setOffset(Number value)"/>
        <TestedMethod name="public Number getOffset()"/>
        <TestedMethod name="public Number getThreshold(ObjectName object)"/>
        <TestedMethod name="public void setGranularityPeriod(long period)"/>
        <TestedMethod name="public void setInitThreshold(Number value)"/>
        <TestedMethod name="public void setNotify(boolean value)"/>
        <TestedMethod name="public void setDifferenceMode(boolean value)"/>
        <TestedMethod name="public void start()"/>
            
        <TestedClass name="javax.management.monitor.Monitor"/>
        <TestedMethod name="public void addObservedObject(ObjectName object)"/>
        <TestedMethod name="public void setObservedAttribute(String attribute)"/>
        
        <TestedClass name="javax.management.NotificationBroadcasterSupport"/>
        <TestedMethod
            name="public void addNotificationListener(NotificationListener listener,NotificationFilter filter,Object handback)"/>
        <Description>
            This test is intended to check if CounterMonitor class processes threshold 
            increment when counter reaches threshold. 
                1.    MBean server is started; CounterMonitor and Counter MBeans are registered.
                2.    CounterMonitor is configured with non-zero offset value.
                3.    NotificationListener is added to CounterMonitor.
                4.    Counter is started in a separate thread, CounterMonitor is activated.
                5.    NotificationListener checks that proper notification is received and threshold is reached.
                6.    NotificationListener updates its threshold value and waits for next notification.
                7.    When second notification received, NotificationListener updates its threshold value
                    again and waits for next notification.
                8.    If all three notifications are received correctly then test is considered to be passed.
        </Description>
    </APITestDescription>        
        <Keyword name="functional"/>
        <Source name="OffsetTest.java"/>        
        <Runner ID="Runtime">
            <Param name="toRun" value="org.apache.harmony.test.func.api.javax.management.monitor.countermonitor.OffsetTest">
                
            </Param>
        </Runner>
        <Restriction name="OtherVMOnly"/>
</Test>

