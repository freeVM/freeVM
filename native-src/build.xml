<?xml version="1.0" encoding="UTF-8"?>

<!-- Copyright 1998, 2005 The Apache Software Foundation or its licensors, as applicable
     
     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at
     
         http://www.apache.org/licenses/LICENSE-2.0
     
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License. -->

<!-- ====================================================================== 
     build-native-source    
     Compile the native source into component shared libs.
     ====================================================================== -->
<project name="build-native-source" default="default" basedir=".">
    <description>
		Compile the native source into component shared libs.
    </description>

    <!-- ================================= 
          target: default              
         ================================= -->
    <target name="default" 
        description="Compile the native source into component shared libs." 
        depends="clean, build" />



    <!-- ================================= 
          target: build
         ================================= -->
    <target name="build"
            depends="overlay-oss, copy-includes, make-all, layout" />


    <!-- ================================= 
          target: clean              
         ================================= -->
    <target name="clean"
            depends="make-clean, clean-includes, clean-overlay-oss, clean-layout" />


    <!-- ================================= 
          target: properties
         ================================= -->
    <target name="properties" depends="init, windows-properties, linux-properties">
        <property name="hy.hdk" location="${basedir}/../deploy" />
    	<property name="hy.jdk" location="${hy.hdk}/jdk" />
    	<property name="depends.build" location="../depends/build" />
        <property name="depends.oss" location="../depends/oss" />
        <property name="depends.libs" location="../depends/libs/${target.platform}" />
    	<property name="depends.files" location="../depends/files" />
        <property name="build.output" location="../native-bin/${target.platform}" />
        <property name="native.src.root" location="${basedir}/${target.platform}" />
        <property name="native.shared.src.root" location="${basedir}/shared" />
    	<property name="native.lib.target" location="${hy.hdk}/lib" />

        <property name="fdlibm.zip" location="${depends.oss}/fdlibm_5.2.zip" />
    </target>


    <!-- ================================= 
          target: windows-properties              
         ================================= -->
    <target name="windows-properties" if="is.windows">
        <property name="target.platform" value="./win.IA32" />
        <property name="make.command" value="nmake.exe" />
        <property name="exe.suffix" value=".exe" />
        <property name="shlib.suffix" value=".dll" />
    	<property name="linklib.suffix" value=".lib" />
    </target>


    <!-- ================================= 
          target: linux-properties              
         ================================= -->
    <target name="linux-properties" if="is.linux">
        <property name="target.platform" value="./linux.IA32" />
        <property name="make.command" value="make" />
        <property name="exe.suffix" value="" />
        <property name="shlib.suffix" value=".so" />
    	<property name="linklib.suffix" value=".so" />
    </target>


    <!-- - - - - - - - - - - - - - - - - - 
          target: init                      
         - - - - - - - - - - - - - - - - - -->
    <target name="init">
        <!-- Determine our operating system -->
        <condition property="is.windows">
            <os family="windows" />
        </condition>

        <condition property="is.linux">
            <os name="linux" />
        </condition>
    </target>

    <!-- This target invokes make on the all target to compile all natives -->
    <target name="make-all" depends="properties">
    	<!-- Create the target directory structure -->
        <mkdir dir="${hy.jdk}/jre/bin" />
        <mkdir dir="${hy.jdk}/include" />
    	<mkdir dir="${native.lib.target}"/>
    	
    	<antcall target="copy-makefile-includes" />
    	
        <exec failonerror="true" 
            executable="${make.command}" 
            dir="${target.platform}">
        	<env key="HY_HDK" value="${hy.hdk}" />
            <arg line="all" />
        </exec>
    	
    	<!-- Copy across the built shared libs -->
        <copy todir="${hy.jdk}/jre/bin" overwrite="yes">
            <fileset dir="${target.platform}">
                <patternset includes="*${shlib.suffix}*" />
                <!-- Don't copy the VMI library. the one we build is a stub that is
                                     replaced by a concrete implementation by the VM-implementor -->
                <patternset excludes="*vmi*${shlib.suffix}*" />
            </fileset>
        </copy>
    	<!-- On Linux we want to copy the libvmi.so into the deploy/lib
    	directory so that the natives can link against it. This is only used at
    	build time - at runtime the libvmi.so provided by the VM implementation
    	is loaded -->
    	<copy todir="${hy.hdk}/lib" overwrite="yes" failonerror="false">
    		<fileset dir="${target.platform}">
    			<include name="libvmi.so"/>
    		</fileset>
    	</copy>

    	<!-- These module targets take care of building and copying their shared libs -->
    	<ant dir="..\modules\auth" antfile="build.xml" target="build.native" />
    	<ant dir="..\modules\archive" antfile="build.xml" target="build.native" />
    	<ant dir="..\modules\text" antfile="build.xml" target="build.native" />
    	<ant dir="..\modules\prefs" antfile="build.xml" target="build.native" />
    	<ant dir="..\modules\luni" antfile="build.xml" target="build.native" />
        <ant dir="..\modules\nio" antfile="build.xml" target="build.native" />    	
    </target>


    <!-- ================================= 
          target: make-clean              
         ================================= -->
    <target name="make-clean" depends="properties">
    	<antcall target="copy-makefile-includes" />
    	
        <exec failonerror="true" 
            executable="${make.command}" 
            dir="${target.platform}">
        	<env key="HY_HDK" value="${hy.hdk}" />
            <arg line="clean" />
        </exec>
    	
    	<ant dir="..\modules\auth" antfile="build.xml" target="clean.native" />
    	<ant dir="..\modules\archive" antfile="build.xml" target="clean.native" />
       	<ant dir="..\modules\text" antfile="build.xml" target="clean.native" />
    	<ant dir="..\modules\prefs" antfile="build.xml" target="clean.native" />
    	<ant dir="..\modules\luni" antfile="build.xml" target="clean.native" />
    	<ant dir="..\modules\nio" antfile="build.xml" target="clean.native" />
    	
    	<delete dir="${native.lib.target}" />
    	
    	<antcall target="clean-makefile-includes" />
    </target>


    <!-- ================================= 
          target: layout              
         ================================= -->
    <target name="layout" 
        depends="properties" 
        description="Construct the correct directory structure for native binaries">

    	<!-- NLS catalog files -->
        <copy todir="${hy.jdk}/jre/bin" overwrite="yes">
            <fileset dir="${depends.files}">
                <include name="harmony*.properties" />
            </fileset>
        </copy>

        <!-- Make sure the Linux launcher has execute permission -->
        <chmod file="${hy.jdk}/jre/bin/java${exe.suffix}" perm="ugo+x" />

        <!-- Copy across dependency shared libs -->
        <copy todir="${hy.jdk}/jre/bin" overwrite="yes">
            <fileset dir="${depends.libs}" includes="*${shlib.suffix}*" />
        </copy>
    </target>


    <!-- ================================= 
          target: clean-layout              
         ================================= -->
    <target name="clean-layout" depends="properties">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${hy.jdk}">
                <include name="**/bin/java${exe.suffix}" />
                <include name="**/bin/javaw${exe.suffix}" />
                <include name="**/bin/*${shlib.suffix}*" />
            	<include name="**/bin/harmony*.properties" />
            </fileset>
        </delete>
    </target>


    <!-- ================================= 
          target: overlay-oss              
         ================================= -->
    <target name="overlay-oss" depends="properties">
        <unzip src="${fdlibm.zip}" dest="${native.src.root}/fdlibm/dist" />
        <chmod dir="${native.src.root}/fdlibm/dist" perm="ugo+r" />

    	<ant dir="${basedir}/../modules/archive" antfile="build.xml" 
			target="overlay-oss" />        
    	
    	<ant dir="${basedir}/../modules/text" antfile="build.xml" 
    				target="overlay-oss" /> 
    </target>

    <!-- ================================= 
          target: copy-includes              
         ================================= -->
	<target name="copy-includes" >
		<!-- Call copy.native.includes targets to copy across global includes to 
		    		 deploy/includes/harmony -->
    	<ant dir="${basedir}/../modules/archive" antfile="build.xml" 
    		target="copy.native.includes" />
    	<ant dir="${basedir}/../modules/luni" antfile="build.xml" 
    		target="copy.native.includes" />
	</target>
	
	<!-- ================================= 
          target: clean-includes              
         ================================= -->
	<target name="clean-includes" >
		<!-- Call clean.native.includes targets to delete global includes under
		    		 deploy/includes/harmony -->
    	<ant dir="${basedir}/../modules/archive" antfile="build.xml" 
    		target="clean.native.includes" />
    	<ant dir="${basedir}/../modules/luni" antfile="build.xml" 
    		target="clean.native.includes" />
	</target>

    <!-- ================================= 
          target: copy-makefile-includes              
         ================================= -->
	<target name="copy-makefile-includes" depends="properties" >
		<!-- copy generic defines and rules for each platform into a shared
			place -->
	    <mkdir dir="${hy.hdk}/build/make" />
	    <copy todir="${hy.hdk}/build/make" overwrite="yes">
            <fileset dir="${depends.build}">
                <include name="*" />
            </fileset>
        </copy>
	</target>
	
	<!-- ================================= 
          target: clean-makefile-includes              
         ================================= -->
	<target name="clean-makefile-includes">
		<!-- delete generic defines and rules -->
		<delete dir="${hy.hdk}/build/make" />
	</target>

    <!-- ================================= 
          target: clean-overlay-oss              
         ================================= -->
    <target name="clean-overlay-oss" depends="properties">
        <delete dir="${native.src.root}/fdlibm/dist" quiet="true" />
    	
    	<ant dir="${basedir}/../modules/archive" antfile="build.xml" 
    				target="clean-overlay-oss" />
    	<ant dir="${basedir}/../modules/text" antfile="build.xml" 
    	    				target="clean-overlay-oss" />
    </target>

</project>
