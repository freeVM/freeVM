<?xml version="1.0" encoding="UTF-8"?>

<!-- Copyright 1998, 2005 The Apache Software Foundation or its licensors, as applicable
     
     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at
     
         http://www.apache.org/licenses/LICENSE-2.0
     
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License. -->

<!-- ====================================================================== 
     build-native-source    
     Compile the native source into component shared libs.
     ====================================================================== -->
<project name="build-native-source" default="default" basedir=".">
    <description>
		Compile the native source into component shared libs.
    </description>

    <!-- ================================= 
          target: default              
         ================================= -->
    <target name="default" 
        description="Compile the native source into component shared libs." 
        depends="clean, build" />



    <!-- ================================= 
          target: build
         ================================= -->
    <target name="build"
            depends="overlay-oss, make-all, layout" />


    <!-- ================================= 
          target: clean              
         ================================= -->
    <target name="clean"
            depends="clean-overlay-oss, make-clean, clean-layout" />


    <!-- ================================= 
          target: properties
         ================================= -->
    <target name="properties" depends="init, windows-properties, linux-properties">
        <property name="target.output" location="../deploy" />
        <property name="depends.oss" location="../depends/oss" />
        <property name="depends.libs" location="../depends/libs/${target.platform}" />
        <property name="build.output" location="../native-bin/${target.platform}" />
        <property name="native.src.root" location="${basedir}/${target.platform}" />
        <property name="native.shared.src.root" location="${basedir}/shared" />

        <property name="fdlibm.zip" location="${depends.oss}/fdlibm_5.2.zip" />
        <property name="zlib.zip" location="${depends.oss}/zlib_1.2.3.zip" />
        <property name="iculib.zip" location="${depends.oss}/${target.platform}/icu4c-3.4-harmony.zip" />
    </target>


    <!-- ================================= 
          target: windows-properties              
         ================================= -->
    <target name="windows-properties" if="is.windows">
        <property name="target.platform" value="./win.IA32" />
        <property name="make.command" value="nmake.exe" />
        <property name="exe.suffix" value=".exe" />
        <property name="shlib.suffix" value=".dll" />
    </target>


    <!-- ================================= 
          target: linux-properties              
         ================================= -->
    <target name="linux-properties" if="is.linux">
        <property name="target.platform" value="./linux.IA32" />
        <property name="make.command" value="make" />
        <property name="exe.suffix" value="" />
        <property name="shlib.suffix" value=".so" />
    </target>


    <!-- - - - - - - - - - - - - - - - - - 
          target: init                      
         - - - - - - - - - - - - - - - - - -->
    <target name="init">
        <!-- Determine our operating system -->
        <condition property="is.windows">
            <os family="windows" />
        </condition>

        <condition property="is.linux">
            <os name="linux" />
        </condition>
    </target>

    <!-- This target invokes make on the all target to compile all natives -->
    <target name="make-all" depends="properties">
        <exec failonerror="true" 
            executable="${make.command}" 
            dir="${target.platform}">
            <arg line="all" />
        </exec>
    	
       <!-- invoke the build for the security module native code -->

    	<ant dir="../modules/security/"  antfile="make/build.xml" />

    </target>


    <!-- ================================= 
          target: make-clean              
         ================================= -->
    <target name="make-clean" depends="properties">
        <exec failonerror="true" 
            executable="${make.command}" 
            dir="${target.platform}">
            <arg line="clean" />
        </exec>
    	
    </target>


    <!-- ================================= 
          target: layout              
         ================================= -->
    <target name="layout" 
        depends="properties" 
        description="Construct the correct directory structure for native binaries">

        <!-- Create the structure -->
        <mkdir dir="${target.output}/jre/bin" />
        <mkdir dir="${target.output}/include" />

        <!-- Copy across the built shared libs -->
        <copy todir="${target.output}/jre/bin" overwrite="yes">
            <fileset dir="${target.platform}">
                <patternset includes="*${shlib.suffix}*" />
                <!-- Don't copy the VMI library. the one we build is a stub that is
				     replaced by a concrete implementation by the VM-implementor -->
                <patternset excludes="*vmi*${shlib.suffix}*" />
            </fileset>
        </copy>

        <!-- Copy across the built executables -->
        <copy todir="${target.output}/jre/bin" overwrite="yes">
            <fileset dir="${target.platform}">
                <patternset includes="java${exe.suffix}" />
                <patternset includes="javaw${exe.suffix}" />
            </fileset>
        </copy>

        <!-- Make sure the Linux launcher has execute permission -->
        <chmod file="${target.output}/jre/bin/java${exe.suffix}" perm="ugo+x" />

        <!-- Copy across dependency shared libs -->
        <copy todir="${target.output}/jre/bin" overwrite="yes">
            <fileset dir="${depends.libs}" includes="*${shlib.suffix}*" />
        </copy>

        <!-- Copy across JNI include files -->
        <copy todir="${target.output}/include" overwrite="yes">
            <fileset dir="${native.src.root}/include">
                <include name="jni.h" />
            </fileset>
            <fileset dir="${native.shared.src.root}/include">
                <include name="jniport.h" />
            </fileset>
        </copy>
    </target>


    <!-- ================================= 
          target: clean-layout              
         ================================= -->
    <target name="clean-layout" depends="properties">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${target.output}">
                <include name="**/bin/java${exe.suffix}" />
                <include name="**/bin/javaw${exe.suffix}" />
                <include name="**/bin/*${shlib.suffix}*" />
            </fileset>
        </delete>
    </target>


    <!-- ================================= 
          target: overlay-oss              
         ================================= -->
    <target name="overlay-oss" depends="properties">
        <unzip src="${fdlibm.zip}" dest="${native.src.root}/fdlibm/dist" />
        <chmod dir="${native.src.root}/fdlibm/dist" perm="ugo+r" />

        <unzip src="${zlib.zip}" dest="${native.src.root}/zlib/dist" />
        <chmod dir="${native.src.root}/zlib/dist" perm="ugo+r" />

        <unzip src="${iculib.zip}" dest="${native.src.root}" />
        <chmod dir="${native.src.root}/include/unicode" perm="ugo+r" />
        <chmod dir="${native.src.root}/text" perm="ugo+r" />
    </target>

    <!-- ================================= 
          target: clean-overlay-oss              
         ================================= -->
    <target name="clean-overlay-oss" depends="properties">
        <delete dir="${native.src.root}/fdlibm/dist" quiet="true" />
        <delete dir="${native.src.root}/zlib/dist" quiet="true" />
        <delete dir="${native.src.root}/include/unicode" quiet="true" />
        <!-- should really only delete one of these per platform ... -->
        <delete file="${native.src.root}/text/icuuc.lib" quiet="true" />
        <delete file="${native.src.root}/text/libicuuc.so.34" quiet="true" />
    </target>

</project>
