
This is the JC virtual machine contribution to Apache's Harmony project,
the JC Harmony Edition VM (JCHEVM).

All code in the original contribution was written by me. However many
ideas and algorithms herein were NOT invented by me; rather I just
reimplemented them (with modifications). These are described the
documentation (see doc/jc.texi).

Note that the code in this version has been partially stripped down.
The Java-to-C conversion (C code generator) portion has been disabled.
If you want to play with the complete JCVM, please visit http://jcvm.sf.net/

-------------------------------------------------------------------------------

To build JCHEVM, first understand that you have checked out the Subversion
repository, which is not the same thing as a ready to build distribution
tarball. To build JCHEVM, some files that are part of the distribution and
required for the build (but not checked into the Subversion repository)
must be generated first. However, once you've gone through this process
the first time, you will then also be able to peform subsequent builds
and installs from this, the Subversion-checked-out directory (i.e.,
it's a bit of a bootstrap problem).

To make a checked out version of JCHEVM buildable:

  0. You'll need autoconf, automake, and libtool installed first.
  1. Follow INSTALL step 0 & 1 to install libpopt, libz, and Classpath.
  2. Run "autogen.sh"; you may add "--with-classpath=DIR" to specify
     a non-default Classpath install dir (the default is /usr/local/classpath).
  3. ./configure && make && make install

The default installation directory is /usr/local (change via --prefix flag
to configure); on Linux you may need to run "ldconfig /usr/local/lib".

Alternately, if you can get someone else to build the distribution tarball
for then you and skip steps 0-2. This of course would be the usual case for
average users (rather than developers).

$Id$
