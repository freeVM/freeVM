<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
     
         http://www.apache.org/licenses/LICENSE-2.0
     
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License. -->

<project name="make-snapshot" default="run" basedir=".">

    <!-- initial setup of the HDK workspace -->
    <target name="setup">
        <mkdir dir="${trunk.dir}"/>
    </target>

    <target name="run" depends="do-build,upload"/>

    <target name="do-build">
        <property file="${trunk.dir}/release.properties" prefix="make"/>
        <condition property="co.target" value="-r${make.svn.revision}" else="">
            <isset property="make.svn.revision"/>
        </condition>
        <echo message="Checkout HDK trunk ${co.target} into ${trunk.dir}"/>
        <exec executable="svn" dir="${trunk.dir}" failonerror="true">
            <arg line="co ${co.target} ${svn.url} ." />
        </exec>

        <exec-ant dir="${trunk.dir}" targets="snapshot">
            <jvmarg line="-Xmx1000M"/> 
            <sysproperty key="target.dir" value="${target.dir}"/>
            <sysproperty key="keep.working" value="true"/>
            <sysproperty key="auto.fetch" value="true"/>
            <sysproperty key="hy.cfg" value="${make-snapshot.parameters.optional.cfg}"/>
        </exec-ant>
        <chmod dir="${target.dir}" perm="ugo+rw" includes="*"/>
        <condition property="do.upload">
            <available file="${make-snapshot.parameters.optional.upload.dir}" type="dir"/>
        </condition>
    </target>

    <target name="upload" if="do.upload">
        <condition property="upload.dir" value="${make-snapshot.parameters.optional.upload.dir}/r${make.svn.revision}" 
            else="${make-snapshot.parameters.optional.upload.dir}">
            <isset property="make.svn.revision"/>
        </condition>
        <mkdir dir="${upload.dir}"/>
        <chmod file="${target.dir}" perm="ugo+rw"/>
        <copy todir="${upload.dir}">
            <fileset dir="${target.dir}" includes="*">
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean">
        <exec-ant dir="${trunk.dir}" targets="clean">
            <sysproperty key="hy.cfg" value="${hdk.hy.cfg}"/>
        </exec-ant>
    </target>

    <!-- custom bootstrapper implementation -->
    <target name="bootstrap" depends="-get-revision-file,-refresh-revision-file"/>

    <target name="-get-revision-file">
        <property name="tmp.file" location="${trunk.dir}/target.revision"/>
        <touch file="${tmp.file}"/>
        <get src="${target.revision.file}"
             dest="${tmp.file}"
             verbose="true" />
        <condition property="skip.run">
            <filesmatch file1="${trunk.dir}/release.properties" file2="${tmp.file}"/>
        </condition>
    </target>

    <target name="-refresh-revision-file" unless="skip.run">
        <move file="${tmp.file}" tofile="${trunk.dir}/release.properties"/>
    </target>


</project>

