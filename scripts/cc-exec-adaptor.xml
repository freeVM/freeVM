<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
     
         http://www.apache.org/licenses/LICENSE-2.0
     
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License. -->

<!-- ====================================================================== 
                          CC to Ant Adaptors Execution 
     ====================================================================== -->
<project name="cc-ant" default="cc-publish" basedir=".">

    <property file="${properties.dump.file}"/>
    <property file="${framework.properties.file}"/>
    <import file="${framework.implementation.file}"/>

    <property name="suite.adaptor.dir" 
              value="${root.dir}/adaptors/${suite.name}"/>
    
    <!-- load test suites execution statuses -->
    <property file="${cc.execution.status.file}"/>

    <property name="suite.adaptor.dir" 
              value="${root.dir}/adaptors/${suite.name}"/>
    
    <!-- Called from CC to launch the test suite named ${test.suite} -->
    <target name="cc-run" depends="define-ant-contrib">
        <log message="Test Suite '${suite.name}' execution. Repository updated: ${repository.updated}"/>

        <!-- clear previous status -->
        <replaceregexp file="${cc.execution.status.file}"
                       match="^${suite.name}\.parameters\..*$"
                       replace=""
                       byline="true"/>

        <check-superior-failures
            suite="${suite.name}"
            check-target="run"
            property="failed.superiors"
        />
        <if>
            <isset property="failed.superiors"/>
        <then>
            <!-- write 'skipped' status -->
            <propertyfile file="${cc.execution.status.file}"
                          comment="${cc.execution.status.file.header}.">
                <entry key="${suite.name}.parameters.run.skipped" value="true"/>
            </propertyfile>
            <echo level="warning">
Test Suite '${suite.name}' was not executed (SKIPPED) 
as the following preceding suites on which '${suite.name}' depends upon
failed to run or have been skipped:
    ${failed.superiors}
</echo>
            <fail message="Execution SKIPPED (failed superiors: ${failed.superiors})."/>

        </then>
        </if>

        <echo file="${cc.execution.log.file}" 
              message="&lt;html>&lt;body>"/>
        <echo file="${cc.execution.log.file}" append="true"
              message="&lt;pre>&lt;a style='font-size: 80%;'>"/>
        <record name="${cc.execution.log.file}" append="yes" action="start"/>
        <trycatch property="exception" reference="execution.exception.ref">
        <try>
            <ant dir="${root.dir}/adaptors/${suite.name}" 
                 antfile="adaptor.xml" 
                 target="run"
                 inheritAll="true"/>
            <record name="${cc.execution.log.file}" action="stop"/>
        </try>
        <catch>
            <record name="${cc.execution.log.file}" emacsmode="true"/>
            <echo>
The execution FAILED with the following exception:
${exception}
</echo>
            <record name="${cc.execution.log.file}" action="stop"/>
            <!-- write 'failed' status -->
            <propertyfile file="${cc.execution.status.file}"
                          comment="${cc.execution.status.file.header}.">
                <entry key="${suite.name}.parameters.run.failed" value="true"/>
            </propertyfile>
        </catch>
        </trycatch>
        <echo file="${cc.execution.log.file}" append="true" 
              message="&lt;/a>&lt;/pre>"/>
        <echo file="${cc.execution.log.file}" append="true" 
              message="&lt;/body>&lt;/html>"/>
        <fail message="${exception}" if="exception"/>
    </target>

    <!-- Called from CC to launch the custom ant publisher for test suite -->
    <!-- Does nothing if the execution has been skipped (due to failures
         of preceding suites) -->
    <target name="cc-publish-custom" 
            depends="define-ant-contrib"
            if="framework.parameters.usemail" 
            unless="${suite.name}.parameters.run.skipped">
        <dirname property="publisher.dir" file="${publisher.location}"/>
        <log message="Calling Custom Publisher ${publisher.location} at ${publisher.dir} for ${suite.name}"/>
        <ant dir="${publisher.dir}" 
             antfile="${publisher.location}" 
             target="publish"
             inheritAll="true"/>
    </target>
    
    <!-- Called from CC to launch the default ant publisher for test suite -->
    <target name="cc-publish" 
            depends="define-ant-contrib"
            if="framework.parameters.usemail"
            unless="${suite.name}.parameters.run.skipped">
        <!-- attach execution log file in case of failure -->
        <if>
            <and>
                <isfalse value="${thisbuildsuccessful}"/>
                <not><isset 
                    property="framewrok.parameters.usemail.suppress.exelogs"/>
                </not>
                <not><isset 
                    property="${suite.name}.parameters.mail.suppress.exelogs"/>
                </not>
                <available file="${cc.execution.log.file}"/>
            </and>
        <then>
            <delete file="${temp.files.dir}/execution_log.zip" 
                    failonerror="false"/>
            <zip destfile="${temp.files.dir}/execution_log.zip">
                <fileset file="${cc.execution.log.file}"/>
            </zip>
            <property name="mail.execution.log" 
                 value="${temp.files.dir}/execution_log.zip"/>
        </then>
        </if>

        <!-- compose message from CC logs (it there is no message file
             provided by test suite) -->
        <if>
            <not>
            <or>
                <isset property="${suite.name}.parameters.cc.message"/>
                <isset property="${suite.name}.parameters.mail.message"/>
            </or>
            </not>
        <then>
            <runtarget target="-compose-message-file"/>
        </then>
        </if>

        <!-- do mail notifiaction -->
        <ant dir="${scripts.dir}" 
             antfile="${scripts.dir}/publisher.xml" 
             target="publish"
             inheritAll="false">
            <propertyset>
                <!-- use test suite specific mail parameters -->
                <propertyref prefix="${suite.name}.parameters.mail."/>
                <globmapper from="${suite.name}.parameters.mail.*" to="mail.*"/>
            </propertyset>
            <propertyset>
                <!-- use test suite specific cc parameters -->
                <propertyref name="${suite.name}.parameters.cc.to"/>
                <propertyref name="${suite.name}.parameters.cc.from"/>
                <propertyref name="${suite.name}.parameters.cc.message"/>
                <propertyref name="${suite.name}.parameters.cc.summary"/>
                <propertyref name="${suite.name}.parameters.cc.attachs"/>
                <globmapper from="${suite.name}.parameters.cc.*" to="mail.*"/>
            </propertyset>
            <propertyset>
                <!-- use framework defined cc parameters -->
                <propertyref prefix="framework.parameters.usemail"/>
                <globmapper from="framework.parameters.usemail*" to="mail*"/>
            </propertyset>
            <propertyset>
                <propertyref name="thisbuildsuccessful"/>
                <propertyref name="lastbuildsuccessful"/>
                <propertyref regex="^framework.parameters.*"/>
                <propertyref regex="^mail.*"/>
            </propertyset>
        </ant>
        
    </target>

    <!-- compose message from CC logs -->
    <target name="-compose-message-file"
            unless="mail.message">
        <property name="cc.xsl.files.dir"
                  value="${ext.cc.location}/webapps/cruisecontrol/xsl"/>
        <property name="mail.message"
                  value="${temp.files.dir}/${suite.name}-email-message.txt"/>
        <xslt basedir="${scripts.dir}/xslt"
              in="${logdir}/${logfile}"
              style="${scripts.dir}/xslt/br.xsl"
              out="${mail.message}"
              classpath="${ext.xalan.location}:${ext.cc.location}/lib/serializer-2.7.0.jar"/>
    </target>

</project>
