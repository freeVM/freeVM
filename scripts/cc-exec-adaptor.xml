<?xml version="1.0" encoding="UTF-8"?>
<!-- 
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at
     
         http://www.apache.org/licenses/LICENSE-2.0
     
     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License. -->

<!-- ====================================================================== 
                          CC to Ant Adaptors Execution 
     ====================================================================== -->
<project name="cc-ant" default="cc-publish" basedir=".">

    <property file="${properties.dump.file}"/>
    <property file="${framework.properties.file}"/>
    <import file="${framework.implementation.file}"/>

    <!-- Called from CC to launch the test suite named ${test.suite} -->
    <target name="cc-run" depends="define-ant-contrib">
        <property name="suite.adaptor.dir" value="${root.dir}/adaptors/${suite.name}"/>
        <log message="Test Suite '${suite.name}' execution. Repository updated: ${repository.updated}"/>
        <ant dir="${root.dir}/adaptors/${suite.name}" 
             antfile="adaptor.xml" 
             target="run"
             inheritAll="true"/>
    </target>

    <!-- Called from CC to launch the custom ant publisher for test suite -->
    <target name="cc-publish-custom" 
            depends="define-ant-contrib"
            if="framework.parameters.usemail">
        <dirname property="publisher.dir" file="${publisher.location}"/>
        <log message="Calling Custom Publisher ${publisher.location} at ${publisher.dir} for ${suite.name}"/>
        <ant dir="${publisher.dir}" 
             antfile="${publisher.location}" 
             target="publish"
             inheritAll="true"/>
    </target>
    
    <!-- Called from CC to launch the default ant publisher for test suite -->
    <target name="cc-publish" 
            depends="define-ant-contrib"
            if="framework.parameters.usemail">

        <!-- set up mail message file (if it was defined by test suite) -->
        <get-parameter-value
            property="mail.message.file" 
            parameter="${suite.name}.parameters.cc.message"/>
        <!-- set up mail message summary file
             (if it was defined by test suite) -->
        <get-parameter-value
            property="mail.summary.file" 
            parameter="${suite.name}.parameters.cc.summary"/>
        <!-- set up mail attachments -->
        <get-parameter-value
            property="mail.attach.files" 
            parameter="${suite.name}.parameters.cc.attachs"/>

        <!-- compose message from CC logs (it there is no mail.message.file) -->
        <runtarget target="-compose-message-file"/>

        <!-- do mail notifiaction -->
        <ant dir="${scripts.dir}" 
             antfile="${scripts.dir}/publisher.xml" 
             target="publish"
             inheritAll="false">
            <!-- if there are Test Suite specific 'to' and 'from' addresses
                 use them for mailing -->
            <propertyset>
                <propertyref name="${suite.name}.parameters.cc.to"/>
                <propertyref name="${suite.name}.parameters.cc.from"/>
                <globmapper from="${suite.name}.parameters.cc.*" to="framework.parameters.usemail.*"/>
            </propertyset>
            <propertyset>
                <propertyref name="thisbuildsuccessful"/>
                <propertyref name="lastbuildsuccessful"/>
                <propertyref regex="framework.parameters.*"/>
                <propertyref regex="mail.*"/>
            </propertyset>
        </ant>
        
    </target>

    <!-- compose message from CC logs -->
    <target name="-compose-message-file"
            unless="mail.message.file">
        <property name="cc.xsl.files.dir"
                  value="${ext.cc.location}/webapps/cruisecontrol/xsl"/>
        <property name="mail.message.file"
                  value="${temp.files.dir}/${suite.name}-email-message.txt"/>
        <xslt basedir="${scripts.dir}/xslt"
              in="${logdir}/${logfile}"
              style="${scripts.dir}/xslt/br.xsl"
              out="${mail.message.file}"
              classpath="${ext.xalan.location}:${ext.cc.location}/lib/serializer-2.7.0.jar"/>
    </target>

    <!-- places the value of the parameter to the provided property -->
    <macrodef name="get-parameter-value">
        <attribute name="parameter"/>
        <attribute name="property"/>
        <sequential>
            <condition property="@{property}" value="${@{parameter}}">
                <isset property="@{parameter}"/>
            </condition>
        </sequential>
    </macrodef>

</project>
